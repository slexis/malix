if((typeof module)!=='undefined'){nerdamer=require('./nerdamer.core.js');require('./Calculus.js')}(function(){"use strict";var core=nerdamer.getCore(),_=core.PARSER,N=core.groups.N,P=core.groups.P,S=core.groups.S,EX=core.groups.EX,FN=core.groups.FN,PL=core.groups.PL,CP=core.groups.CP,CB=core.groups.CB,keys=core.Utils.keys,variables=core.Utils.variables,round=core.Utils.round,Frac=core.Frac,isInt=core.Utils.isInt,Symbol=core.Symbol,CONST_HASH=core.Settings.CONST_HASH,math=core.Utils.importFunctions();function Polynomial(symbol,variable,order){if(core.Utils.isSymbol(symbol)){this.parse(symbol)}else if(!isNaN(symbol)){order=order||0;if(variable===undefined)throw new Error('Polynomial expects a variable name when creating using order');this.coeffs=[];this.coeffs[order]=symbol;this.fill(symbol)}else if(typeof symbol==='string'){this.parse(_.parse(symbol))}}Polynomial.fromArray=function(arr,variable){if(typeof variable==='undefined')throw new Error('A variable name must be specified when creating polynomial from array');var p=new Polynomial();p.coeffs=arr;p.variable=variable;return p};Polynomial.fit=function(c1,c2,n,base,p,variable){var terms=new Array(p+1),t=n-c2;terms[0]=c2;terms[p]=c1;t-=c1*Math.pow(base,p);for(var i=p-1;i>0;i--){var b=Math.pow(base,i),q=t/b,sign=Math.sign(q);var c=sign*Math.floor(Math.abs(q));t-=c*b;terms[i]=c}if(t!==0)return null;for(var i=0;i<terms.length;i++)terms[i]=new Frac(terms[i]);return Polynomial.fromArray(terms,variable)};Polynomial.prototype={parse:function(symbol,c){this.variable=variables(symbol)[0];if(!symbol.isPoly())throw new Error('Polynomial Expected! Received '+core.Utils.text(symbol));c=c||[];if(!symbol.power.absEquals(1))symbol=_.expand(symbol);if(symbol.group===core.groups.N){c[0]=symbol.multiplier}else if(symbol.group===core.groups.S){c[symbol.power.toDecimal()]=symbol.multiplier}else{for(var x in symbol.symbols){var sub=symbol.symbols[x],p=sub.power;if(core.Utils.isSymbol(p))throw new Error('power cannot be a Symbol');p=sub.group===N?0:p.toDecimal();if(sub.symbols){this.parse(sub,c)}else{c[p]=sub.multiplier}}}this.coeffs=c;this.fill()},fill:function(x){x=Number(x)||0;var l=this.coeffs.length;for(var i=0;i<l;i++){if(this.coeffs[i]===undefined){this.coeffs[i]=new Frac(x)}}return this},trim:function(){var l=this.coeffs.length;while(l--){var c=this.coeffs[l];var equalsZero=c.equals(0);if(c&&equalsZero){if(l===0)break;this.coeffs.pop()}else break}return this},modP:function(p){var l=this.coeffs.length;for(var i=0;i<l;i++){var c=this.coeffs[i];if(c<0){var b;for(var j=i;j<l;j++){if(this.coeffs[j]>0){b=this.coeffs[j];break}}if(b){for(j;j>i;j--){this.coeffs[j]=this.coeffs[j].subtract(new Frac(1));this.coeffs[j-1]=this.coeffs[j-1].add(new Frac(p))}c=this.coeffs[i]}}var d=c.mod(p);var w=c.subtract(d).divide(p);if(!w.equals(0)){var up_one=i+1;var next=this.coeffs[up_one]||new Frac(0);next=next.add(w);this.coeffs[up_one]=new Frac(next);this.coeffs[i]=new Frac(d)}}return this},add:function(poly){var l=Math.max(this.coeffs.length,poly.coeffs.length);for(var i=0;i<l;i++){var a=(this.coeffs[i]||new Frac(0)),b=(poly.coeffs[i]||new Frac(0));this.coeffs[i]=a.add(b)}return this},subtract:function(poly){var l=Math.max(this.coeffs.length,poly.coeffs.length);for(var i=0;i<l;i++){var a=(this.coeffs[i]||new Frac(0)),b=(poly.coeffs[i]||new Frac(0));this.coeffs[i]=a.subtract(b)}return this},divide:function(poly){var variable=this.variable,dividend=core.Utils.arrayClone(this.coeffs),divisor=core.Utils.arrayClone(poly.coeffs),n=dividend.length,mp=divisor.length-1,quotient=[];for(var i=0;i<n;i++){var p=n-(i+1);var d=p-mp;var q=dividend[p].divide(divisor[mp]);if(d<0)break;quotient[d]=q;for(var j=0;j<=mp;j++){dividend[j+d]=dividend[j+d].subtract((divisor[j].multiply(q)))}}var p1=Polynomial.fromArray(dividend,variable||'x').trim(),p2=Polynomial.fromArray(quotient,variable||'x');return[p2,p1]},multiply:function(poly){var l1=this.coeffs.length,l2=poly.coeffs.length,c=[];for(var i=0;i<l1;i++){var x1=this.coeffs[i];for(var j=0;j<l2;j++){var k=i+j,x2=poly.coeffs[j],e=c[k]||new Frac(0);c[k]=e.add(x1.multiply(x2))}}this.coeffs=c;return this},isZero:function(){var l=this.coeffs.length;for(var i=0;i<l;i++){var e=this.coeffs[i];if(!e.equals(0))return!1}return!0},sub:function(n){var sum=new Frac(0),l=this.coeffs.length;for(var i=0;i<l;i++){var t=this.coeffs[i];if(!t.equals(0))sum=sum.add(t.multiply(new Frac(Math.pow(n,i))))}return sum},clone:function(){var p=new Polynomial();p.coeffs=this.coeffs;p.variable=this.variable;return p},deg:function(){this.trim();return this.coeffs.length-1},lc:function(){return this.coeffs[this.deg()].clone()},monic:function(){var lc=this.lc(),l=this.coeffs.length;for(var i=0;i<l;i++)this.coeffs[i]=this.coeffs[i].divide(lc);return this},gcd:function(poly){var mp1=this.coeffs.length-1,mp2=poly.coeffs.length-1,T;if(mp1<mp2){return poly.gcd(this)}var a=this;while(!poly.isZero()){var t=poly.clone();a=a.clone();T=a.divide(t);poly=T[1];a=t}var gcd=core.Math2.QGCD.apply(null,a.coeffs);if(!gcd.equals(1)){var l=a.coeffs.length;for(var i=0;i<l;i++){a.coeffs[i]=a.coeffs[i].divide(gcd)}}return a},diff:function(){var new_array=[],l=this.coeffs.length;for(var i=1;i<l;i++)new_array.push(this.coeffs[i].multiply(new Frac(i)));this.coeffs=new_array;return this},integrate:function(){var new_array=[0],l=this.coeffs.length;for(var i=0;i<l;i++){var c=new Frac(i+1);new_array[c]=this.coeffs[i].divide(c)}this.coeffs=new_array;return this},gcf:function(toPolynomial){var fnz=function(a){for(var i=0;i<a.length;i++)
if(!a[i].equals(0))return i},ca=[];for(var i=0;i<this.coeffs.length;i++){var c=this.coeffs[i];if(!c.equals(0)&&ca.indexOf(c)===-1)ca.push(c)}var p=[core.Math2.QGCD.apply(undefined,ca),fnz(this.coeffs)].toDecimal();if(toPolynomial){var parr=[];parr[p[1]-1]=p[0];p=Polynomial.fromArray(parr,this.variable).fill()}return p},quad:function(incl_img){var roots=[];if(this.coeffs.length>3)throw new Error('Cannot calculate quadratic order of '+(this.coeffs.length-1));if(this.coeffs.length===0)throw new Error('Polynomial array has no terms');var a=this.coeffs[2]||0,b=this.coeffs[1]||0,c=this.coeffs[0];var dsc=b*b-4*a*c;if(dsc<0&&!incl_img)return roots;else{roots[0]=(-b+Math.sqrt(dsc))/(2*a);roots[1]=(-b-Math.sqrt(dsc))/(2*a)}return roots},squareFree:function(){var a=this.clone(),i=1,b=a.clone().diff(),c=a.clone().gcd(b),w=a.divide(c)[0];var output=Polynomial.fromArray([new Frac(1)],a.variable);while(!c.equalsNumber(1)){var y=w.gcd(c);var z=w.divide(y)[0];if(!z.equalsNumber(1)&&i>1){var t=z.clone();for(var j=1;j<i;j++)t.multiply(z.clone());z=t}output=output.multiply(z);i++;w=y;c=c.divide(y)[0]}return[output,w,i]},toSymbol:function(){var l=this.coeffs.length,variable=this.variable;if(l===0)return new core.Symbol(0);var end=l-1,str='';for(var i=0;i<l;i++){var plus=i===end?'':'+',e=this.coeffs[i];if(!e.equals(0))str+=(e+'*'+variable+'^'+i+plus)}return _.parse(str)},equalsNumber:function(x){this.trim();return this.coeffs.length===1&&this.coeffs[0].toDecimal()===String(x)},toString:function(){return this.toSymbol().toString()}};Symbol.prototype.coeffs=function(c,with_order){if(with_order&&!this.isPoly(!0))_.error('Polynomial expected when requesting coefficients with order');c=c||[];var s=this.clone().distributeMultiplier();if(s.isComposite()){for(var x in s.symbols){var sub=s.symbols[x];if(sub.isComposite()){sub.clone().distributeMultiplier().coeffs(c,with_order)}else{if(with_order)c[sub.isConstant()?0:sub.power.toDecimal()]=sub.multiplier;else c.push(sub.multiplier)}}}else{if(with_order)c[s.isConstant()?0:s.power.toDecimal()]=s.multiplier;else c.push(s.multiplier)}if(with_order){for(var i=0;i<c.length;i++)
if(c[i]===undefined)c[i]=new Frac(0);}return c};Symbol.prototype.tBase=function(map){if(typeof map==='undefined')throw new Error('Symbol.tBase requires a map object!');var terms=[];var symbols=this.collectSymbols(null,null,null,!0),l=symbols.length;for(var i=0;i<l;i++){var symbol=symbols[i],g=symbol.group,nterm=new MVTerm(symbol.multiplier,[],map);if(g===CB){for(var x in symbol.symbols){var sym=symbol.symbols[x];nterm.terms[map[x]]=sym.power}}else{nterm.terms[map[symbol.value]]=symbol.power}terms.push(nterm.fill());nterm.updateCount()}return terms};Symbol.prototype.altVar=function(x){var m=this.multiplier.toString(),p=this.power.toString();return(m==='1'?'':m+'*')+x+(p==='1'?'':'^'+p)};Symbol.prototype.sameVars=function(symbol){if(!(this.symbols||this.group===symbol.group))return!1;for(var x in this.symbols){var a=this.symbols[x],b=symbol.symbols[x];if(!b)return!1;if(a.value!==b.value)return!1}return!0};Symbol.prototype.groupTerms=function(x){x=String(x);var f,p,egrouped;var grouped=[];this.each(function(e){if(e.group===PL){egrouped=e.groupTerms(x);for(var i=0;i<egrouped.length;i++){var el=egrouped[i];if(el)grouped[i]=el}}else{f=core.Utils.decompose_fn(e,x,!0);p=f.x.value===x?Number(f.x.power):0;grouped[p]=_.add(grouped[p]||new Symbol(0),f.a)}});return grouped};Symbol.prototype.collectFactors=function(){var factors=[];if(this.group===CB)this.each(function(x){factors.push(x.clone())});else factors.push(this.clone());return factors};function Factors(){this.factors={}};Factors.prototype.add=function(s){if(s.equals(0))return this;if(s.group===CB){var factors=this;if(!s.multiplier.equals(1))factors.add(new Symbol(s.multiplier));s.each(function(x){factors.add(x)})}else{if(this.preAdd)s=this.preAdd(s);if(this.pFactor)s=_.pow(s,new Symbol(this.pFactor));var is_constant=s.isConstant();if(is_constant&&s.equals(1))return this;var v=is_constant?s.value:s.text();if(v in this.factors)this.factors[v]=_.multiply(this.factors[v],s);else this.factors[v]=s}return this};Factors.prototype.toSymbol=function(){var factored=new Symbol(1);for(var x in this.factors){var f=this.factors[x],g=f.group;var factor=f.power.equals(1)?_.symfunction(core.PARENTHESIS,[this.factors[x]]):this.factors[x];factored=_.multiply(factored,factor)}if(factored.fname==='')factored=Symbol.unwrapPARENS(factored);return factored};Factors.prototype.merge=function(o){for(var x in o){if(x in this.factors)this.factors[x]=_.multiply(this.factors[x],o[x]);else this.factors[x]=o[x]}return this};Factors.prototype.each=function(f){for(var x in this.factors){var factor=this.factors[x];if(factor.fname===core.PARENTHESIS&&factor.isLinear())factor=factor.args[0];f.call(this,factor,x)}return this};Factors.prototype.count=function(){return keys(this.factors).length};Factors.prototype.clean=function(){try{var h=core.Settings.CONST_HASH;if(this.factors[h].lessThan(0)){if(this.factors[h].equals(-1))delete this.factors[h];else this.factors[h].negate();this.each(function(x){x.negate()})}}catch(e){}};Factors.prototype.toString=function(){return this.toSymbol().toString()};function MVTerm(coeff,terms,map){this.terms=terms||[];this.coeff=coeff;this.map=map;this.sum=new core.Frac(0);this.image=undefined};MVTerm.prototype.updateCount=function(){this.count=this.count||0;for(var i=0;i<this.terms.length;i++){if(!this.terms[i].equals(0))this.count++}return this};MVTerm.prototype.getVars=function(){var vars=[];for(var i=0;i<this.terms.length;i++){var term=this.terms[i],rev_map=this.getRevMap();if(!term.equals(0))vars.push(this.rev_map[i])}return vars.join(' ')};MVTerm.prototype.len=function(){if(typeof this.count==='undefined'){this.updateCount()}return this.count};MVTerm.prototype.toSymbol=function(rev_map){rev_map=rev_map||this.getRevMap();var symbol=new Symbol(this.coeff);for(var i=0;i<this.terms.length;i++){var v=rev_map[i],t=this.terms[i];if(t.equals(0)||v===CONST_HASH)continue;var mapped=new Symbol(v);mapped.power=t;symbol=_.multiply(symbol,mapped)}return symbol};MVTerm.prototype.getRevMap=function(){if(this.rev_map)return this.rev_map;var o={};for(var x in this.map)o[this.map[x]]=x;this.rev_map=o;return o};MVTerm.prototype.generateImage=function(){this.image=this.terms.join(' ');return this},MVTerm.prototype.getImg=function(){if(!this.image)this.generateImage();return this.image},MVTerm.prototype.fill=function(){var l=this.map.length;for(var i=0;i<l;i++){if(typeof this.terms[i]==='undefined')this.terms[i]=new core.Frac(0);else{this.sum=this.sum.add(this.terms[i])}}return this};MVTerm.prototype.divide=function(mvterm){var c=this.coeff.divide(mvterm.coeff),l=this.terms.length,new_mvterm=new MVTerm(c,[],this.map);for(var i=0;i<l;i++){new_mvterm.terms[i]=this.terms[i].subtract(mvterm.terms[i]);new_mvterm.sum=new_mvterm.sum.add(new_mvterm.terms[i])}return new_mvterm};MVTerm.prototype.multiply=function(mvterm){var c=this.coeff.multiply(mvterm.coeff),l=this.terms.length,new_mvterm=new MVTerm(c,[],this.map);for(var i=0;i<l;i++){new_mvterm.terms[i]=this.terms[i].add(mvterm.terms[i]);new_mvterm.sum=new_mvterm.sum.add(new_mvterm.terms[i])}return new_mvterm};MVTerm.prototype.isZero=function(){return this.coeff.equals(0)};MVTerm.prototype.toString=function(){return'{ coeff: '+this.coeff.toString()+', terms: ['+this.terms.join(',')+']: sum: '+this.sum.toString()+', count: '+this.count+'}'};core.Utils.toMapObj=function(arr){var c=0,o={};for(var i=0;i<arr.length;i++){var v=arr[i];if(typeof o[v]==='undefined'){o[v]=c;c++}}o.length=c;return o};core.Utils.filledArray=function(v,n,clss){var a=[];while(n--){a[n]=clss?new clss(v):v}return a};core.Utils.arrSum=function(arr){var sum=0,l=arr.length;for(var i=0;i<l;i++)sum+=arr[i];return sum};core.Utils.haveIntersection=function(a,b){var t;if(b.length>a.length)t=b,b=a,a=t;return a.some(function(e){return b.indexOf(e)>-1})};core.Utils.subFunctions=function(symbol,map){map=map||{};var subbed=[];symbol.each(function(x){if(x.group===FN||x.previousGroup===FN){var val=core.Utils.text(x,'hash'),tvar=map[val];if(!tvar){var t=x.fname+keys(map).length;map[val]=t;subbed.push(x.altVar(t))}else subbed.push(x.altVar(tvar))}else if(x.group===CB||x.group===PL||x.group===CP){subbed.push(core.Utils.subFunctions(x,map))}else subbed.push(x.text())});if(symbol.group===CP||symbol.group===PL)return symbol.altVar(core.Utils.inBrackets(subbed.join('+')));if(symbol.group===CB)return symbol.altVar(core.Utils.inBrackets(subbed.join('*')));return symbol.text()};core.Utils.getFunctionsSubs=function(map){var subs={};for(var x in map)subs[map[x]]=_.parse(x);return subs};var __=core.Algebra={version:'1.4.5',init:(function(){})(),proots:function(symbol,decp){decp=decp||7;var zeros=0;var known_roots=[];var get_roots=function(rarr,powers,max){var roots=calcroots(rarr,powers,max).concat(known_roots);for(var i=0;i<zeros;i++)roots.unshift(0);return roots};if(symbol instanceof Symbol&&symbol.isPoly()){symbol.distributeMultiplier();if(symbol.group===PL){var lowest_pow=core.Utils.arrayMin(keys(symbol.symbols));var lowest_symbol=symbol.symbols[lowest_pow].clone().toUnitMultiplier();symbol=_.expand(_.divide(symbol,lowest_symbol));known_roots.push(0)}if(symbol.group===core.groups.S){return[0]}else if(symbol.group===core.groups.PL){var powers=keys(symbol.symbols),minpower=core.Utils.arrayMin(powers),symbol=core.PARSER.divide(symbol,core.PARSER.parse(symbol.value+'^'+minpower))}var variable=keys(symbol.symbols).sort().pop(),sym=symbol.group===core.groups.PL?symbol.symbols:symbol.symbols[variable],g=sym.group,powers=g===S?[sym.power.toDecimal()]:keys(sym.symbols),rarr=[],max=core.Utils.arrayMax(powers);for(var i=1;i<=max;i++){var c=0;if(powers.indexOf(i+'')!==-1){if(g===S){c=sym.multiplier}else{c=sym.symbols[i].multiplier}}rarr.unshift(c)}rarr.push(symbol.symbols[CONST_HASH].multiplier);if(sym.group===S)rarr[0]=sym.multiplier;return get_roots(rarr,powers,max)}else if(core.Utils.isArray(symbol)){var parr=symbol;var rarr=[],powers=[],last_power=0;for(var i=0;i<parr.length;i++){var coeff=parr[i][0],pow=parr[i][1],d=pow-last_power-1;for(var j=0;j<d;j++)rarr.unshift(0);rarr.unshift(coeff);if(pow!==0)powers.push(pow);last_power=pow}var max=Math.max.apply(undefined,powers);return get_roots(rarr,powers,max)}else{throw new Error('Cannot calculate roots. Symbol must be a polynomial!')}
function calcroots(rarr,powers,max){var MAXDEGREE=100;var p=rarr.slice(0);rarr.unshift(max);if(max>MAXDEGREE){throw new Error("This utility accepts polynomials of degree up to "+MAXDEGREE+". ")}var zeroi=[],degreePar={};degreePar.Degree=max;for(i=0;i<max;i++){zeroi.push(0)}var zeror=zeroi.slice(0);function QuadSD_ak1(NN,u,v,p,q,iPar){q[0]=iPar.b=p[0];q[1]=iPar.a=-(u*iPar.b)+p[1];for(var i=2;i<NN;i++){q[i]=-(u*iPar.a+v*iPar.b)+p[i];iPar.b=iPar.a;iPar.a=q[i]}return}
function calcSC_ak1(DBL_EPSILON,N,a,b,iPar,K,u,v,qk){var sdPar=new Object(),dumFlag=3;sdPar.b=sdPar.a=0.0;QuadSD_ak1(N,u,v,K,qk,sdPar);iPar.c=sdPar.a;iPar.d=sdPar.b;if(Math.abs(iPar.c)<=(100.0*DBL_EPSILON*Math.abs(K[N-1]))){if(Math.abs(iPar.d)<=(100.0*DBL_EPSILON*Math.abs(K[N-2])))return dumFlag}iPar.h=v*b;if(Math.abs(iPar.d)>=Math.abs(iPar.c)){dumFlag=2;iPar.e=a/(iPar.d);iPar.f=(iPar.c)/(iPar.d);iPar.g=u*b;iPar.a3=(iPar.e)*((iPar.g)+a)+(iPar.h)*(b/(iPar.d));iPar.a1=-a+(iPar.f)*b;iPar.a7=(iPar.h)+((iPar.f)+u)*a}else{dumFlag=1;iPar.e=a/(iPar.c);iPar.f=(iPar.d)/(iPar.c);iPar.g=(iPar.e)*u;iPar.a3=(iPar.e)*a+((iPar.g)+(iPar.h)/(iPar.c))*b;iPar.a1=-(a*((iPar.d)/(iPar.c)))+b;iPar.a7=(iPar.g)*(iPar.d)+(iPar.h)*(iPar.f)+a}return dumFlag}
function nextK_ak1(DBL_EPSILON,N,tFlag,a,b,iPar,K,qk,qp){var temp;if(tFlag==3){K[1]=K[0]=0.0;for(var i=2;i<N;i++){K[i]=qk[i-2]}return}temp=((tFlag==1)?b:a);if(Math.abs(iPar.a1)>(10.0*DBL_EPSILON*Math.abs(temp))){iPar.a7/=iPar.a1;iPar.a3/=iPar.a1;K[0]=qp[0];K[1]=-(qp[0]*iPar.a7)+qp[1];for(var i=2;i<N;i++)K[i]=-(qp[i-1]*iPar.a7)+qk[i-2]*iPar.a3+qp[i]}else{K[0]=0.0;K[1]=-(qp[0]*iPar.a7);for(var i=2;i<N;i++){K[i]=-(qp[i-1]*iPar.a7)+qk[i-2]*iPar.a3}}return}
function newest_ak1(tFlag,iPar,a,a1,a3,a7,b,c,d,f,g,h,u,v,K,N,p){var a4,a5,b1,b2,c1,c2,c3,c4,temp;iPar.b=iPar.a=0.0;if(tFlag!=3){if(tFlag!=2){a4=a+u*b+h*f;a5=c+(u+v*f)*d}else{a4=(a+g)*f+h;a5=(f+u)*c+v*d}b1=-(K[N-1]/p[N]);b2=-(K[N-2]+b1*p[N-1])/p[N];c1=v*b2*a1;c2=b1*a7;c3=b1*b1*a3;c4=-(c2+c3)+c1;temp=-c4+a5+b1*a4;if(temp!=0.0){iPar.a=-((u*(c3+c2)+v*(b1*a1+b2*a7))/temp)+u;iPar.b=v*(1.0+c4/temp)}}return}
function Quad_ak1(a,b1,c,iPar){var b,d,e;iPar.sr=iPar.si=iPar.lr=iPar.li=0.0;if(a==0){iPar.sr=((b1!=0)?-(c/b1):iPar.sr);return}if(c==0){iPar.lr=-(b1/a);return}b=b1/2.0;if(Math.abs(b)<Math.abs(c)){e=((c>=0)?a:-a);e=-e+b*(b/Math.abs(c));d=Math.sqrt(Math.abs(e))*Math.sqrt(Math.abs(c))}else{e=-((a/b)*(c/b))+1.0;d=Math.sqrt(Math.abs(e))*(Math.abs(b))}if(e>=0){d=((b>=0)?-d:d);iPar.lr=(-b+d)/a;iPar.sr=((iPar.lr!=0)?(c/(iPar.lr))/a:iPar.sr)}else{iPar.lr=iPar.sr=-(b/a);iPar.si=Math.abs(d/a);iPar.li=-(iPar.si)}return}
function QuadIT_ak1(DBL_EPSILON,N,iPar,uu,vv,qp,NN,sdPar,p,qk,calcPar,K){var qPar=new Object(),ee,mp,omp,relstp,t,u,ui,v,vi,zm,i,j=0,tFlag,triedFlag=0;iPar.NZ=0;u=uu;v=vv;do{qPar.li=qPar.lr=qPar.si=qPar.sr=0.0;Quad_ak1(1.0,u,v,qPar);iPar.szr=qPar.sr;iPar.szi=qPar.si;iPar.lzr=qPar.lr;iPar.lzi=qPar.li;if(Math.abs(Math.abs(iPar.szr)-Math.abs(iPar.lzr))>0.01*Math.abs(iPar.lzr))break;QuadSD_ak1(NN,u,v,p,qp,sdPar);mp=Math.abs(-((iPar.szr)*(sdPar.b))+(sdPar.a))+Math.abs((iPar.szi)*(sdPar.b));zm=Math.sqrt(Math.abs(v));ee=2.0*Math.abs(qp[0]);t=-((iPar.szr)*(sdPar.b));for(i=1;i<N;i++){ee=ee*zm+Math.abs(qp[i])}ee=ee*zm+Math.abs(t+sdPar.a);ee=(9.0*ee+2.0*Math.abs(t)-7.0*(Math.abs((sdPar.a)+t)+zm*Math.abs((sdPar.b))))*DBL_EPSILON;if(mp<=20.0*ee){iPar.NZ=2;break}j++;if(j>20)break;if(j>=2){if((relstp<=0.01)&&(mp>=omp)&&(!triedFlag)){relstp=((relstp<DBL_EPSILON)?Math.sqrt(DBL_EPSILON):Math.sqrt(relstp));u-=u*relstp;v+=v*relstp;QuadSD_ak1(NN,u,v,p,qp,sdPar);for(i=0;i<5;i++){tFlag=calcSC_ak1(DBL_EPSILON,N,sdPar.a,sdPar.b,calcPar,K,u,v,qk);nextK_ak1(DBL_EPSILON,N,tFlag,sdPar.a,sdPar.b,calcPar,K,qk,qp)}triedFlag=1;j=0}}omp=mp;tFlag=calcSC_ak1(DBL_EPSILON,N,sdPar.a,sdPar.b,calcPar,K,u,v,qk);nextK_ak1(DBL_EPSILON,N,tFlag,sdPar.a,sdPar.b,calcPar,K,qk,qp);tFlag=calcSC_ak1(DBL_EPSILON,N,sdPar.a,sdPar.b,calcPar,K,u,v,qk);newest_ak1(tFlag,sdPar,sdPar.a,calcPar.a1,calcPar.a3,calcPar.a7,sdPar.b,calcPar.c,calcPar.d,calcPar.f,calcPar.g,calcPar.h,u,v,K,N,p);ui=sdPar.a;vi=sdPar.b;if(vi!=0){relstp=Math.abs((-v+vi)/vi);u=ui;v=vi}}while(vi!=0);return}
function RealIT_ak1(DBL_EPSILON,iPar,sdPar,N,p,NN,qp,K,qk){var ee,kv,mp,ms,omp,pv,s,t,dumFlag,i,j,nm1=N-1;iPar.NZ=j=dumFlag=0;s=sdPar.a;for(;;){pv=p[0];qp[0]=pv;for(i=1;i<NN;i++){qp[i]=pv=pv*s+p[i]}mp=Math.abs(pv);ms=Math.abs(s);ee=0.5*Math.abs(qp[0]);for(i=1;i<NN;i++){ee=ee*ms+Math.abs(qp[i])}if(mp<=20.0*DBL_EPSILON*(2.0*ee-mp)){iPar.NZ=1;iPar.szr=s;iPar.szi=0.0;break}j++;if(j>10)break;if(j>=2){if((Math.abs(t)<=0.001*Math.abs(-t+s))&&(mp>omp)){dumFlag=1;iPar.a=s;break}}omp=mp;qk[0]=kv=K[0];for(i=1;i<N;i++){qk[i]=kv=kv*s+K[i]}if(Math.abs(kv)>Math.abs(K[nm1])*10.0*DBL_EPSILON){t=-(pv/kv);K[0]=qp[0];for(i=1;i<N;i++){K[i]=t*qk[i-1]+qp[i]}}else{K[0]=0.0;for(i=1;i<N;i++)K[i]=qk[i-1]}kv=K[0];for(i=1;i<N;i++){kv=kv*s+K[i]}t=((Math.abs(kv)>(Math.abs(K[nm1])*10.0*DBL_EPSILON))?-(pv/kv):0.0);s+=t}return dumFlag}
function Fxshfr_ak1(DBL_EPSILON,MDP1,L2,sr,v,K,N,p,NN,qp,u,iPar){var sdPar=new Object(),calcPar=new Object(),qk=new Array(MDP1),svk=new Array(MDP1),a,b,betas,betav,oss,ots,otv,ovv,s,ss,ts,tss,tv,tvv,ui,vi,vv,fflag,i,iFlag=1,j,spass,stry,tFlag,vpass,vtry;iPar.NZ=0;betav=betas=0.25;oss=sr;ovv=v;sdPar.b=sdPar.a=0.0;QuadSD_ak1(NN,u,v,p,qp,sdPar);a=sdPar.a;b=sdPar.b;calcPar.h=calcPar.g=calcPar.f=calcPar.e=calcPar.d=calcPar.c=calcPar.a7=calcPar.a3=calcPar.a1=0.0;tFlag=calcSC_ak1(DBL_EPSILON,N,a,b,calcPar,K,u,v,qk);for(j=0;j<L2;j++){fflag=1;nextK_ak1(DBL_EPSILON,N,tFlag,a,b,calcPar,K,qk,qp);tFlag=calcSC_ak1(DBL_EPSILON,N,a,b,calcPar,K,u,v,qk);newest_ak1(tFlag,sdPar,a,calcPar.a1,calcPar.a3,calcPar.a7,b,calcPar.c,calcPar.d,calcPar.f,calcPar.g,calcPar.h,u,v,K,N,p);ui=sdPar.a;vv=vi=sdPar.b;ss=((K[N-1]!=0.0)?-(p[N]/K[N-1]):0.0);ts=tv=1.0;if((j!=0)&&(tFlag!=3)){tv=((vv!=0.0)?Math.abs((vv-ovv)/vv):tv);ts=((ss!=0.0)?Math.abs((ss-oss)/ss):ts);tvv=((tv<otv)?tv*otv:1.0);tss=((ts<ots)?ts*ots:1.0);vpass=((tvv<betav)?1:0);spass=((tss<betas)?1:0);if((spass)||(vpass)){for(i=0;i<N;i++){svk[i]=K[i]}s=ss;stry=vtry=0;for(;;){if((fflag&&((fflag=0)==0))&&((spass)&&(!vpass||(tss<tvv)))){}else{QuadIT_ak1(DBL_EPSILON,N,iPar,ui,vi,qp,NN,sdPar,p,qk,calcPar,K);a=sdPar.a;b=sdPar.b;if((iPar.NZ)>0)return;iFlag=vtry=1;betav*=0.25;if(stry||(!spass)){iFlag=0}else{for(i=0;i<N;i++)K[i]=svk[i]}}if(iFlag!=0){sdPar.a=s;iFlag=RealIT_ak1(DBL_EPSILON,iPar,sdPar,N,p,NN,qp,K,qk);s=sdPar.a;if((iPar.NZ)>0)return;stry=1;betas*=0.25;if(iFlag!=0){ui=-(s+s);vi=s*s;continue}}for(i=0;i<N;i++)K[i]=svk[i];if(!vpass||vtry)break}QuadSD_ak1(NN,u,v,p,qp,sdPar);a=sdPar.a;b=sdPar.b;tFlag=calcSC_ak1(DBL_EPSILON,N,a,b,calcPar,K,u,v,qk)}}ovv=vv;oss=ss;otv=tv;ots=ts}return}
function rpSolve(degPar,p,zeror,zeroi){var N=degPar.Degree,RADFAC=3.14159265358979323846/180,LB2=Math.LN2,MDP1=degPar.Degree+1,K=new Array(MDP1),pt=new Array(MDP1),qp=new Array(MDP1),temp=new Array(MDP1),qPar=new Object(),Fxshfr_Par=new Object(),bnd,DBL_EPSILON,df,dx,factor,ff,moduli_max,moduli_min,sc,x,xm,aa,bb,cc,sr,t,u,xxx,j,jj,l,NM1,NN,zerok;aa=1.0;do{DBL_EPSILON=aa;aa/=2;bb=1.0+aa}while(bb>1.0);var LO=Number.MIN_VALUE/DBL_EPSILON,cosr=Math.cos(94.0*RADFAC),sinr=Math.sin(94.0*RADFAC),xx=Math.sqrt(0.5),yy=-xx;Fxshfr_Par.NZ=j=0;Fxshfr_Par.szr=Fxshfr_Par.szi=Fxshfr_Par.lzr=Fxshfr_Par.lzi=0.0;while(p[N]==0){zeror[j]=zeroi[j]=0;N--;j++}NN=N+1;while(N>=1){if(N<=2){if(N<2){zeror[degPar.Degree-1]=-(p[1]/p[0]);zeroi[degPar.Degree-1]=0}else{qPar.li=qPar.lr=qPar.si=qPar.sr=0.0;Quad_ak1(p[0],p[1],p[2],qPar);zeror[degPar.Degree-2]=qPar.sr;zeroi[degPar.Degree-2]=qPar.si;zeror[degPar.Degree-1]=qPar.lr;zeroi[degPar.Degree-1]=qPar.li}break}moduli_max=0.0;moduli_min=Number.MAX_VALUE;for(i=0;i<NN;i++){x=Math.abs(p[i]);if(x>moduli_max)moduli_max=x;if((x!=0)&&(x<moduli_min))moduli_min=x}sc=LO/moduli_min;if(((sc<=1.0)&&(moduli_max>=10))||((sc>1.0)&&(Number.MAX_VALUE/sc>=moduli_max))){sc=((sc==0)?Number.MIN_VALUE:sc);l=Math.floor(Math.log(sc)/LB2+0.5);factor=Math.pow(2.0,l);if(factor!=1.0){for(i=0;i<NN;i++)p[i]*=factor}}for(var i=0;i<NN;i++)pt[i]=Math.abs(p[i]);pt[N]=-(pt[N]);NM1=N-1;x=Math.exp((Math.log(-pt[N])-Math.log(pt[0]))/N);if(pt[NM1]!=0){xm=-pt[N]/pt[NM1];x=((xm<x)?xm:x)}xm=x;do{x=xm;xm=0.1*x;ff=pt[0];for(var i=1;i<NN;i++){ff=ff*xm+pt[i]}}while(ff>0);dx=x;do{df=ff=pt[0];for(var i=1;i<N;i++){ff=x*ff+pt[i];df=x*df+ff}ff=x*ff+pt[N];dx=ff/df;x-=dx}while(Math.abs(dx/x)>0.005);bnd=x;for(var i=1;i<N;i++)K[i]=(N-i)*p[i]/N;K[0]=p[0];aa=p[N];bb=p[NM1];zerok=((K[NM1]==0)?1:0);for(jj=0;jj<5;jj++){cc=K[NM1];if(zerok){for(var i=0;i<NM1;i++){j=NM1-i;K[j]=K[j-1]}K[0]=0;zerok=((K[NM1]==0)?1:0)}else{t=-aa/cc;for(var i=0;i<NM1;i++){j=NM1-i;K[j]=t*K[j-1]+p[j]}K[0]=p[0];zerok=((Math.abs(K[NM1])<=Math.abs(bb)*DBL_EPSILON*10.0)?1:0)}}for(var i=0;i<N;i++)temp[i]=K[i];for(jj=1;jj<=20;jj++){xxx=-(sinr*yy)+cosr*xx;yy=sinr*xx+cosr*yy;xx=xxx;sr=bnd*xx;u=-(2.0*sr);Fxshfr_ak1(DBL_EPSILON,MDP1,20*jj,sr,bnd,K,N,p,NN,qp,u,Fxshfr_Par);if(Fxshfr_Par.NZ!=0){j=degPar.Degree-N;zeror[j]=Fxshfr_Par.szr;zeroi[j]=Fxshfr_Par.szi;NN=NN-Fxshfr_Par.NZ;N=NN-1;for(var i=0;i<NN;i++)p[i]=qp[i];if(Fxshfr_Par.NZ!=1){zeror[j+1]=Fxshfr_Par.lzr;zeroi[j+1]=Fxshfr_Par.lzi}break}else{for(var i=0;i<N;i++){K[i]=temp[i]}}}if(jj>20){degPar.Degree-=N;break}}return}rpSolve(degreePar,p,zeror,zeroi);var l=zeroi.length;for(i=0;i<l;i++){var img=round(zeroi[i],decp+8),real=round(zeror[i],decp);real=decp-String(real).length>2?real:zeror[i];var sign=img<0?'-':'';if(real===0){real=''}if(img===0){img=''}img=Math.abs(img)===1?sign+'i':(img?img+'*i':'');var num=(real&&img)?real+'+'+img:real+img;zeror[i]=num.replace(/\+\-/g,'-')}return zeror}},roots:function(symbol){var roots=__.proots(symbol).map(function(x){return _.parse(x)});return core.Vector.fromArray(roots)},froot:function(f,guess,dx){var newtonraph=function(xn){var mesh=1e-12,df=dx?dx:core.Utils.build(core.Calculus.diff(f.clone())),fn=f instanceof Function?f:core.Utils.build(f),max=10000,done=!1,safety=0;while(!done){var x=xn-(fn(xn)/df(xn));var r=Math.abs(x)-Math.abs(xn),delta=Math.abs(r);xn=x;if(delta<mesh)done=!0;else if(safety>max){xn=null;done=!0}safety++}return xn};return newtonraph(Number(guess))},quad:function(a,b,c){var q=function(a,b,c,sign){return _.parse('-('+b+'+'+sign+'*sqrt(('+b+')^2-4*('+a+')*('+c+')))/(2*'+a+')')};return[q(a,b,c,1),q(a,b,c,-1)]},sumProd:function(a,b){return __.quad(-b,a,-1).map(function(x){return x.invert()})},coeffs:function(symbol,wrt,coeffs){wrt=String(wrt);symbol=_.expand(symbol);coeffs=coeffs||[];if(symbol.group===EX&&symbol.contains(wrt,!0))_.error('Unable to get coefficients using expression '+symbol.toString());var vars=variables(symbol);if(vars.length<=1&&vars[0]===wrt){var a=new Polynomial(symbol).coeffs.map(function(x){return new Symbol(x)});for(var i=0,l=a.length;i<l;i++){var coeff=a[i],e=coeffs[i];if(e)coeff=_.add(e,coeff);coeffs[i]=coeff}}else{if(!wrt)_.error('Polynomial contains more than one variable. Please specify which variable is to be used!');if(vars.indexOf(wrt)===-1){coeffs[0]=symbol}else{coeffs=coeffs||[];var coeff;if(symbol.group===CB){var s=symbol.symbols[wrt];if(!s)_.error('Expression is not a polynomial!');var p=Number(s.power);coeff=_.divide(symbol.clone(),s.clone());if(coeff.contains(wrt,!0)||p<0||!isInt(p))_.error('Expression is not a polynomial!');var e=coeffs[p];if(e)coeff=_.add(e,coeff);coeffs[p]=coeff}else if(symbol.group===CP){symbol.each(function(x){__.coeffs(x.clone(),wrt,coeffs)},!0)}}}for(var i=0,l=coeffs.length;i<l;i++)
if(typeof coeffs[i]==='undefined')coeffs[i]=new Symbol(0);return coeffs},polyPowers:function(e,for_variable,powers){powers=powers||[];var g=g=e.group;if(g===PL&&for_variable===e.value){powers=powers.concat(keys(e.symbols))}else if(g===CP){for(var s in e.symbols){var symbol=e.symbols[s];var g=symbol.group,v=symbol.value;if(g===S&&for_variable===v)powers.push(symbol.power);else if(g===PL||g===CP)powers=__.polyPowers(symbol,for_variable,powers);else if(g===CB&&symbol.contains(for_variable)){var t=symbol.symbols[for_variable];if(t)powers.push((t.power))}else if(g===N||for_variable!==v)powers.push(0)}}else if(g===CB&&e.contains(for_variable)){powers.push(core.Utils.decompose_fn(e,for_variable,!0).x.power)}return core.Utils.arrayUnique(powers).sort()},Factor:{mix:function(o,include_negatives){var factors=keys(o);var l=factors.length;var m=[];for(var i=0;i<l;i++){var factor=factors[i],p=o[factor];var ll=m.length;for(var j=0;j<ll;j++){var t=m[j]*factor;m.push(t);if(include_negatives)m.push(-t)}for(var j=1;j<=p;j++)m.push(Math.pow(factor,j));}return m},common:function(symbol,factors){try{if(symbol.group===CP){var symbols=_.expand(symbol.clone(),!0).collectSymbols(null,null,function(a,b){return(b.length||1)-(a.length||1)});var map={};var coeffs=[];for(var i=0;i<symbols.length;i++){var sym=symbols[i];coeffs.push(sym.multiplier.clone());sym.each(function(x){var p=Number(x.power);if(isNaN(p))throw new Error('exiting');if(x.value in map){if(p<map[x.value][0])map[x.value][0]=p;map[x.value][1].push(x)}else map[x.value]=[p,[x]]})}var factor=new Symbol(1);for(var x in map){if(map[x][1].length===symbols.length){factor=_.multiply(factor,_.pow(new Symbol(x),new Symbol(map[x][0])))}}var c=core.Math2.QGCD.apply(null,coeffs);if(!c.equals(1)){factors.add(new Symbol(c));for(var i=0;i<symbols.length;i++){symbols[i].multiplier=symbols[i].multiplier.divide(c)}}if(!factor.equals(1)){factors.add(factor);symbol=new Symbol(0);for(var i=0;i<symbols.length;i++){symbol=_.add(symbol,_.divide(symbols[i],factor.clone()))}}}}catch(e){}return symbol},zeroes:function(symbol,factors){var exit=function(){throw new Error('Exiting')};try{var vars,term,sum,p,e;symbol=_.expand(symbol.clone());e=symbol.toString();vars=variables(symbol);sum=new Symbol(0);var terms=[];var powers=[];for(var i=0,l=vars.length;i<vars.length;i++){var subs={};for(var j=0;j<l;j++)
if(i!==j)subs[vars[j]]=0;term=_.parse(e,subs);var tp=term.power;if(!isInt(tp))exit();terms.push(term);powers.push(term.power)}if(core.Utils.allSame(powers)){var n_terms=symbol.length;var n_zeroes=terms.length;if(n_zeroes===2){p=new Frac(powers[0]/(n_terms-1))}if(n_zeroes===3){p=new Frac(powers[0]/Math.round((Math.sqrt(8*n_terms-1)-3)/2))}}else p=core.Math2.QGCD.apply(null,powers);if(!isInt(p))exit();for(var i=0;i<terms.length;i++){var t=terms[i];var n=t.power.clone().divide(p);t.multiplier=new Frac(Math.pow(t.multiplier,1/n));t.power=p.clone();sum=_.add(sum,t)}if(sum.group!==CP)return symbol;while(!0){var d=__.div(symbol.clone(),sum.clone());if(d[1].equals(0)){symbol=d[0];factors.add(sum.clone());if(symbol.equals(1))break}else break}}catch(e){};return symbol},factor:function(symbol,factors){if(symbol.group===CP){var t=new Symbol(0);symbol.each(function(x){if((x.group===CP&&x.power.greaterThan(1)||x.group===CB))x=_.expand(x);t=_.add(t,x)});t.power=symbol.power;symbol=t}if(symbol.group===FN&&symbol.fname!=='sqrt')symbol=core.Utils.evaluate(symbol);try{if(symbol.group===CB){factors=factors||new Factors();var all_S=!0;factors.add(new Symbol(symbol.multiplier));symbol.each(function(x){if(x.group!==S)all_S=!1;var factored=__.Factor.factor(x.clone());factors.add(factored)});if(all_S)return symbol;return factors.toSymbol()}if(symbol.group===S)return symbol;if(symbol.isConstant()){if(symbol.equals(1))return symbol.clone();return core.Math2.factor(symbol)}var p=symbol.power.clone();if(isInt(p)){symbol.toLinear();factors=factors||new Factors();var map={};symbol=_.parse(core.Utils.subFunctions(symbol,map));if(keys(map).length>0){factors.preAdd=function(factor){return _.parse(factor,core.Utils.getFunctionsSubs(map))}}if(!symbol.isLinear()){factors.pFactor=symbol.power.toString();symbol.toLinear()}var vars=variables(symbol),multiVar=vars.length>1;if(multiVar){var all_S=!0,all_unit=!0;symbol.each(function(x){if(x.group!==S)all_S=!1;if(!x.multiplier.equals(1))all_unit=!1});if(all_S&&all_unit)return _.pow(symbol,_.parse(p))}symbol=__.Factor.coeffFactor(symbol,factors);symbol=__.Factor.powerFactor(symbol,factors);if(vars.length===1){symbol=__.Factor.squareFree(symbol,factors);var t_factors=new Factors();symbol=__.Factor.trialAndError(symbol,t_factors);for(var x in t_factors.factors){factors.add(_.pow(t_factors.factors[x],_.parse(p)))}}else{symbol=__.Factor.mfactor(symbol,factors)}symbol=_.parse(symbol,core.Utils.getFunctionsSubs(map));factors.add(_.pow(symbol,_.parse(p)));factors.clean();return factors.toSymbol()}return symbol}catch(e){return symbol}},reduce:function(symbol,factors){if(symbol.group===CP&&symbol.length===2){var symbols=symbol.collectSymbols().sort(function(a,b){return b.multiplier-a.multiplier});if(symbols[0].power.equals(symbols[1].power)){var n=_.parse(symbols[0].power),a=symbols[0].clone().toLinear(),b=symbols[1].clone().toLinear();factors.add(_.add(a.clone(),b.clone()));b.negate();var nn=Number(n);var result=new Symbol(0);for(var i=1;i<=nn;i++){var aa=_.pow(a.clone(),_.subtract(n.clone(),new Symbol(i))),bb=_.pow(b.clone(),_.subtract(new Symbol(i),new Symbol(1)));result=_.add(result,_.multiply(aa,bb))}return result}}return symbol},squareFree:function(symbol,factors){if(symbol.isConstant()||symbol.group===S)return symbol;var poly=new Polynomial(symbol);var sqfr=poly.squareFree();var p=sqfr[2];if(p!==1){var t=sqfr[1].toSymbol();t.power=t.power.multiply(new Frac(p));factors.add(__.Factor.factor(t));return __.Factor.squareFree(sqfr[0].toSymbol(),factors)}return symbol},powerFactor:function(symbol,factors){if(symbol.group!==PL)return symbol;var d=core.Utils.arrayMin(keys(symbol.symbols));var retval=new Symbol(0);var q=_.parse(symbol.value+'^'+d);symbol.each(function(x){x=_.divide(x,q.clone());retval=_.add(retval,x)});factors.add(q);return retval},coeffFactor:function(symbol,factors){if(symbol.isComposite()){var gcd=core.Math2.QGCD.apply(null,symbol.coeffs());if(!gcd.equals(1)){symbol.each(function(x){if(x.isComposite()){x.each(function(y){y.multiplier=y.multiplier.divide(gcd)})}else x.multiplier=x.multiplier.divide(gcd)})}symbol.updateHash();if(factors)factors.add(new Symbol(gcd))}return symbol},trialAndError:function(symbol,factors){if(symbol.isConstant()||symbol.group===S)return symbol;var poly=new Polynomial(symbol),cnst=poly.coeffs[0],cfactors=core.Math2.ifactor(cnst),roots=__.proots(symbol);for(var i=0;i<roots.length;i++){var r=roots[i],p=1;if(!isNaN(r)){for(var x in cfactors){var n=core.Utils.round(Math.log(x)/Math.log(Math.abs(r)),8);if(isInt(n)){r=x;p=n;break}}var root=new Frac(r),terms=[new Frac(root.num).negate()];terms[p]=new Frac(root.den);var div=Polynomial.fromArray(terms,poly.variable).fill(),t=poly.divide(div);if(t[1].equalsNumber(0)){poly=t[0];factors.add(div.toSymbol())}}}if(!poly.equalsNumber(1)){poly=__.Factor.search(poly,factors)}return poly.toSymbol()},search:function(poly,factors,base){base=base||10;var v=poly.variable;var check=function(c1,c2,n,p){var candidate=Polynomial.fit(c1,c2,n,base,p,v);if(candidate&&candidate.coeffs.length>1){var t=poly.divide(candidate);if(t[1].equalsNumber(0)){factors.add(candidate.toSymbol());return[t[0],candidate]}}return null};var cnst=poly.coeffs[0],cfactors=core.Math2.ifactor(cnst),lc=poly.lc(),ltfactors=core.Math2.ifactor(lc),subbed=poly.sub(base),nfactors=__.Factor.mix(core.Math2.ifactor(subbed),subbed<0),cp=Math.ceil(poly.coeffs.length/2),lc_is_neg=lc.lessThan(0),cnst_is_neg=cnst.lessThan(0);ltfactors['1']=1;cfactors['1']=1;while(cp--){for(var x in ltfactors){for(var y in cfactors){for(var i=0;i<nfactors.length;i++){var factor_found=check(x,y,nfactors[i],cp);if(factor_found){poly=factor_found[0];if(!core.Utils.isPrime(poly.sub(base)))poly=__.Factor.search(poly,factors);return poly}if(!factor_found&&lc_is_neg)factor_found=check(-x,y,nfactors[i],cp);else if(!factor_found&&cnst_is_neg)factor_found=check(x,-y,nfactors[i],cp);else if(!factor_found&&lc_is_neg&&cnst_is_neg)factor_found=check(-x,-y,nfactors[i],cp)}}}}return poly},mSqfrFactor:function(symbol,factors){if(symbol.group!==FN){var vars=variables(symbol).reverse();for(var i=0;i<vars.length;i++){do{if(vars[i]===symbol.value){factors.add(symbol);symbol=new Symbol(1);continue}var d=__.Factor.coeffFactor(core.Calculus.diff(symbol,vars[i]));if(d.equals(0))break;var div=__.div(symbol,d.clone()),is_factor=div[1].equals(0);if(div[0].isConstant()){factors.add(div[0]);break}if(is_factor){factors.add(div[0]);symbol=d}}while(is_factor)}}return symbol},sqdiff:function(symbol,factors){try{var remove_square=function(x){return core.Utils.block('POSITIVE_MULTIPLIERS',function(){return Symbol.unwrapPARENS(math.sqrt(math.abs(x)))},!0)};var separated=core.Utils.separate(symbol.clone());var obj_array=[];for(var x in separated){if(x!=='constants'){obj_array.push(separated[x])}}obj_array.sort(function(a,b){return b.power-a.power});if(obj_array.length===2){var a,b;a=obj_array.pop();b=obj_array.pop();if(a.isComposite()&&b.power.equals(2)){b=remove_square(b);var f=__.Factor.factor(_.add(a,separated.constants));if(f.power.equals(2)){f.toLinear();factors.add(_.subtract(f.clone(),b.clone()));factors.add(_.add(f,b));symbol=new Symbol(1)}}else{a=a.powSimp();b=b.powSimp();if((a.group===S||a.fname==='')&&a.power.equals(2)&&(b.group===S||b.fname==='')&&b.power.equals(2)){if(a.multiplier.lessThan(0)){var t=b;b=a;a=t}if(a.multiplier.greaterThan(0)){a=remove_square(a);b=remove_square(b)}factors.add(_.subtract(a.clone(),b.clone()));factors.add(_.add(a,b));symbol=new Symbol(1)}}}}catch(e){}return symbol},mfactor:function(symbol,factors){if(symbol.group===FN){if(symbol.fname==='sqrt'){var factors2=new Factors(),arg=__.Factor.common(symbol.args[0].clone(),factors2);arg=__.Factor.coeffFactor(arg,factors2);symbol=_.symfunction('sqrt',[arg]);factors2.each(function(x){symbol=_.multiply(symbol,_.parse(core.Utils.format('sqrt({0})',x)))})}else factors.add(symbol)}else{symbol=__.Factor.mSqfrFactor(symbol,factors);var vars=variables(symbol),symbols=symbol.collectSymbols().map(function(x){return Symbol.unwrapSQRT(x)}),sorted={},maxes={},l=vars.length,n=symbols.length;for(var i=0;i<l;i++){var v=vars[i];sorted[v]=new Symbol(0);for(var j=0;j<n;j++){var s=symbols[j];if(s.contains(v)){var p=s.value===v?s.power.toDecimal():s.symbols[v].power.toDecimal();if(!maxes[v]||p<maxes[v])maxes[v]=p;sorted[v]=_.add(sorted[v],s.clone())}}}for(var x in sorted){var r=_.parse(x+'^'+maxes[x]);var div=_.divide(sorted[x],r);var new_factor=_.expand(div);if(new_factor.equals(1))break;var divided=__.div(symbol.clone(),new_factor);if(divided[0].equals(0)){break}var neg_numeric_factor=isInt(new_factor)&&new_factor.lessThan(0);if(divided[1].equals(0)&&!neg_numeric_factor){var d=__.div(symbol.clone(),divided[0].clone());var r=d[0];symbol=d[1];if(r.equals(-1))return symbol;var factor=divided[0];if(symbol.equals(factor)){var rem=__.Factor.reduce(factor,factors);if(!symbol.equals(rem))return __.Factor.mfactor(rem,factors)}else factors.add(factor);if(r.isConstant('all')){factors.add(r);return r}return __.Factor.mfactor(r,factors)}}}symbol=__.Factor.sqdiff(symbol,factors);symbol=__.Factor.zeroes(symbol,factors);return symbol}},allLinear:function(set){var l=set.length;for(var i=0;i<l;i++)
if(!__.isLinear(set[i]))return!1;return!0},isLinear:function(e){var status=!1,g=e.group;if(g===PL||g===CP){status=!0;for(var s in e.symbols){var symbol=e.symbols[s],sg=symbol.group;if(sg===FN||sg===EX||sg===CB){status=!1}else{if(sg===PL||sg===CP)status=__.isLinear(symbol);else{if(symbol.group!==N&&symbol.power.toString()!=='1'){status=!1;break}}}}}else if(g===S&&e.power===1)status=!0;return status},gcd:function(){var args;if(arguments.length===1&&arguments[0]instanceof core.Vector)args=arguments[0].elements;else args=core.Utils.arguments2Array(arguments);if(args.length==0)return new Symbol(1);else if(args.length==1)return args[0];var appeared=[],evaluate=!1;for(var i=0;i<args.length;i++){if(args[i].group===FN&&args[i].fname==='gcd'){args=args.concat(arguments[i].args);args.splice(i,1)}else{var vars=variables(args[i]);if(core.Utils.haveIntersection(vars,appeared)){evaluate=!0;break}else appeared=appeared.concat(vars)}}if(evaluate||appeared.length===0){if(args.every(function(symbol){return symbol.getDenom().equals(1)})){var aggregate=args[0];for(var i=1;i<args.length;i++)aggregate=__.gcd_(args[i],aggregate);return aggregate}else{return _.divide(__.gcd.apply(null,args.map(function(symbol){return symbol.getNum()})),__.lcm.apply(null,args.map(function(symbol){return symbol.getDenom()})))}}else return _.symfunction('gcd',args)},gcd_:function(a,b){if(a.group===FN||a.group===P)a=core.Utils.block('PARSE2NUMBER',function(){return _.parse(a)});if(b.group===FN)b=core.Utils.block('PARSE2NUMBER',function(){return _.parse(b)});if(a.isConstant()&&b.isConstant()){return new Symbol(core.Math2.QGCD(new Frac(+a),new Frac(+b)))}var den=_.multiply(a.getDenom()||new Symbol(1),b.getDenom()||new Symbol(1)).invert();a=_.multiply(a.clone(),den.clone());b=_.multiply(b.clone(),den.clone());a=_.expand(a);b=_.expand(b);if(a.group===CB||b.group===CB){var q=_.divide(a.clone(),b.clone());var t=_.multiply(b.clone(),q.getDenom().invert());if(!t.equals(1))return t}if(a.group===EX||b.group===EX){var gcd_m=new Symbol(core.Math2.GCD(a.multiplier,b.multiplier));var gcd_v=__.gcd_(a.value===CONST_HASH?new Symbol(1):_.parse(a.value),b.value===CONST_HASH?new Symbol(1):_.parse(b.value));var gcd_p=__.gcd_(_.parse(a.power),_.parse(b.power));return _.multiply(gcd_m,_.pow(gcd_v,gcd_p))}if(a.length<b.length){var t=a;a=b;b=t}var vars_a=variables(a),vars_b=variables(b);if((vars_a.length===vars_b.length&&vars_a.length===1&&vars_a[0]===vars_b[0])||vars_a.length===1&&vars_b.length===0||vars_a.length===0&&vars_b.length===1){a=new Polynomial(a);b=new Polynomial(b);return _.divide(a.gcd(b).toSymbol(),den)}else{var T;while(!b.equals(0)){var t=b.clone();a=a.clone();T=__.div(a,t);b=T[1];if(T[0].equals(0)){return _.divide(new Symbol(core.Math2.QGCD(a.multiplier,b.multiplier)),den)}a=t}var multipliers=[];a.each(function(x){multipliers.push(x.multiplier)});var gcd=core.Math2.QGCD.apply(undefined,multipliers);if(!gcd.equals(1)){a.each(function(x){x.multiplier=x.multiplier.divide(gcd)})}if(a.equals(1)&&!a.isConstant()&&!b.isConstant())return _.divide(_.symfunction('gcd',arguments),den);return _.divide(a,den)}},lcm:function(){var args;if(arguments.length===1)
if(arguments[0]instanceof core.Vector)args=arguments[0].elements;else _.error('lcm expects either 1 vector or 2 or more arguments');else args=core.Utils.arguments2Array(arguments);var numer=args.reduce(function(prev,curr){return _.multiply(prev,curr.clone())},new Symbol(1));var denom_args=(function(input,size){var results=[],result,mask,i,total=Math.pow(2,input.length);for(mask=size;mask<total;mask++){result=[];i=input.length-1;do{if((mask&(1<<i))!==0){result.push(input[i])}}while(i--);if(result.length==size){results.push(result)}}return results})(arguments,arguments.length-1).map(function(x){return x.reduce(function(prev,curr){return _.multiply(prev,curr.clone())},new Symbol(1))});if(args.every(function(x){return core.Utils.isVariableSymbol(x)}))var denom=_.symfunction('gcd',core.Utils.arrayUnique(denom_args));else var denom=__.gcd.apply(null,denom_args);return _.divide(numer,denom)},divide:function(symbol1,symbol2){var result,remainder,factored,den;factored=core.Algebra.Factor.factor(symbol1.clone());den=factored.getDenom();if(!den.isConstant('all')){symbol1=_.expand(Symbol.unwrapPARENS(_.multiply(factored,den.clone())))}else den=new Symbol(1);result=__.div(symbol1,symbol2);remainder=_.divide(result[1],symbol2);return _.divide(_.add(result[0],remainder),den)},div:function(symbol1,symbol2){if(symbol2.isConstant()){symbol1.each(function(x){x.multiplier=x.multiplier.divide(symbol2.multiplier)});return[symbol1,new Symbol(0)]}if(symbol1.group===S&&symbol2.group===CP){var x=symbol1.value;var f=core.Utils.decompose_fn(symbol2.clone(),x,!0);if(symbol1.isLinear()&&f.x&&f.x.isLinear()&&symbol2.isLinear()){var k=Symbol.create(symbol1.multiplier);return[_.divide(k.clone(),f.a.clone()),_.divide(_.multiply(k,f.b),f.a).negate()]}}if(symbol1.group===S&&symbol2.group===S){var r=_.divide(symbol1.clone(),symbol2.clone());if(r.isConstant())return[r,new Symbol(0)];return[new Symbol(0),symbol1.clone()]}var symbol1_has_func=symbol1.hasFunc(),symbol2_has_func=symbol2.hasFunc(),parse_funcs=!1;if(symbol1_has_func||symbol2_has_func){parse_funcs=!0;var map={},symbol1=_.parse(core.Utils.subFunctions(symbol1,map)),symbol2=_.parse(core.Utils.subFunctions(symbol2,map)),subs=core.Utils.getFunctionsSubs(map)}var vars=core.Utils.arrayUnique(variables(symbol1).concat(variables(symbol2))),quot,rem;if(vars.length===1){var q=new Polynomial(symbol1).divide(new Polynomial(symbol2));quot=q[0].toSymbol();rem=q[1].toSymbol()}else{vars.push(CONST_HASH);var reconvert=function(arr){var symbol=new Symbol(0);for(var i=0;i<arr.length;i++){var x=arr[i].toSymbol();symbol=_.add(symbol,x)}return symbol};var get_unique_max=function(term,any){var max=Math.max.apply(null,term.terms),count=0,idx;if(!any){for(var i=0;i<term.terms.length;i++){if(term.terms[i].equals(max)){idx=i;count++}if(count>1)return}}if(any){for(i=0;i<term.terms.length;i++)
if(term.terms[i].equals(max)){idx=i;break}}return[max,idx,term]};var get_det=function(s,lookat){lookat=lookat||0;var det=s[lookat],l=s.length;if(!det)return;var umax=get_unique_max(det);for(var i=lookat+1;i<l;i++){var term=s[i],is_equal=det.sum.equals(term.sum);if(!is_equal&&umax){break}if(is_equal){var max1,max2,idx1,idx2,l2=det.terms.length;for(var j=0;j<l2;j++){var item1=det.terms[j],item2=term.terms[j];if(typeof max1==='undefined'||item1.greaterThan(max1)){max1=item1;idx1=j}if(typeof max2==='undefined'||item2.greaterThan(max2)){max2=item2;idx2=j}}var d1=max1.subtract(term.terms[idx1]),d2=max2.subtract(det.terms[idx2]);if(d2>d1){umax=[max2,idx2,term];break}if(d1>d2){umax=[max1,idx1,det];break}}else{umax=get_unique_max(term);if(umax)break}umax=get_unique_max(term)}if(!umax)return get_unique_max(s[0],!0);var e,idx;for(var i=0;i<s2.length;i++){var cterm=s2[i].terms;idx=umax[1];if(idx===cterm.length-1)return;e=cterm[idx];if(!e.equals(0))break}if(e.equals(0))return get_det(s,++lookat);return umax};var t_map=core.Utils.toMapObj(vars);var init_sort=function(a,b){return b.sum.subtract(a.sum)};var is_larger=function(a,b){if(!a||!b)return!1;for(var i=0;i<a.terms.length;i++){if(a.terms[i].lessThan(b.terms[i]))return!1}return!0};var s1=symbol1.tBase(t_map).sort(init_sort),s2=symbol2.tBase(t_map).sort(init_sort);var target=is_larger(s1[0],s2[0])&&s1[0].count>s2[0].count?s2:s1;var det=get_det(target);var quotient=[];if(det){var lead_var=det[1];var can_divide=function(a,b){if(a[0].sum.equals(b[0].sum))return a.length>=b.length;return!0};var try_better_lead_var=function(s1,s2,lead_var){return lead_var;var checked=[];for(var i=0;i<s1.length;i++){var t=s1[i];for(var j=0;j<t.terms.length;j++){var cf=checked[j],tt=t.terms[j];if(i===0)checked[j]=tt;else if(cf&&!cf.equals(tt))checked[j]=undefined}}for(var i=0;i<checked.length;i++){var t=checked[i];if(t&&!t.equals(0))return i}return lead_var};var sf=function(a,b){var l1=a.len(),l2=b.len();var blv=b.terms[lead_var],alv=a.terms[lead_var];if(l2>l1&&blv.greaterThan(alv))return l2-l1;return blv.subtract(alv)};lead_var=try_better_lead_var(s1,s2,lead_var);s1.sort(sf);s2.sort(sf);var fdt=s2[0],fnt=s1[0];var den=new MVTerm(new Frac(1),[],fnt.map);if(fdt.sum.greaterThan(fnt.sum)&&fnt.len()>1){for(var i=0;i<fnt.terms.length;i++){var d=fdt.terms[i].subtract(fnt.terms[i]);if(!d.equals(0)){var nd=d.add(new Frac(1));den.terms[i]=d;for(var j=0;j<s1.length;j++){s1[j].terms[i]=s1[j].terms[i].add(nd)}}else den.terms[i]=new Frac(0)}}var dividend_larger=is_larger(s1[0],s2[0]);while(dividend_larger&&can_divide(s1,s2)){var q=s1[0].divide(s2[0]);quotient.push(q);s1.shift();for(var i=1;i<s2.length;i++){var t=s2[i].multiply(q).generateImage(),l2=s1.length;if(l2===0){t.coeff=t.coeff.neg();s1.push(t);s1.sort(sf)}for(var j=0;j<l2;j++){var cur=s1[j];if(cur.getImg()===t.getImg()){cur.coeff=cur.coeff.subtract(t.coeff);if(cur.coeff.equals(0)){core.Utils.remove(s1,j);j--}break}if(j===l2-1){t.coeff=t.coeff.neg();s1.push(t);s1.sort(sf)}}}dividend_larger=is_larger(s1[0],s2[0]);if(!dividend_larger&&s1.length>=s2.length){for(var i=1;i<s1.length;i++){dividend_larger=is_larger(s1[i],s2[0]);if(dividend_larger){s1.unshift(core.Utils.remove(s1,i));break}}}}}quot=reconvert(quotient);rem=reconvert(s1);if(typeof den!=='undefined'){den=den.toSymbol();quot=_.divide(quot,den.clone());rem=_.divide(rem,den)}}if(parse_funcs){quot=_.parse(quot.text(),subs);rem=_.parse(rem.text(),subs)}return[quot,rem]},line:function(v1,v2,x){if(core.Utils.isArray(v1))v1=core.Utils.convertToVector(v1);if(core.Utils.isArray(v2))v2=core.Utils.convertToVector(v2);x=_.parse(x||'x');if(!core.Utils.isVector(v1)||!core.Utils.isVector(v2))_.error('Line expects a vector! Received "'+v1+'" & "'+v2+'"');var dx=_.subtract(v2.e(1).clone(),v1.e(1).clone()),dy=_.subtract(v2.e(2).clone(),v1.e(2).clone()),m=_.divide(dy,dx),a=_.multiply(x,m.clone()),b=_.multiply(v1.e(1).clone(),m);return _.add(_.subtract(a,b),v1.e(2).clone())},PartFrac:{createTemplate:function(den,denom_factors,f_array,v){den=__.Factor.factor(den);den.each(function(x,key){if(x.group===FN&&x.fname===''&&x.args[0].group===S){var y=x.args[0];if(this.symbols){delete this.symbols[key];this.symbols[y.value]=y}else{den=x.args[0]}}});var factors,factors_vec,f,p,deg,degrees,m;factors=denom_factors.collectFactors();factors_vec=[];degrees=[];m=new Symbol(1);for(var i=0;i<factors.length;i++){var factor=Symbol.unwrapPARENS(factors[i]);if(factor.power.greaterThan(1)){p=Number(factor.power);f=factor.clone().toLinear();deg=Number(__.degree(f,v));for(var j=0;j<p;j++){var efactor=_.pow(f.clone(),new Symbol(j+1));f_array.push(efactor.clone());var d=_.divide(den.clone(),efactor.clone());degrees.push(deg);factors_vec.push(d)}}else if(factor.isConstant('all')){m=_.multiply(m,factor)}else{deg=Number(__.degree(factor,v));f_array.push(factor);var d=_.divide(den.clone(),factor.clone());d=_.expand(Symbol.unwrapPARENS(d));degrees.push(deg);factors_vec.push(d)}}f_array=f_array.map(function(x){return _.multiply(x,m.clone())});return[f_array,factors_vec,degrees]},partfrac:function(symbol,v,asArray){var vars=variables(symbol);v=v||_.parse(vars[0]);try{var num,den,factors,tfactors,ofactors,nterms,degrees,dterms,max,M,c,powers,div,r,factors_vec,ks,template,tfactors;num=_.expand(symbol.getNum());den=_.expand(symbol.getDenom().toUnitMultiplier());num.multiplier=symbol.multiplier;nterms=num.groupTerms(v);if(Number(__.degree(num,v))>=Number(__.degree(den,v))){div=__.div(num.clone(),_.expand(den.clone()));r=div[0];num=div[1];nterms=num.groupTerms(v)}else r=new Symbol(0);if(Number(__.degree(den,v))===1){var q=_.divide(num,den);if(asArray)return[r,q];return _.add(r,q)}ofactors=__.Factor.factor(den);template=__.PartFrac.createTemplate(den.clone(),ofactors,[],v);tfactors=template[0];factors_vec=template[1];degrees=template[2];powers=[nterms.length];dterms=[];factors=[];ks=[];var factor,deg;factors_vec.map(function(x,idx){factor=tfactors[idx];deg=degrees[idx];for(var i=0;i<deg;i++){factors.push(factor.clone());var k=Symbol.create(v,i);var t=_.expand(_.multiply(x,k.clone())).groupTerms(v);var p=t.length;powers.push(p);dterms.push(t);ks.push(k.clone())}});max=core.Utils.arrayMax(powers);c=new core.Matrix(core.Utils.fillHoles(nterms,max)).transpose();M=new core.Matrix();for(var i=0;i<dterms.length;i++){M.elements.push(core.Utils.fillHoles(dterms[i],max))}var partials=_.multiply(M.transpose().invert(),c);var retval=asArray?[r]:r;partials.each(function(e,i){var term=_.multiply(ks[i],_.divide(e,factors[i]));if(asArray)retval.push(term);else retval=_.add(retval,term)});return retval}catch(e){};return symbol}},degree:function(symbol,v,o){o=o||{nd:[],sd:[],depth:0};if(!v){var vars=variables(symbol);if(vars.length>1)throw new Error('You must specify the variable for multivariate polynomials!');if(vars.length===0)return new Symbol(0);v=_.parse(vars[0])}var g=symbol.group;if(symbol.isComposite()){symbol=symbol.clone();symbol.distributeExponent();symbol.each(function(x){o.depth++;__.degree(x,v,o);o.depth--})}else if(symbol.group===CB){symbol.each(function(x){o.depth++;__.degree(x,v,o);o.depth++})}else if(g===EX&&symbol.value===v.value){o.sd.push(symbol.power.clone())}else if(g===S&&symbol.value===v.value){o.nd.push(_.parse(symbol.power))}else o.nd.push(new Symbol(0));var deg=o.nd.length>0?core.Utils.arrayMax(o.nd):undefined;if(o.depth===0&&o.sd.length>0){if(deg!==undefined)o.sd.unshift(deg);return _.symfunction('max',o.sd)}if(!core.Utils.isSymbol(deg))deg=_.parse(deg);return deg},sqComplete:function(symbol,v,raw){if(!core.Utils.isSymbol(v))v=_.parse(v);var stop=function(msg){msg=msg||'Stopping';throw new Error(msg)};if(symbol.group!==CP)stop('Must be a polynomial!');var deg,a,b,c,d,e,coeffs,sign,br,sym,sqrt_a;br=core.Utils.inBrackets;symbol=symbol.clone();deg=core.Algebra.degree(symbol,v);if(!deg.equals(2))stop('Cannot complete square for degree '+deg);coeffs=core.Algebra.coeffs(symbol,v);a=coeffs[2];sign=coeffs[1].sign();b=_.divide(coeffs[1],new Symbol(2));c=_.pow(b.clone(),new Symbol(2));if(raw)return[a,b,d];sqrt_a=math.sqrt(a);e=_.divide(math.sqrt(c),sqrt_a.clone());d=_.subtract(coeffs[0],_.pow(e.clone(),new Symbol(2)));sym=_.parse(br(sqrt_a.clone()+'*'+v+(sign<0?'-':'+')+e));return{a:sym,c:d,f:_.add(_.pow(sym.clone(),new Symbol(2)),d.clone())}},Classes:{Polynomial:Polynomial,Factors:Factors,MVTerm:MVTerm}};nerdamer.useAlgebraDiv=function(){var divide=__.divideFn=_.divide;var calls=0;_.divide=function(a,b){calls++;var ans;if(calls===1)ans=core.Algebra.divide(a,b);else ans=divide(a,b);calls=0;return ans}};nerdamer.useParserDiv=function(){if(__.divideFn)_.divide=__.divideFn;delete __.divideFn};nerdamer.register([{name:'factor',visible:!0,numargs:1,build:function(){return __.Factor.factor}},{name:'gcd',visible:!0,numargs:[1,],build:function(){return __.gcd}},{name:'lcm',visible:!0,numargs:[1,],build:function(){return __.lcm}},{name:'roots',visible:!0,numargs:-1,build:function(){return __.roots}},{name:'divide',visible:!0,numargs:2,build:function(){return __.divide}},{name:'div',visible:!0,numargs:2,build:function(){return __.div}},{name:'partfrac',visible:!0,numargs:[1,2],build:function(){return __.PartFrac.partfrac}},{name:'deg',visible:!0,numargs:[1,2],build:function(){return __.degree}},{name:'coeffs',visible:!0,numargs:[1,2],build:function(){var f=function(){var coeffs=__.coeffs.apply(__,arguments);return new core.Vector(coeffs)};return f}},{name:'line',visible:!0,numargs:[2,3],build:function(){return __.line}},{name:'sqcomp',visible:!0,numargs:[1,2],build:function(){var f=function(x,v){try{v=v||variables(x)[0];var sq=__.sqComplete(x.clone(),v);return sq.f}catch(e){return x}};return f}}]);nerdamer.api()})()