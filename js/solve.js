if((typeof module)!=='undefined'){nerdamer=require('./nerdamer.core.js');require('./Calculus.js');require('./Algebra.js')}(function(){var core=nerdamer.getCore(),_=core.PARSER,_A=core.Algebra,_C=core.Calculus,explode=_C.integration.decompose_arg,remove=core.Utils.remove,format=core.Utils.format,build=core.Utils.build,Symbol=core.Symbol,isSymbol=core.Utils.isSymbol,variables=core.Utils.variables,S=core.groups.S,PL=core.groups.PL,CB=core.groups.CB,CP=core.groups.CP,FN=core.groups.FN,isArray=core.Utils.isArray;core.Solve={version:'1.2.5',solve:function(eq,variable){var solution=solve(eq,String(variable));return new core.Vector(solution)}};core.Settings.SOLVE_RADIUS=1000;core.Settings.ROOTS_PER_SIDE=5;core.Settings.make_pi_conversions=!0;core.Symbol.prototype.hasTrig=function(){return this.containsFunction(['cos','sin','tan','cot','csc','sec'])};core.Symbol.prototype.hasNegativeTerms=function(){if(this.isComposite()){for(var x in this.symbols){var sym=this.symbols[x];if(sym.group===PL&&sym.hasNegativeTerms()||this.symbols[x].power.lessThan(0))return!0}}return!1};function Equation(lhs,rhs){if(rhs.isConstant()&&lhs.isConstant()&&!lhs.equals(rhs)||lhs.equals(core.Settings.IMAGINARY)||rhs.equals(core.Settings.IMAGINARY))throw new Error(lhs.toString()+' does not equal '+rhs.toString());this.LHS=lhs;this.RHS=rhs};var removeDenom=function(a,b){if(b.group===CP&&b.group!==CP){var t=a;a=b;b=t}if(a.group===CB){var t=new Symbol(a.multiplier),newRHS=b.clone();a.each(function(y){if(y.power.lessThan(0))newRHS=_.divide(newRHS,y);else t=_.multiply(t,y)});a=t;b=newRHS}else if(a.group===CP){for(var x in a.symbols){var sym=a.symbols[x];if(sym.group===CB){for(var y in sym.symbols){var sym2=sym.symbols[y];if(sym2.power.lessThan(0)){return removeDenom(_.expand(_.multiply(sym2.clone().toLinear(),a)),_.expand(_.multiply(sym2.clone().toLinear(),b)))}}}}}return _.expand(_.subtract(a,b))};Equation.prototype={toString:function(){return this.LHS.toString()+'='+this.RHS.toString()},text:function(option){return this.LHS.text(option)+'='+this.RHS.text(option)},toLHS:function(){return removeDenom(this.LHS.clone(),this.RHS.clone())},clone:function(){return new Equation(this.LHS.clone(),this.RHS.clone())},sub:function(x,y){var clone=this.clone();clone.LHS=clone.LHS.sub(x.clone(),y.clone());clone.RHS=clone.RHS.sub(x.clone(),y.clone());return clone},isZero:function(){return core.Utils.evaluate(this.toLHS()).equals(0)},latex:function(option){return[this.LHS.latex(option),this.RHS.latex(option)].join('=')}};_.equals=function(a,b){return new Equation(a,b)};var toLHS=function(eqn){if(eqn instanceof Equation)return eqn.toLHS();var es=eqn.split('=');if(es[1]===undefined)es[1]='0';var e1=_.parse(es[0]),e2=_.parse(es[1]);return removeDenom(e1,e2)};var checkAll=core.Utils.checkAll=function(args,test){for(var i=0;i<args.length;i++)
if(test(args[i]))return!1;return!0};var sys_solve=function(eqns,var_array){for(var i=0;i<eqns.length;i++)eqns[i]=toLHS(eqns[i]);var l=eqns.length,m=new core.Matrix(),c=new core.Matrix(),expand_result=!1,vars;if(typeof var_array==='undefined'){if(!_A.allLinear(eqns))core.err('System must contain all linear equations!');vars=variables(eqns[0]);for(var i=1;i<l;i++)vars=vars.concat(variables(eqns[i]));vars=core.Utils.arrayUnique(vars).sort();for(var i=0;i<vars.length;i++){nerdamer.setVar(vars[i],"delete")}for(var i=0;i<l;i++){var e=eqns[i];for(var j=0;j<l;j++){var variable=e.symbols[vars[j]];m.set(i,j,variable?variable.multiplier:0)}var num=e.symbols['#'];c.set(i,0,new Symbol(num?-num.multiplier:0))}}else{vars=var_array;expand_result=!0;for(i=0;i<l;i++){c.set(i,0,new Symbol(0));var e=_.expand(eqns[i]).collectSymbols();for(var j=0;j<var_array.length;j++){m.set(i,j,new Symbol(0));var v=var_array[j];for(var k=0;k<e.length;k++){var term=e[k],check=!1;for(var z=0;z<var_array.length;z++){if(term.contains(var_array[z])){if(check)core.err('Multiple variables found for term '+term);check=!0}}if(term.contains(v)){var tparts=explode(remove(e,k),v);m.set(i,j,_.add(m.get(i,j),tparts[0]))}}}for(k=0;k<e.length;k++){c.set(i,0,_.add(c.get(i,0),e[k]))}}}m=m.invert();var result=m.multiply(c);var solutions=[];result.each(function(e,idx){solutions.push([vars[idx],(expand_result?_.expand(e):e).valueOf()])});return solutions};var quad=function(c,b,a,plus_or_min){var plus_or_minus=plus_or_min==='-'?'subtract':'add';var bsqmin4ac=_.subtract(_.pow(b.clone(),Symbol(2)),_.multiply(_.multiply(a.clone(),c.clone()),Symbol(4)));var det=_.pow(bsqmin4ac,Symbol(0.5));var retval=_.divide(_[plus_or_minus](b.clone().negate(),det),_.multiply(new Symbol(2),a.clone()));return retval};var cubic=function(d_o,c_o,b_o,a_o){var a=a_o.text(),b=b_o.text(),c=c_o.text(),d=d_o.text();var d0s='({1})^2-3*({0})*({2})',d0=_.parse(format(d0s,a,b,c)),Q=_.parse(format('((2*({1})^3-9*({0})*({1})*({2})+27*({0})^2*({3}))^2-4*(({1})^2-3*({0})*({2}))^3)^(1/2)',a,b,c,d)),C=_.parse(format('((1/2)*(({4})+2*({1})^3-9*({0})*({1})*({2})+27*({0})^2*({3})))^(1/3)',a,b,c,d,Q));var scope={};variables(C).map(function(x){scope[x]=1});var Ct=core.Utils.block('PARSE2NUMBER',function(){return _.parse(C,scope)});if(Number(d0)===0&&Number(Ct)===0)C=_.parse(format('((1/2)*(-({4})+2*({1})^3-9*({0})*({1})*({2})+27*({0})^2*({3})))^(1/3)',a,b,c,d,Q));var xs=['-(b/(3*a))-C/(3*a)-(((b^2-3*a*c))/(3*a*C))','-(b/(3*a))+(C*(1+i*sqrt(3)))/(6*a)+((1-i*sqrt(3))*(b^2-3*a*c))/(6*a*C)'.replace(/i/g,core.Settings.IMAGINARY),'-(b/(3*a))+(C*(1-i*sqrt(3)))/(6*a)+((1+i*sqrt(3))*(b^2-3*a*c))/(6*a*C)'.replace(/i/g,core.Settings.IMAGINARY)];return xs.map(function(e,i){return _.parse(e,{a:a_o.clone(),b:b_o.clone(),c:c_o.clone(),d:d_o.clone(),C:C.clone()})})};var quartic=function(e,d,c,b,a){var scope={};core.Utils.arrayUnique(variables(a).concat(variables(b)).concat(variables(c)).concat(variables(d)).concat(variables(e))).map(function(x){scope[x]=1});a=a.toString();b=b.toString();c=c.toString();d=d.toString();e=e.toString();var p,q,D,D0,D1,Q,x1,x2,x3,x4;p=_.parse(format("(8*({0})*({2})-3*({1})^2)/(8*({0})^2)",a,b,c)).toString();q=_.parse(format("(({1})^3-4*({0})*({1})*({2})+8*({0})^2*({3}))/(8*({0})^3)",a,b,c,d)).toString();D0=_.parse(format("12*({0})*({4})-3*({1})*({3})+({2})^2",a,b,c,d,e)).toString();D1=_.parse(format("2*({2})^3-9*({1})*({2})*({3})+27*({1})^2*({4})+27*({0})*({3})^2-72*({0})*({2})*({4})",a,b,c,d,e)).toString();Q=_.parse(format("((({1})+(({1})^2-4*({0})^3)^(1/2))/2)^(1/3)",D0,D1)).toString();S=_.parse(format("(1/2)*(-(2/3)*({1})+(1/(3*({0}))*(({2})+(({3})/({2})))))^(1/2)",a,p,Q,D0)).toString();x1=_.parse(format("-(({1})/(4*({0})))-({4})+(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))",a,b,p,q,S));x2=_.parse(format("-(({1})/(4*({0})))-({4})-(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))",a,b,p,q,S));x3=_.parse(format("-(({1})/(4*({0})))+({4})+(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))",a,b,p,q,S));x4=_.parse(format("-(({1})/(4*({0})))+({4})-(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))",a,b,p,q,S));return[x1,x2,x3,x4]};var divnconsolve=function(symbol,solve_for){var sols=[];var factors=core.Algebra.Factor.factor(symbol);if(factors.group===CB){factors.each(function(x){x=Symbol.unwrapPARENS(x);sols=sols.concat(solve(x,solve_for))})}return sols};var csolve=function(symbol,solve_for){return core.Utils.block('IGNORE_E',function(){var f,p,pn,n,pf,r,theta,sr,sp,roots;roots=[];f=core.Utils.decompose_fn(symbol,solve_for,!0);if(f.x.group===S){p=_.parse(f.x.power);pn=Number(p);n=_.pow(_.divide(f.b.negate(),f.a),p.invert());pf=Symbol.toPolarFormArray(n);r=pf[0];theta=pf[1];sr=r.toString();sp=p.toString();var k,root,str;for(var i=0;i<pn;i++){k=i;str=format('({0})*e^(2*{1}*pi*{2}*{3})',sr,k,p,core.Settings.IMAGINARY);root=_.parse(str);roots.push(root)}}return roots},!0)};var polysolve=function(EQ,solve_for){solve_for=solve_for.toString();var eq=core.Utils.isSymbol(EQ)?EQ:toLHS(EQ);var factors=_A.Factor.factor(eq);var solutions=[];factors.each(function(x){var sols=solve(x.arg?x.args[0]:x,solve_for).map(function(a){solutions.push(a)})});return new core.Vector(solutions)};var solve=function(eqns,solve_for,solutions){if(eqns instanceof Equation){if(eqns.isZero())return[new Symbol(0)];if(eqns.LHS.equals(solve_for))return[eqns.RHS];if(eqns.RHS.equals(solve_for))return[eqns.LHS]}if(eqns instanceof core.Vector)eqns=eqns.elements;solve_for=solve_for||'x';if(isArray(eqns)){return sys_solve.apply(undefined,arguments)}solutions=solutions||[];if(eqns.group===S&&eqns.contains(solve_for)){solutions.push(new Symbol(0));return solutions}if(eqns.group===CB){var sf=String(solve_for);eqns.each(function(x){if(x.contains(sf))solve(x,solve_for,solutions)});return solutions}var existing={},add_to_result=function(r,has_trig){var r_is_symbol=isSymbol(r);if(r===undefined||typeof r==='number'&&isNaN(r))return;if(isArray(r))solutions=solutions.concat(r);else{if(r.valueOf()!=='null'){if(!r_is_symbol)r=_.parse(r);if(core.Settings.make_pi_conversions&&has_trig){var temp=_.divide(r.clone(),new Symbol(Math.PI)),m=temp.multiplier,a=Math.abs(m.num),b=Math.abs(m.den);if(a<10&&b<10)r=_.multiply(temp,new Symbol('pi'))}var r_str=r.toString();if(!existing[r_str])solutions.push(r);existing[r_str]=!0}}};var get_points=function(symbol){var f=build(symbol);var start=Math.round(f(0)),last=f(start),last_sign=last/Math.abs(last),points=[],rside=core.Settings.ROOTS_PER_SIDE,lside=rside*2+1;points.push(Math.floor(start/2));symbol.each(function(x){if(x.containsFunction('ln'))points.push(0.1)});for(var i=start;i<core.Settings.SOLVE_RADIUS;i++){var val=f(i*0.1),sign=val/Math.abs(val);if(isNaN(val)||!isFinite(val)||points.length>rside)break;if(sign!==last_sign)points.push((i-1)/2);last_sign=sign}for(var i=start-1;i>-core.Settings.SOLVE_RADIUS;i--){var val=f(i),sign=val/Math.abs(val);if(isNaN(val)||!isFinite(val)||points.length>lside)break;if(sign!==last_sign)points.push((i-1)/2);last_sign=sign}return points};var Newton=function(point,f,fp){var maxiter=200,iter=0;var x0=point,x;do{var fx0=f(x0);if(x0===0&&fx0===0){x=0;break}iter++;if(iter>maxiter)return;x=x0-fx0/fp(x0);var e=Math.abs(x-x0);x0=x}while(e>Number.EPSILON)return x};var attempt_Newton=function(symbol){var has_trig=symbol.hasTrig();var points=get_points(symbol),l=points.length;var f=build(symbol.clone()),fp=build(_C.diff(symbol.clone()));for(var i=0;i<l;i++){var point=points[i];add_to_result(Newton(point,f,fp),has_trig)}solutions.sort()};var eq=core.Utils.isSymbol(eqns)?eqns:toLHS(eqns),vars=core.Utils.variables(eq),numvars=vars.length;if(eq.group===S||eq.group===CB&&eq.contains(solve_for))return[new Symbol(0)];var fractionals={},cfact;var correct_denom=function(symbol){var original=symbol.clone();if(symbol.symbols){for(var x in symbol.symbols){var sym=symbol.symbols[x];var parts=explode(sym,solve_for);var is_sqrt=parts[1].fname===core.Settings.SQRT;var v=Symbol.unwrapSQRT(parts[1]);var p=v.power.clone();if(!isSymbol(p)&&!p.equals(1/2)){if(p.den.gt(1)){if(is_sqrt){symbol=_.subtract(symbol,sym.clone());symbol=_.add(symbol,_.multiply(parts[0].clone(),v));return correct_denom(symbol)}var c=fractionals[p.den];fractionals[p.den]=c?c++:1}else if(p.sign()===-1){var factor=_.parse(solve_for+'^'+Math.abs(p));symbol.each(function(y,index){if(y.contains(solve_for)){symbol.symbols[index]=_.multiply(y,factor.clone())}});fractionals={};return correct_denom(_.parse(symbol))}else if(sym.group===PL){var min_p=core.Utils.arrayMin(core.Utils.keys(sym.symbols));if(min_p<0){var factor=_.parse(solve_for+'^'+Math.abs(min_p));var corrected=new Symbol(0);original.each(function(x){corrected=_.add(corrected,_.multiply(x.clone(),factor.clone()))},!0);return corrected}}}}}return symbol};var rewrite=function(rhs,lhs){lhs=lhs||new Symbol(0);rhs=Symbol.unwrapSQRT(_.expand(rhs));var c=0,l=rhs.length;if(rhs.group===CP&&rhs.contains(solve_for)&&rhs.isLinear()){rhs.distributeMultiplier();var t=new Symbol(0);rhs.each(function(x){if(x.contains(solve_for)){c++;t=_.add(t,x.clone())}else lhs=_.subtract(lhs,x.clone())});rhs=t;if(c!==l)return rewrite(rhs,lhs);else{return[rhs,lhs]}}else if(rhs.group===CB&&rhs.contains(solve_for)&&rhs.isLinear()){if(rhs.multiplier.lessThan(0)){rhs.multiplier=rhs.multiplier.multiply(new core.Frac(-1));lhs.multiplier=lhs.multiplier.multiply(new core.Frac(-1))}if(lhs.equals(0))return new Symbol(0);else{var t=new Symbol(1);rhs.each(function(x){if(x.contains(solve_for))t=_.multiply(t,x.clone());else lhs=_.divide(lhs,x.clone())});rhs=t;return rewrite(rhs,lhs)}}else if(!rhs.isLinear()&&rhs.contains(solve_for)){var p=_.parse(rhs.power.clone().invert());rhs=_.pow(rhs,p.clone());lhs=_.pow(_.expand(lhs),p.clone());return rewrite(rhs,lhs)}else if(rhs.group===FN||rhs.group===S||rhs.group===PL){return[rhs,lhs]}};var separate=function(eq){var lhs=new Symbol(0),rhs=new Symbol(0);eq.each(function(x){if(x.contains(solve_for,!0))lhs=_.add(lhs,x.clone());else rhs=_.subtract(rhs,x.clone())});return[lhs,rhs]};eq=correct_denom(eq);if(eq.equals(0))return[eq];var fkeys=core.Utils.keys(fractionals);if(fkeys.length===1){cfact=fkeys[0];eq.each(function(x,index){if(x.contains(solve_for)){var parts=explode(x,solve_for);var v=parts[1];var p=v.power;if(p.den.gt(1)){v.power=p.multiply(new core.Frac(cfact));eq.symbols[index]=_.multiply(v,parts[0])}}});eq=_.parse(eq)}if(numvars===1){if(eq.isPoly(!0)){var coeffs=core.Utils.getCoeffs(eq,solve_for),deg=coeffs.length-1,was_calculated=!1;if(vars[0]===solve_for){if(checkAll(coeffs,function(x){return x.group!==core.groups.N})){var roots=core.Algebra.proots(eq);if(checkAll(roots,function(x){return!core.Utils.isInt(x)})){was_calculated=!0;roots.map(function(x){add_to_result(new Symbol(x))})}}if(!was_calculated){if(deg===1)add_to_result(_.divide(coeffs[0],coeffs[1].negate()));else if(deg===2){add_to_result(_.expand(quad.apply(undefined,coeffs)));coeffs.push('-');add_to_result(_.expand(quad.apply(undefined,coeffs)))}else if(deg===3)add_to_result(cubic.apply(undefined,coeffs));else{var sym_roots=csolve(eq,solve_for);if(sym_roots.length===0)sym_roots=divnconsolve(eq,solve_for);if(sym_roots.length>0)add_to_result(sym_roots);else _A.proots(eq).map(add_to_result)}}}}else{attempt_Newton(eq)}}else{if(!eq.hasFunc(solve_for)&&eq.isComposite()){try{var coeffs=core.Utils.getCoeffs(eq,solve_for);var l=coeffs.length,deg=l-1;switch(deg){case 0:var separated=separate(eq);var lhs=separated[0],rhs=separated[1];if(lhs.group===core.groups.EX){add_to_result(_.parse(core.Utils.format('log(({0})/({2}))/log({1})',rhs,lhs.value,lhs.multiplier)))}break;case 1:add_to_result(_.divide(coeffs[0],coeffs[1].negate()));break;case 2:add_to_result(quad.apply(undefined,coeffs));coeffs.push('-');add_to_result(quad.apply(undefined,coeffs));break;case 3:add_to_result(cubic.apply(undefined,coeffs));break;case 4:add_to_result(quartic.apply(undefined,coeffs));break;default:add_to_result(csolve(eq,solve_for));if(solutions.length===0)add_to_result(divnconsolve(eq,solve_for))}}catch(e){}}else{try{var rw=rewrite(eq);var lhs=rw[0];var rhs=rw[1];if(lhs.group===FN){if(lhs.fname==='abs'){solutions.push(rhs.clone());solutions.push(rhs.negate())}else solutions.push(_.subtract(lhs,rhs))}}catch(error){try{if(eq.group===CB)solutions.push(0);else if(eq.group===CP){var separated=separate(eq);var lhs=separated[0],rhs=separated[1];if(lhs.group===core.groups.EX&&lhs.value===solve_for){var p=lhs.power.clone().invert();solutions.push(_.pow(rhs,p))}}}catch(error){}}}}if(cfact){solutions=solutions.map(function(x){return _.pow(x,new Symbol(cfact))})}return solutions};core.Expression.prototype.solveFor=function(x){return solve(core.Utils.isSymbol(this.symbol)?this.symbol:this.symbol.toLHS(),x).map(function(x){return new core.Expression(x)})};core.Expression.prototype.expand=function(){if(this.symbol instanceof Equation){var clone=this.symbol.clone();clone.RHS=_.expand(clone.RHS);clone.LHS=_.expand(clone.LHS);return new core.Expression(clone)}return new core.Expression(_.expand(this.symbol))};core.Expression.prototype.variables=function(){if(this.symbol instanceof Equation)return core.Utils.arrayUnique(variables(this.symbol.LHS).concat(variables(this.symbol.RHS)));return variables(this.symbol)};var setEq=function(a,b){return _.equals(a,b)};core.Equation=Equation;nerdamer.register([{name:'solveEquations',parent:'nerdamer',numargs:-1,visible:!0,build:function(){return solve;return function(){return core.Utils.convertToVector(solve.apply(null,arguments))}}},{name:'solve',parent:'Solve',numargs:2,visible:!0,build:function(){return core.Solve.solve}},{name:'setEquation',parent:'Solve',visible:!0,build:function(){return setEq}}]);nerdamer.api()})()