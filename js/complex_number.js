!function(){return function r(e,t,o){function n(p,i){if(!t[p]){if(!e[p]){var a="function"==typeof require&&require;if(!i&&a)return a(p,!0);if(s)return s(p,!0);var l=new Error("Cannot find module '"+p+"'");throw l.code="MODULE_NOT_FOUND",l}var u=t[p]={exports:{}};e[p][0].call(u.exports,function(r){return n(e[p][1][r]||r)},u,u.exports,r,e,t,o)}return t[p].exports}for(var s="function"==typeof require&&require,p=0;p<o.length;p++)n(o[p]);return n}}()({1:[function(require,module,exports){(function(){var $,ABS,ADD,ADJ,AND,APPROXRATIO,ARCCOS,ARCCOSH,ARCSIN,ARCSINH,ARCTAN,ARCTANH,ARG,ASSUME_REAL_VARIABLES,ATOMIZE,AUTOEXPAND,BAKE,BESSELJ,BESSELY,BINDING,BINOMIAL,BINOM_check_args,BUF,C1,C2,C3,C4,C5,C6,CEILING,CHECK,CHOOSE,CIRCEXP,CLEAR,CLEARALL,CLEARPATTERNS,CLOCK,COEFF,COFACTOR,CONDENSE,CONJ,CONS,CONTRACT,COS,COSH,Condense,DEBUG,DEBUG_ABS,DEBUG_ARG,DEBUG_CLOCKFORM,DEBUG_IMAG,DEBUG_IS,DEBUG_POWER,DEBUG_RECT,DECOMP,DEFINT,DEGREE,DENOMINATOR,DERIVATIVE,DET,DET_check_arg,DIM,DIRAC,DIVISORS,DO,DOT,DOUBLE,DRAW,DRAWX,DSOLVE,E,EIGEN,EIGENVAL,EIGENVEC,EIG_N,EIG_check_arg,EIG_yydd,EIG_yyqq,ERF,ERFC,EVAL,EXP,EXPAND,EXPCOS,EXPSIN,Eval,Eval_Eval,Eval_abs,Eval_add,Eval_adj,Eval_and,Eval_approxratio,Eval_arccos,Eval_arccosh,Eval_arcsin,Eval_arcsinh,Eval_arctan,Eval_arctanh,Eval_arg,Eval_besselj,Eval_bessely,Eval_binding,Eval_binomial,Eval_ceiling,Eval_check,Eval_choose,Eval_circexp,Eval_clear,Eval_clearall,Eval_clearpatterns,Eval_clock,Eval_coeff,Eval_cofactor,Eval_condense,Eval_conj,Eval_cons,Eval_contract,Eval_cos,Eval_cosh,Eval_decomp,Eval_defint,Eval_degree,Eval_denominator,Eval_derivative,Eval_det,Eval_dim,Eval_dirac,Eval_divisors,Eval_do,Eval_dsolve,Eval_eigen,Eval_eigenval,Eval_eigenvec,Eval_erf,Eval_erfc,Eval_exp,Eval_expand,Eval_expcos,Eval_expsin,Eval_factor,Eval_factorial,Eval_factorpoly,Eval_filter,Eval_float,Eval_floor,Eval_for,Eval_function_reference,Eval_gamma,Eval_gcd,Eval_hermite,Eval_hilbert,Eval_imag,Eval_index,Eval_inner,Eval_integral,Eval_inv,Eval_invg,Eval_isinteger,Eval_isprime,Eval_laguerre,Eval_lcm,Eval_leading,Eval_legendre,Eval_log,Eval_lookup,Eval_mod,Eval_multiply,Eval_noexpand,Eval_not,Eval_nroots,Eval_number,Eval_numerator,Eval_operator,Eval_or,Eval_outer,Eval_pattern,Eval_patternsinfo,Eval_polar,Eval_power,Eval_predicate,Eval_prime,Eval_print,Eval_print2dascii,Eval_printcomputer,Eval_printhuman,Eval_printlatex,Eval_printlist,Eval_product,Eval_quote,Eval_quotient,Eval_rank,Eval_rationalize,Eval_real,Eval_rect,Eval_roots,Eval_round,Eval_setq,Eval_sgn,Eval_shape,Eval_silentpattern,Eval_simfac,Eval_simplify,Eval_sin,Eval_sinh,Eval_sqrt,Eval_stop,Eval_subst,Eval_sum,Eval_sym,Eval_symbolsinfo,Eval_tan,Eval_tanh,Eval_taylor,Eval_tensor,Eval_test,Eval_testeq,Eval_testge,Eval_testgt,Eval_testle,Eval_testlt,Eval_transpose,Eval_unit,Eval_user_function,Eval_zero,Evalpoly,FACTOR,FACTORIAL,FACTORPOLY,FILTER,FLOATF,FLOOR,FOR,FUNCTION,Find,GAMMA,GCD,HERMITE,HILBERT,IMAG,INDEX,INNER,INTEGRAL,INV,INVG,INV_check_arg,INV_decomp,ISINTEGER,ISPRIME,LAGUERRE,LAST,LAST_2DASCII_PRINT,LAST_FULL_PRINT,LAST_LATEX_PRINT,LAST_LIST_PRINT,LAST_PLAIN_PRINT,LAST_PRINT,LCM,LEADING,LEGENDRE,LOG,LOOKUP,M,MAXDIM,MAXPRIMETAB,MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES,MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE,MAX_PROGRAM_SIZE,MEQUAL,METAA,METAB,METAX,MLENGTH,MOD,MSIGN,MULTIPLY,MZERO,N,NIL,NOT,NROOTS,NROOTS_ABS,NROOTS_DELTA,NROOTS_EPSILON,NROOTS_RANDOM,NROOTS_YMAX,NROOTS_divpoly,NSYM,NUM,NUMBER,NUMERATOR,OPERATOR,OR,OUTER,PATTERN,PATTERNSINFO,PI,POLAR,POWER,PRIME,PRINT,PRINT2DASCII,PRINTFULL,PRINTLATEX,PRINTLIST,PRINTMODE_2DASCII,PRINTMODE_COMPUTER,PRINTMODE_HUMAN,PRINTMODE_LATEX,PRINTMODE_LIST,PRINTOUTRESULT,PRINTPLAIN,PRINT_LEAVE_E_ALONE,PRINT_LEAVE_X_ALONE,PRODUCT,QUOTE,QUOTIENT,RANK,RATIONALIZE,REAL,ROOTS,ROUND,SECRETX,SELFTEST,SETQ,SGN,SHAPE,SILENTPATTERN,SIMPLIFY,SIN,SINH,SPACE_BETWEEN_COLUMNS,SPACE_BETWEEN_ROWS,SQRT,STOP,STR,SUBST,SUM,SYM,SYMBOLSINFO,SYMBOL_A,SYMBOL_A_UNDERSCORE,SYMBOL_B,SYMBOL_B_UNDERSCORE,SYMBOL_C,SYMBOL_D,SYMBOL_I,SYMBOL_IDENTITY_MATRIX,SYMBOL_J,SYMBOL_N,SYMBOL_R,SYMBOL_S,SYMBOL_T,SYMBOL_X,SYMBOL_X_UNDERSCORE,SYMBOL_Y,SYMBOL_Z,TAN,TANH,TAYLOR,TENSOR,TEST,TESTEQ,TESTGE,TESTGT,TESTLE,TESTLT,TIMING_DEBUGS,TOS,TRACE,TRANSPOSE,T_DOUBLE,T_EQ,T_FUNCTION,T_GTEQ,T_INTEGER,T_LTEQ,T_NEQ,T_NEWLINE,T_QUOTASSIGN,T_STRING,T_SYMBOL,U,UNIT,USR_SYMBOLS,VERSION,YMAX,YYE,YYRECT,ZERO,__emit_char,__emit_str,__factor_add,__factorial,__is_negative,__is_radical_number,__lcm,__legendre,__legendre2,__legendre3,__normalize_radical_factors,__rationalize_tensor,_print,abs,absValFloat,absval,absval_tensor,ac,ad,add,addSymbolLeftOfAssignment,addSymbolRightOfAssignment,add_all,add_factor_to_accumulator,add_numbers,add_terms,addf,adj,alloc_tensor,allocatedId,any_denominators,approxAll,approxLogs,approxLogsOfRationals,approxOneRatioOnly,approxRadicals,approxRadicalsOfRationals,approxRationalsOfLogs,approxRationalsOfPowersOfE,approxRationalsOfPowersOfPI,approxRationalsOfRadicals,approxSineOfRationalMultiplesOfPI,approxSineOfRationals,approxTrigonometric,approx_just_an_integer,approx_logarithmsOfRationals,approx_nothingUseful,approx_radicalOfRatio,approx_ratioOfRadical,approx_rationalOfE,approx_rationalOfPi,approx_rationalsOfLogarithms,approx_sine_of_pi_times_rational,approx_sine_of_rational,approxratioRecursive,arccos,arccosh,arcsin,arcsinh,arctan,arctanh,arg,arglist,assignmentFound,avoidCalculatingPowersIntoArctans,bake,bake_poly,bake_poly_term,besselj,bessely,bigInt,bignum_factorial,bignum_float,bignum_power_number,bignum_scan_float,bignum_scan_integer,bignum_truncate,binding,binomial,buffer,build_tensor,caaddr,caadr,caar,cadaddr,cadadr,cadar,caddaddr,caddadr,caddar,caddddr,cadddr,caddr,cadr,called_from_Algebra_block,car,cdaddr,cdadr,cdar,cddaddr,cddar,cdddaddr,cddddr,cdddr,cddr,cdr,ceiling,chainOfUserSymbolsNotFunctionsBeingEvaluated,charTabIndex,chartab,checkFloatHasWorkedOutCompletely,check_esc_flag,check_stack,check_tensor_dimensions,choose,choose_check_args,circexp,clearAlgebraEnvironment,clearRenamedVariablesToAvoidBindingToExternalScope,clear_symbols,clear_term,clearall,clockform,cmpGlyphs,cmp_args,cmp_expr,cmp_terms,cmp_terms_count,codeGen,coeff,cofactor,collectLatexStringFromReturnValue,collectUserSymbols,combine_factors,combine_gammas,combine_terms,compareState,compare_numbers,compare_rationals,compare_tensors,compatible,computeDependenciesFromAlgebra,computeResultsAndJavaScriptFromAlgebra,compute_fa,conjugate,cons,consCount,contract,convert_bignum_to_double,convert_rational_to_double,copy_tensor,cosine,cosine_of_angle,cosine_of_angle_sum,count,countOccurrencesOfSymbol,count_denominators,counter,countsize,d_scalar_scalar,d_scalar_scalar_1,d_scalar_tensor,d_tensor_scalar,d_tensor_tensor,dabs,darccos,darccosh,darcsin,darcsinh,darctan,darctanh,dbesselj0,dbesseljn,dbessely0,dbesselyn,dcos,dcosh,dd,decomp,decomp_product,decomp_sum,defineSomeHandyConstants,define_user_function,defn,defn_str,degree,denominator,derf,derfc,derivative,derivative_of_integral,det,determinant,detg,dfunction,dhermite,dirac,display,display_flag,displaychar,divide,divide_numbers,divisors,divisors_onstack,divpoly,dlog,do_clearPatterns,do_clearall,do_simplify_nested_radicals,dontCreateNewRadicalsInDenominatorWhenEvalingMultiplication,dotprod_unicode,doubleToReasonableString,dpow,dpower,dproduct,draw_flag,draw_stop_return,dsgn,dsin,dsinh,dsum,dtan,dtanh,dupl,eigen,elelmIndex,elem,emit_denominator,emit_denominators,emit_expr,emit_factor,emit_factorial_function,emit_flat_tensor,emit_fraction,emit_function,emit_index_function,emit_multiply,emit_number,emit_numerators,emit_numerical_fraction,emit_power,emit_string,emit_subexpr,emit_symbol,emit_tensor,emit_tensor_inner,emit_term,emit_top_expr,emit_unsigned_expr,emit_x,equal,equaln,equalq,erfc,errorMessage,esc_flag,evaluatingAsFloats,evaluatingPolar,exec,expand,expand_get_A,expand_get_AF,expand_get_B,expand_get_C,expand_get_CF,expand_tensor,expanding,expcos,exponential,expr_level,expsin,f1,f10,f2,f3,f4,f5,f9,f_equals_a,factor,factor_a,factor_again,factor_b,factor_number,factor_small_number,factor_term,factorial,factorpoly,factors,factpoly_expo,fill_buf,filter,filter_main,filter_sum,filter_tensor,findDependenciesInScript,findPossibleClockForm,findPossibleExponentialForm,findroot,fixup_fraction,fixup_power,flag,floatToRatioRoutine,fmt_index,fmt_level,fmt_x,frame,freeze,functionInvokationsScanningStack,gamma,gamma_of_sum,gammaf,gcd,gcd_expr,gcd_expr_expr,gcd_factor_term,gcd_main,gcd_numbers,gcd_term_factor,gcd_term_term,gen,getSimpleRoots,getStateHash,get_binding,get_factor_from_complex_root,get_factor_from_real_root,get_innerprod_factors,get_next_token,get_printname,get_size,get_token,getdisplaystr,glyph,gp,guess,hasImaginaryCoeff,hasNegativeRationalExponent,hermite,hilbert,imag,imaginaryunit,index_function,init,initNRoots,inited,inner,inner_f,input_str,integral,integral_of_form,integral_of_product,integral_of_sum,inv,inverse,invert_number,invg,isNumberOneOverSomething,isNumericAtom,isNumericAtomOrTensor,isSimpleRoot,isSymbolLeftOfAssignment,isSymbolReclaimable,isZeroAtomOrTensor,isZeroLikeOrNonZeroLikeOrUndetermined,is_denominator,is_factor,is_small_integer,is_square_matrix,is_usr_symbol,isadd,isalnumorunderscore,isalpha,isalphaOrUnderscore,iscomplexnumber,iscomplexnumberdouble,iscons,isdenominator,isdigit,isdouble,iseveninteger,isfactor,isfactorial,isfloating,isfraction,isidentitymatrix,isimaginarynumber,isimaginarynumberdouble,isimaginaryunit,isinnerordot,isinteger,isintegerfactor,isintegerorintegerfloat,isinv,iskeyword,isminusone,isminusoneoversqrttwo,isminusoneovertwo,ismultiply,isnegative,isnegativenumber,isnegativeterm,isnonnegativeinteger,isnpi,isone,isoneover,isoneoversqrttwo,isoneovertwo,isplusone,isplustwo,ispoly,ispoly_expr,ispoly_factor,ispoly_term,isposint,ispositivenumber,ispower,isquarterturn,isrational,isspace,isstr,issymbol,issymbolic,istensor,istranspose,isunderscore,itab,laguerre,laguerre2,lastFoundSymbol,latexErrorSign,lcm,leading,legendre,length,lessp,level,list,listLength,logarithm,logbuf,lookupsTotal,lu_decomp,madd,makePositive,makeSignSameAs,mask,mcmp,mcmpint,mdiv,mdivrem,meta_mode,mgcd,mini_solve,mint,mmod,mmul,mod,monic,move,moveTos,mp_clr_bit,mp_denominator,mp_numerator,mp_set_bit,mpow,mprime,mroot,mshiftright,msub,mtotal,multinomial_sum,multiply,multiply_all,multiply_all_noexpand,multiply_consecutive_constants,multiply_denominators,multiply_denominators_factor,multiply_denominators_term,multiply_noexpand,multiply_numbers,n_factor_number,negate,negate_expand,negate_noexpand,negate_number,new_string,newline_flag,nil_symbols,normaliseDots,normalisedCoeff,normalize_angle,nroots_a,nroots_b,nroots_c,nroots_df,nroots_dx,nroots_fa,nroots_fb,nroots_x,nroots_y,nterms,nthCadr,numerator,numericRootOfPolynomial,o,one,oneElement,one_as_double,out_buf,out_count,out_of_memory,outer,p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,parse,parse_internal,parse_p1,parse_p2,parse_time_simplifications,partition,patternHasBeenFound,patternsinfo,peek,performing_roots,polar,polarRectAMinusOneBase,polycoeff,polyform,pop,pop_double,pop_frame,pop_integer,power,power_str,power_sum,power_tensor,predefinedSymbolsInGlobalScope_doNotTrackInDependencies,prime,primetab,print2dascii,printMode,print_ABS_latex,print_ARCCOS_codegen,print_ARCSIN_codegen,print_ARCTAN_codegen,print_BINOMIAL_latex,print_COS_codegen,print_DEFINT_latex,print_DOT_codegen,print_DOT_latex,print_DO_codegen,print_FOR_codegen,print_INV_codegen,print_INV_latex,print_PRODUCT_codegen,print_PRODUCT_latex,print_SETQ_codegen,print_SIN_codegen,print_SQRT_latex,print_SUM_codegen,print_SUM_latex,print_TAN_codegen,print_TESTEQ_latex,print_TESTGE_latex,print_TESTGT_latex,print_TESTLE_latex,print_TESTLT_latex,print_TEST_codegen,print_TEST_latex,print_TRANSPOSE_codegen,print_TRANSPOSE_latex,print_UNIT_codegen,print_a_over_b,print_base,print_base_of_denom,print_char,print_denom,print_double,print_expo_of_denom,print_exponent,print_expr,print_factor,print_factorial_function,print_glyphs,print_index_function,print_list,print_multiply_sign,print_number,print_power,print_str,print_subexpr,print_tensor,print_tensor_inner,print_tensor_inner_latex,print_tensor_latex,print_term,printchar,printchar_nowrap,printline,program_buf,promote_tensor,push,pushTryNotToDuplicate,push_cars,push_double,push_factor,push_frame,push_identity_matrix,push_integer,push_rational,push_symbol,push_term_factors,push_terms,push_zero_matrix,qadd,qdiv,qmul,qpow,qpowf,quickfactor,quickpower,rational,rationalize,rationalize_coefficients,real,reciprocate,rect,recursionLevelNestedRadicalsRemoval,recursiveDependencies,ref,ref1,rememberPrint,remove_negative_exponents,reset_after_error,restore,restoreMetaBindings,rewrite_args,rewrite_args_tensor,roots,roots2,roots3,run,runUserDefinedSimplifications,save,saveMetaBindings,scalar_times_tensor,scan,scan_error,scan_expression,scan_factor,scan_function_call_with_function_name,scan_function_call_without_function_name,scan_index,scan_meta,scan_power,scan_relation,scan_stmt,scan_str,scan_string,scan_subexpr,scan_symbol,scan_tensor,scan_term,scanned,scanningParameters,setM,setSignTo,set_binding,set_component,setq_indexed,sfac_product,sfac_product_f,sgn,shape,show_power_debug,sign,sign_of_term,simfac,simfac_term,simpleComplexityMeasure,simplify,simplifyForCodeGeneration,simplify_1_in_products,simplify_main,simplify_nested_radicals,simplify_polar,simplify_polarRect,simplify_rectToClock,simplify_tensor,simplify_trig,simplifyfactorials,sine,sine_of_angle,sine_of_angle_sum,skipRootVariableToBeSolved,sort_stack,square,ssqrt,stack,stackAddsCount,std_symbol,step,step2,stop,strcmp,stringsEmittedByUserPrintouts,subf,subst,subtract,subtract_numbers,swap,symbol,symbolsDependencies,symbolsHavingReassignments,symbolsInExpressionsWithoutAssignments,symbolsLeftOfAssignment,symbolsRightOfAssignment,symbolsinfo,symnum,symtab,take_care_of_nested_radicals,tangent,taylor,tensor,tensor_plus_tensor,tensor_times_scalar,testApprox,test_flag,text_metric,theRandom,token,token_buf,token_str,top,top_level_eval,tos,transform,transpose,transpose_unicode,trigmode,trivial_divide,try_kth_prime,turnErrorMessageToLatex,ucmp,unfreeze,unique,unique_f,update_token_buf,userSimplificationsInListForm,userSimplificationsInStringForm,usr_symbol,verbosing,version,will_be_displayed_as_fraction,ybinomial,ycosh,ydirac,yerf,yerfc,yfloor,yindex,yround,ysinh,yyarg,yybesselj,yybessely,yyceiling,yycondense,yycontract,yycosh,yydegree,yydetg,yydivpoly,yyerf,yyerfc,yyexpand,yyfactorpoly,yyfloat,yyfloor,yyhermite,yyhermite2,yyinvg,yylcm,yylog,yymultiply,yyouter,yypower,yyrationalize,yyround,yysgn,yysimfac,yysinh,yytangent,zero,zzfloat,slice=[].slice;bigInt=require("big-integer"),version="1.2.0",SELFTEST=1,NSYM=1e3,DEBUG=!1,PRINTOUTRESULT=!1,PRINTMODE_LATEX="PRINTMODE_LATEX",PRINTMODE_2DASCII="PRINTMODE_2DASCII",PRINTMODE_COMPUTER="PRINTMODE_COMPUTER",PRINTMODE_HUMAN="PRINTMODE_HUMAN",PRINTMODE_LIST="PRINTMODE_LIST",printMode=PRINTMODE_COMPUTER,dontCreateNewRadicalsInDenominatorWhenEvalingMultiplication=!0,recursionLevelNestedRadicalsRemoval=0,do_simplify_nested_radicals=!0,avoidCalculatingPowersIntoArctans=!0,rational=function(){function r(){}return r.prototype.a=null,r.prototype.b=null,r}(),U=function(){function r(){this.cons={},this.cons.car=null,this.cons.cdr=null,this.q=new rational}return r.prototype.cons=null,r.prototype.printname="",r.prototype.str="",r.prototype.tensor=null,r.prototype.q=null,r.prototype.d=0,r.prototype.k=0,r.prototype.tag=0,r.prototype.toString=function(){return print_expr(this)},r.prototype.toLatexString=function(){return collectLatexStringFromReturnValue(this)},r}(),errorMessage="",CONS=0,NUM=1,DOUBLE=2,STR=3,TENSOR=4,SYM=5,counter=0,ABS=counter++,ADD=counter++,ADJ=counter++,AND=counter++,APPROXRATIO=counter++,ARCCOS=counter++,ARCCOSH=counter++,ARCSIN=counter++,ARCSINH=counter++,ARCTAN=counter++,ARCTANH=counter++,ARG=counter++,ATOMIZE=counter++,BESSELJ=counter++,BESSELY=counter++,BINDING=counter++,BINOMIAL=counter++,CEILING=counter++,CHECK=counter++,CHOOSE=counter++,CIRCEXP=counter++,CLEAR=counter++,CLEARALL=counter++,CLEARPATTERNS=counter++,CLOCK=counter++,COEFF=counter++,COFACTOR=counter++,CONDENSE=counter++,CONJ=counter++,CONTRACT=counter++,COS=counter++,COSH=counter++,DECOMP=counter++,DEFINT=counter++,DEGREE=counter++,DENOMINATOR=counter++,DERIVATIVE=counter++,DET=counter++,DIM=counter++,DIRAC=counter++,DIVISORS=counter++,DO=counter++,DOT=counter++,DRAW=counter++,DSOLVE=counter++,EIGEN=counter++,EIGENVAL=counter++,EIGENVEC=counter++,ERF=counter++,ERFC=counter++,EVAL=counter++,EXP=counter++,EXPAND=counter++,EXPCOS=counter++,EXPSIN=counter++,FACTOR=counter++,FACTORIAL=counter++,FACTORPOLY=counter++,FILTER=counter++,FLOATF=counter++,FLOOR=counter++,FOR=counter++,FUNCTION=counter++,GAMMA=counter++,GCD=counter++,HERMITE=counter++,HILBERT=counter++,IMAG=counter++,INDEX=counter++,INNER=counter++,INTEGRAL=counter++,INV=counter++,INVG=counter++,ISINTEGER=counter++,ISPRIME=counter++,LAGUERRE=counter++,LCM=counter++,LEADING=counter++,LEGENDRE=counter++,LOG=counter++,LOOKUP=counter++,MOD=counter++,MULTIPLY=counter++,NOT=counter++,NROOTS=counter++,NUMBER=counter++,NUMERATOR=counter++,OPERATOR=counter++,OR=counter++,OUTER=counter++,PATTERN=counter++,PATTERNSINFO=counter++,POLAR=counter++,POWER=counter++,PRIME=counter++,PRINT_LEAVE_E_ALONE=counter++,PRINT_LEAVE_X_ALONE=counter++,PRINT=counter++,PRINT2DASCII=counter++,PRINTFULL=counter++,PRINTLATEX=counter++,PRINTLIST=counter++,PRINTPLAIN=counter++,PRODUCT=counter++,QUOTE=counter++,QUOTIENT=counter++,RANK=counter++,RATIONALIZE=counter++,REAL=counter++,ROUND=counter++,YYRECT=counter++,ROOTS=counter++,SETQ=counter++,SGN=counter++,SILENTPATTERN=counter++,SIMPLIFY=counter++,SIN=counter++,SINH=counter++,SHAPE=counter++,SQRT=counter++,STOP=counter++,SUBST=counter++,SUM=counter++,SYMBOLSINFO=counter++,TAN=counter++,TANH=counter++,TAYLOR=counter++,TEST=counter++,TESTEQ=counter++,TESTGE=counter++,TESTGT=counter++,TESTLE=counter++,TESTLT=counter++,TRANSPOSE=counter++,UNIT=counter++,ZERO=counter++,NIL=counter++,LAST=counter++,LAST_PRINT=counter++,LAST_2DASCII_PRINT=counter++,LAST_FULL_PRINT=counter++,LAST_LATEX_PRINT=counter++,LAST_LIST_PRINT=counter++,LAST_PLAIN_PRINT=counter++,AUTOEXPAND=counter++,BAKE=counter++,ASSUME_REAL_VARIABLES=counter++,TRACE=counter++,YYE=counter++,DRAWX=counter++,METAA=counter++,METAB=counter++,METAX=counter++,SECRETX=counter++,VERSION=counter++,PI=counter++,SYMBOL_A=counter++,SYMBOL_B=counter++,SYMBOL_C=counter++,SYMBOL_D=counter++,SYMBOL_I=counter++,SYMBOL_J=counter++,SYMBOL_N=counter++,SYMBOL_R=counter++,SYMBOL_S=counter++,SYMBOL_T=counter++,SYMBOL_X=counter++,SYMBOL_Y=counter++,SYMBOL_Z=counter++,SYMBOL_IDENTITY_MATRIX=counter++,SYMBOL_A_UNDERSCORE=counter++,SYMBOL_B_UNDERSCORE=counter++,SYMBOL_X_UNDERSCORE=counter++,C1=counter++,C2=counter++,C3=counter++,C4=counter++,C5=counter++,C6=counter++,USR_SYMBOLS=counter++,E=YYE,TOS=1e5,BUF=1e4,MAX_PROGRAM_SIZE=100001,MAXPRIMETAB=1e4,MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES=5,MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE=10,MAXDIM=24,symbolsDependencies={},symbolsHavingReassignments=[],symbolsInExpressionsWithoutAssignments=[],patternHasBeenFound=!1,predefinedSymbolsInGlobalScope_doNotTrackInDependencies=["rationalize","abs","e","i","pi","sin","ceiling","cos","roots","integral","derivative","defint","sqrt","eig","cov","deig","dcov","float","floor","product","root","round","sum","test","unit"],parse_time_simplifications=!0,chainOfUserSymbolsNotFunctionsBeingEvaluated=[],stringsEmittedByUserPrintouts="",called_from_Algebra_block=!1,tensor=function(){function r(){this.dim=function(){var r,e,t;for(t=[],r=0,e=MAXDIM;0<=e?r<=e:r>=e;0<=e?r++:r--)t.push(0);return t}(),this.elem=[]}return r.prototype.ndim=0,r.prototype.dim=null,r.prototype.nelem=0,r.prototype.elem=null,r}(),display=function(){function r(){}return r.prototype.h=0,r.prototype.w=0,r.prototype.n=0,r.prototype.a=[],r}(),text_metric=function(){function r(){}return r.prototype.ascent=0,r.prototype.descent=0,r.prototype.width=0,r}(),tos=0,expanding=0,evaluatingAsFloats=0,evaluatingPolar=0,fmt_x=0,fmt_index=0,fmt_level=0,verbosing=0,primetab=function(){var r,e,t,o;for(o=[2],e=3;o.length<MAXPRIMETAB;){for(t=0,r=Math.sqrt(e);t<o.length&&o[t]<=r;){if(e%o[t]==0){t=-1;break}t++}-1!==t&&o.push(e),e+=2}return o[MAXPRIMETAB]=0,o}(),esc_flag=0,draw_flag=0,mtotal=0,trigmode=0,logbuf="",program_buf="",symtab=[],binding=[],isSymbolReclaimable=[],arglist=[],stack=[],frame=0,p0=null,p1=null,p2=null,p3=null,p4=null,p5=null,p6=null,p7=null,p8=null,p9=null,zero=null,one=null,one_as_double=null,imaginaryunit=null,out_buf="",out_count=0,test_flag=0,codeGen=!1,draw_stop_return=null,userSimplificationsInListForm=[],userSimplificationsInStringForm=[],transpose_unicode=7488,dotprod_unicode=183,symbol=function(r){return symtab[r]},iscons=function(r){return r.k===CONS},isrational=function(r){return r.k===NUM},isdouble=function(r){return r.k===DOUBLE},isNumericAtom=function(r){return isrational(r)||isdouble(r)},isstr=function(r){return r.k===STR},istensor=function(r){if(null!=r)return r.k===TENSOR},isNumericAtomOrTensor=function(r){var e,t,o,n,s;if(isNumericAtom(r)||r===symbol(SYMBOL_IDENTITY_MATRIX))return 1;if(!istensor(r)&&!isNumericAtom(r))return 0;for(o=r.tensor.nelem,e=r.tensor.elem,t=n=0,s=o;0<=s?n<s:n>s;t=0<=s?++n:--n)if(!isNumericAtomOrTensor(e[t]))return 0;return 1},issymbol=function(r){return r.k===SYM},iskeyword=function(r){return issymbol(r)&&symnum(r)<NIL},car=function(r){return iscons(r)?r.cons.car:symbol(NIL)},cdr=function(r){return iscons(r)?r.cons.cdr:symbol(NIL)},caar=function(r){return car(car(r))},cadr=function(r){return car(cdr(r))},cdar=function(r){return cdr(car(r))},cddr=function(r){return cdr(cdr(r))},caadr=function(r){return car(car(cdr(r)))},caddr=function(r){return car(cdr(cdr(r)))},cadar=function(r){return car(cdr(car(r)))},cdadr=function(r){return cdr(car(cdr(r)))},cddar=function(r){return cdr(cdr(car(r)))},cdddr=function(r){return cdr(cdr(cdr(r)))},caaddr=function(r){return car(car(cdr(cdr(r))))},cadadr=function(r){return car(cdr(car(cdr(r))))},caddar=function(r){return car(cdr(cdr(car(r))))},cdaddr=function(r){return cdr(car(cdr(cdr(r))))},cadddr=function(r){return car(cdr(cdr(cdr(r))))},cddddr=function(r){return cdr(cdr(cdr(cdr(r))))},caddddr=function(r){return car(cdr(cdr(cdr(cdr(r)))))},cadaddr=function(r){return car(cdr(car(cdr(cdr(r)))))},cddaddr=function(r){return cdr(cdr(car(cdr(cdr(r)))))},caddadr=function(r){return car(cdr(cdr(car(cdr(r)))))},cdddaddr=function(r){return cdr(cdr(cdr(car(cdr(cdr(r))))))},caddaddr=function(r){return car(cdr(cdr(car(cdr(cdr(r))))))},listLength=function(r){var e;for(e=-1;iscons(r);)r=cdr(r),e++;return e},nthCadr=function(r,e){var t;for(t=0;t<=e;)r=cdr(r),t++;return car(r)},isadd=function(r){return car(r)===symbol(ADD)},ismultiply=function(r){return car(r)===symbol(MULTIPLY)},ispower=function(r){return car(r)===symbol(POWER)},isfactorial=function(r){return car(r)===symbol(FACTORIAL)},isinnerordot=function(r){return car(r)===symbol(INNER)||car(r)===symbol(DOT)},istranspose=function(r){return car(r)===symbol(TRANSPOSE)},isinv=function(r){return car(r)===symbol(INV)},isidentitymatrix=function(r){return r===symbol(SYMBOL_IDENTITY_MATRIX)},MSIGN=function(r){return r.isPositive()?1:r.isZero()?0:-1},MLENGTH=function(r){return r.toString().length},MZERO=function(r){return r.isZero()},MEQUAL=function(r,e){return r.equals(e)},reset_after_error=function(){return moveTos(0),esc_flag=0,draw_flag=0,frame=TOS,evaluatingAsFloats=0,evaluatingPolar=0},$=void 0!==exports&&null!==exports?exports:this,$.version=version,$.isadd=isadd,$.ismultiply=ismultiply,$.ispower=ispower,$.isfactorial=isfactorial,$.car=car,$.cdr=cdr,$.caar=caar,$.cadr=cadr,$.cdar=cdar,$.cddr=cddr,$.caadr=caadr,$.caddr=caddr,$.cadar=cadar,$.cdadr=cdadr,$.cddar=cddar,$.cdddr=cdddr,$.caaddr=caaddr,$.cadadr=cadadr,$.caddar=caddar,$.cdaddr=cdaddr,$.cadddr=cadddr,$.cddddr=cddddr,$.caddddr=caddddr,$.cadaddr=cadaddr,$.cddaddr=cddaddr,$.caddadr=caddadr,$.cdddaddr=cdddaddr,$.caddaddr=caddaddr,$.symbol=symbol,$.iscons=iscons,$.isrational=isrational,$.isdouble=isdouble,$.isNumericAtom=isNumericAtom,$.isstr=isstr,$.istensor=istensor,$.issymbol=issymbol,$.iskeyword=iskeyword,$.CONS=CONS,$.NUM=NUM,$.DOUBLE=DOUBLE,$.STR=STR,$.TENSOR=TENSOR,$.SYM=SYM,DEBUG_ABS=!1,Eval_abs=function(){return push(cadr(p1)),Eval(),abs()},absValFloat=function(){return Eval(),absval(),Eval(),zzfloat()},abs=function(){var r;if(r=top(),DEBUG_ABS&&console.trace(">>>>  ABS of "+r),numerator(),DEBUG_ABS&&console.log("ABS numerator "+stack[tos-1]),absval(),DEBUG_ABS&&console.log("ABSVAL numerator: "+stack[tos-1]),push(r),denominator(),DEBUG_ABS&&console.log("ABS denominator: "+stack[tos-1]),absval(),DEBUG_ABS&&console.log("ABSVAL denominator: "+stack[tos-1]),divide(),DEBUG_ABS&&console.log("ABSVAL divided: "+stack[tos-1]),DEBUG_ABS)return console.log("<<<<<<<  ABS")},absval=function(){var r,e;if(save(),e=p1=pop(),DEBUG_ABS&&console.log("ABS of "+p1),isZeroAtomOrTensor(p1))return DEBUG_ABS&&console.log(" abs: "+p1+" just zero"),push(zero),DEBUG_ABS&&console.log(" --\x3e ABS of "+e+" : "+stack[tos-1]),void restore();if(isnegativenumber(p1))return DEBUG_ABS&&console.log(" abs: "+p1+" just a negative"),push(p1),negate(),void restore();if(ispositivenumber(p1))return DEBUG_ABS&&console.log(" abs: "+p1+" just a positive"),push(p1),DEBUG_ABS&&console.log(" --\x3e ABS of "+e+" : "+stack[tos-1]),void restore();if(p1===symbol(PI))return DEBUG_ABS&&console.log(" abs: "+p1+" of PI"),push(p1),DEBUG_ABS&&console.log(" --\x3e ABS of "+e+" : "+stack[tos-1]),void restore();if(car(p1)===symbol(ADD)&&(findPossibleClockForm(p1)||findPossibleExponentialForm(p1)||Find(p1,imaginaryunit)))return DEBUG_ABS&&console.log(" abs: "+p1+" is a sum"),DEBUG_ABS&&console.log("abs of a sum"),push(p1),rect(),p1=pop(),push(p1),real(),push_integer(2),power(),push(p1),imag(),push_integer(2),power(),add(),push_rational(1,2),power(),simplify_trig(),DEBUG_ABS&&console.log(" --\x3e ABS of "+e+" : "+stack[tos-1]),void restore();if(car(p1)===symbol(POWER)&&equaln(cadr(p1),-1))return DEBUG_ABS&&console.log(" abs: "+p1+" is -1 to any power"),evaluatingAsFloats?(DEBUG_ABS&&console.log(" abs: numeric, so result is 1.0"),push_double(1)):(DEBUG_ABS&&console.log(" abs: symbolic, so result is 1"),push_integer(1)),DEBUG_ABS&&console.log(" --\x3e ABS of "+e+" : "+stack[tos-1]),void restore();if(car(p1)===symbol(POWER)&&ispositivenumber(caddr(p1)))return DEBUG_ABS&&console.log(" abs: "+p1+" is something to the power of a positive number"),push(cadr(p1)),abs(),push(caddr(p1)),power(),DEBUG_ABS&&console.log(" --\x3e ABS of "+e+" : "+stack[tos-1]),void restore();if(car(p1)===symbol(POWER)&&cadr(p1)===symbol(E))return DEBUG_ABS&&console.log(" abs: "+p1+" is an exponential"),push(caddr(p1)),real(),exponential(),DEBUG_ABS&&console.log(" --\x3e ABS of "+e+" : "+stack[tos-1]),void restore();if(car(p1)===symbol(MULTIPLY)){for(DEBUG_ABS&&console.log(" abs: "+p1+" is a product"),r=!1,p1=cdr(p1);iscons(p1);)push(car(p1)),absval(),r&&multiply(),r=!0,p1=cdr(p1);return DEBUG_ABS&&console.log(" --\x3e ABS of "+e+" : "+stack[tos-1]),void restore()}return car(p1)===symbol(ABS)?(DEBUG_ABS&&console.log(" abs: "+p1+" is abs of a abs"),push_symbol(ABS),push(cadr(p1)),list(2),DEBUG_ABS&&console.log(" --\x3e ABS of "+e+" : "+stack[tos-1]),void restore()):istensor(p1)?(absval_tensor(),void restore()):((isnegativeterm(p1)||car(p1)===symbol(ADD)&&isnegativeterm(cadr(p1)))&&(push(p1),negate(),p1=pop()),DEBUG_ABS&&console.log(" abs: "+p1+" is nothing decomposable"),push_symbol(ABS),push(p1),list(2),DEBUG_ABS&&console.log(" --\x3e ABS of "+e+" : "+stack[tos-1]),restore())},absval_tensor=function(){return 1!==p1.tensor.ndim&&stop("abs(tensor) with tensor rank > 1"),push(p1),push(p1),conjugate(),inner(),push_rational(1,2),power(),simplify(),Eval()},flag=0,Eval_add=function(){var r;for(r=tos,p1=cdr(p1);iscons(p1);)push(car(p1)),Eval(),p2=pop(),push_terms(p2),p1=cdr(p1);return add_terms(tos-r)},stackAddsCount=0,add_terms=function(r){var e,t,o,n,s,p,i,a,l;if(stackAddsCount++,n=0,o=tos-r,DEBUG&&console.log("stack before adding terms #"+stackAddsCount),DEBUG)for(n=s=0,p=tos;0<=p?s<p:s>p;n=0<=p?++s:--s)console.log(print_list(stack[n]));for(n=e=0;e<10&&!(r<2)&&(flag=0,(l=stack.slice(o,o+r)).sort(cmp_terms),stack=stack.slice(0,o).concat(l).concat(stack.slice(o+r)),0!==flag);n=++e)r=combine_terms(o,r);switch(moveTos(o+r),r){case 0:evaluatingAsFloats?push_double(0):push(zero);break;case 1:break;default:list(r),p1=pop(),push_symbol(ADD),push(p1),cons()}if(DEBUG&&console.log("stack after adding terms #"+stackAddsCount),DEBUG){for(a=[],n=t=0,i=tos;0<=i?t<i:t>i;n=0<=i?++t:--t)a.push(console.log(print_list(stack[n])));return a}},cmp_terms_count=0,cmp_terms=function(r,e){var t,o,n,s;if(cmp_terms_count++,t=0,isNumericAtom(r)&&isNumericAtom(e))return flag=1,0;if(istensor(r)&&istensor(e)){if(r.tensor.ndim<e.tensor.ndim)return-1;if(r.tensor.ndim>e.tensor.ndim)return 1;for(t=o=0,n=r.tensor.ndim;0<=n?o<n:o>n;t=0<=n?++o:--o){if(r.tensor.dim[t]<e.tensor.dim[t])return-1;if(r.tensor.dim[t]>e.tensor.dim[t])return 1}return flag=1,0}return car(r)===symbol(MULTIPLY)&&(r=cdr(r),isNumericAtom(car(r))&&(r=cdr(r),cdr(r)===symbol(NIL)&&(r=car(r)))),car(e)===symbol(MULTIPLY)&&(e=cdr(e),isNumericAtom(car(e))&&(e=cdr(e),cdr(e)===symbol(NIL)&&(e=car(e)))),0===(s=cmp_expr(r,e))&&(flag=1),s},combine_terms=function(r,e){var t,o,n,s,p,i,a,l,u,c,d,_,m,f,h,g,b,E;for(p=0;p<e-1;)if(check_esc_flag(),p3=stack[r+p],p4=stack[r+p+1],istensor(p3)&&istensor(p4)){if(push(p3),push(p4),tensor_plus_tensor(),(p1=pop())!==symbol(NIL)){for(stack[r+p]=p1,i=a=l=p+1,u=e-1;l<=u?a<u:a>u;i=l<=u?++a:--a)stack[r+i]=stack[r+i+1];e--,p--}p++}else if(istensor(p3)||istensor(p4))p++;else if(isNumericAtom(p3)&&isNumericAtom(p4)){if(push(p3),push(p4),add_numbers(),p1=pop(),isZeroAtomOrTensor(p1)){for(i=t=c=p,d=e-2;c<=d?t<d:t>d;i=c<=d?++t:--t)stack[r+i]=stack[r+i+2];e-=2}else{for(stack[r+p]=p1,i=o=_=p+1,m=e-1;_<=m?o<m:o>m;i=_<=m?++o:--o)stack[r+i]=stack[r+i+1];e--}p--,p++}else if(isNumericAtom(p3)||isNumericAtom(p4))p++;else if(evaluatingAsFloats?(p1=one_as_double,p2=one_as_double):(p1=one,p2=one),E=0,car(p3)===symbol(MULTIPLY)&&(p3=cdr(p3),E=1,isNumericAtom(car(p3))&&(p1=car(p3),p3=cdr(p3),cdr(p3)===symbol(NIL)&&(p3=car(p3),E=0))),car(p4)===symbol(MULTIPLY)&&(p4=cdr(p4),isNumericAtom(car(p4))&&(p2=car(p4),p4=cdr(p4),cdr(p4)===symbol(NIL)&&(p4=car(p4)))),equal(p3,p4))if(push(p1),push(p2),add_numbers(),p1=pop(),isZeroAtomOrTensor(p1)){for(i=n=f=p,h=e-2;f<=h?n<h:n>h;i=f<=h?++n:--n)stack[r+i]=stack[r+i+2];e-=2,p--,p++}else{for(push(p1),E?(push(symbol(MULTIPLY)),push(p3),cons()):push(p3),multiply(),stack[r+p]=pop(),i=s=g=p+1,b=e-1;g<=b?s<b:s>b;i=g<=b?++s:--s)stack[r+i]=stack[r+i+1];e--,p--,p++}else p++;return e},push_terms=function(r){var e;if(car(r)===symbol(ADD)){for(r=cdr(r),e=[];iscons(r);)push(car(r)),e.push(r=cdr(r));return e}if(!isZeroAtomOrTensor(r))return push(r)},add=function(){var r;return save(),p2=pop(),p1=pop(),r=tos,push_terms(p1),push_terms(p2),add_terms(tos-r),restore()},add_all=function(r){var e,t,o,n,s;for(t=0,save(),s=tos-r,e=tos,t=o=0,n=r;0<=n?o<n:o>n;t=0<=n?++o:--o)push_terms(stack[s+t]);return add_terms(tos-e),p1=pop(),moveTos(tos-r),push(p1),restore()},subtract=function(){return negate(),add()},Eval_approxratio=function(){var r;return r=cadr(p1),push(r),approxratioRecursive()},approxratioRecursive=function(){var r,e,t,o,n;if(e=0,save(),p1=pop(),istensor(p1)){for((p4=alloc_tensor(p1.tensor.nelem)).tensor.ndim=p1.tensor.ndim,e=t=0,o=p1.tensor.ndim;0<=o?t<o:t>o;e=0<=o?++t:--t)p4.tensor.dim[e]=p1.tensor.dim[e];for(e=r=0,n=p1.tensor.nelem;0<=n?r<n:r>n;e=0<=n?++r:--r)push(p1.tensor.elem[e]),approxratioRecursive(),p4.tensor.elem[e]=pop(),check_tensor_dimensions(p4);push(p4)}else p1.k===DOUBLE?(push(p1),approxOneRatioOnly()):iscons(p1)?(push(car(p1)),approxratioRecursive(),push(cdr(p1)),approxratioRecursive(),cons()):push(p1);return restore()},approxOneRatioOnly=function(){var r,e,t,o,n,s;if(zzfloat(),(o=pop()).k!==DOUBLE)return push_symbol(APPROXRATIO),push(theArgument),list(2);2===(t=(n=o.d).toString().split(".")).length?(r=t[1].length,e=1/Math.pow(10,r),s=floatToRatioRoutine(n,e),push_rational(s[0],s[1])):push_integer(n)},floatToRatioRoutine=function(r,e){var t,o,n,s,p,i,a;if(n=void 0,o=void 0,t=void 0,i=void 0,s=void 0,p=void 0,a=[0,0],isNaN(r))return a;if(r===1/0)return a[0]=1,a[1]=0,a;if(r===-1/0)return a[0]=-1,a[1]=0,a;if(t=r<0?-1:1,r=Math.abs(r),Math.abs(r-Math.floor(r))<e)return n=r*t,o=1,a[0]=n,a[1]=o,a;if(r<1e-19)return n=t,o=1e19,a[0]=n,a[1]=o,a;if(r>1e19)return n=1e19*t,o=1,a[0]=n,a[1]=o,a;for(i=r,s=0,o=1;i=1/(i-Math.floor(i)),p=o,o=o*Math.floor(i)+s,s=p,n=Math.floor(r*o+.5),Math.abs(r-n/o)>e&&i!==Math.floor(i););return n*=t,a[0]=n,a[1]=o,a},approx_just_an_integer=0,approx_sine_of_rational=1,approx_sine_of_pi_times_rational=2,approx_rationalOfPi=3,approx_radicalOfRatio=4,approx_nothingUseful=5,approx_ratioOfRadical=6,approx_rationalOfE=7,approx_logarithmsOfRationals=8,approx_rationalsOfLogarithms=9,approxRationalsOfRadicals=function(r){var e,t,o,n,s,p,i,a,l,u,c,d,_,m,f,h;if(2!==(h=r.toString().split(".")).length)return[""+Math.floor(r),approx_just_an_integer,Math.floor(r),1,2];for(c=h[1].length,_=1/Math.pow(10,c),console.log("precision: "+_),t=null,u=Number.MAX_VALUE,d=0,a=(f=[2,3,5,6,7,8,10]).length;d<a;d++)for(p=f[d],i=e=1;e<=10;i=++e)s=Math.sqrt(p)/i,Math.abs(s)>1e-10?(m=r/s,l=Math.round(m),n=Math.abs(1-m/l)):(m=1,l=1,n=Math.abs(r-s)),n<2*_&&(o=simpleComplexityMeasure(l,p,i))<u&&(u=o,t=[l+" * sqrt( "+p+" ) / "+i,approx_ratioOfRadical,l,p,i]);return t},approxRadicalsOfRationals=function(r){var e,t,o,n,s,p,i,a,l,u,c,d,_,m,f,h,g,b;if(2!==(b=r.toString().split(".")).length)return[""+Math.floor(r),approx_just_an_integer,Math.floor(r),1,2];for(d=b[1].length,m=1/Math.pow(10,d),console.log("precision: "+m),t=null,c=Number.MAX_VALUE,_=0,a=(h=[1,2,3,5,6,7,8,10]).length;_<a;_++)for(p=h[_],e=0,l=(g=[1,2,3,5,6,7,8,10]).length;e<l;e++)i=g[e],s=Math.sqrt(p/i),Math.abs(s)>1e-10?(f=r/s,u=Math.round(f),n=Math.abs(1-f/u)):(f=1,u=1,n=Math.abs(r-s)),n<2*m&&(o=simpleComplexityMeasure(u,p,i))<c&&(c=o,t=[u+" * (sqrt( "+p+" / "+i+" )",approx_radicalOfRatio,u,p,i]);return t},approxRadicals=function(r){var e,t,o,n,s;return 2!==(s=r.toString().split(".")).length?[""+Math.floor(r),approx_just_an_integer,Math.floor(r),1,2]:(o=s[1].length,n=1/Math.pow(10,o),console.log("precision: "+n),null!=(t=approxRationalsOfRadicals(r))?t:null!=(e=approxRadicalsOfRationals(r))?e:null)},approxLogs=function(r){var e,t,o,n,s;return 2!==(s=r.toString().split(".")).length?[""+Math.floor(r),approx_just_an_integer,Math.floor(r),1,2]:(o=s[1].length,n=1/Math.pow(10,o),console.log("precision: "+n),null!=(t=approxRationalsOfLogs(r))?t:null!=(e=approxLogsOfRationals(r))?e:null)},approxRationalsOfLogs=function(r){var e,t,o,n,s,p,i,a,l,u,c,d,_,m;if(2!==(m=r.toString().split(".")).length)return[""+Math.floor(r),approx_just_an_integer,Math.floor(r),1,2];for(u=m[1].length,d=1/Math.pow(10,u),console.log("precision: "+d),t=null,l=Number.MAX_VALUE,p=c=2;c<=5;p=++c)for(i=e=1;e<=5;i=++e)s=Math.log(p)/i,Math.abs(s)>1e-10?(_=r/s,a=Math.round(_),n=Math.abs(1-_/a)):(_=1,a=1,n=Math.abs(r-s)),1!==a&&Math.abs(Math.floor(a/i))===Math.abs(a/i)||n<2.2*d&&(o=simpleComplexityMeasure(a,p,i))<l&&(l=o,t=[a+" * log( "+p+" ) / "+i,approx_rationalsOfLogarithms,a,p,i]);return t},approxLogsOfRationals=function(r){var e,t,o,n,s,p,i,a,l,u,c,d,_,m;if(2!==(m=r.toString().split(".")).length)return[""+Math.floor(r),approx_just_an_integer,Math.floor(r),1,2];for(u=m[1].length,d=1/Math.pow(10,u),console.log("precision: "+d),t=null,l=Number.MAX_VALUE,p=c=1;c<=5;p=++c)for(i=e=1;e<=5;i=++e)s=Math.log(p/i),Math.abs(s)>1e-10?(_=r/s,a=Math.round(_),n=Math.abs(1-_/a)):(_=1,a=1,n=Math.abs(r-s)),n<1.96*d&&(o=simpleComplexityMeasure(a,p,i))<l&&(l=o,t=[a+" * log( "+p+" / "+i+" )",approx_logarithmsOfRationals,a,p,i]);return t},approxRationalsOfPowersOfE=function(r){var e,t,o,n,s,p,i,a,l,u,c,d,_,m;if(2!==(m=r.toString().split(".")).length)return[""+Math.floor(r),approx_just_an_integer,Math.floor(r),1,2];for(u=m[1].length,d=1/Math.pow(10,u),console.log("precision: "+d),t=null,l=Number.MAX_VALUE,p=c=1;c<=2;p=++c)for(i=e=1;e<=12;i=++e)s=Math.pow(Math.E,p)/i,Math.abs(s)>1e-10?(_=r/s,a=Math.round(_),n=Math.abs(1-_/a)):(_=1,a=1,n=Math.abs(r-s)),n<2*d&&(o=simpleComplexityMeasure(a,p,i))<l&&(l=o,t=[a+" * (e ^ "+p+" ) / "+i,approx_rationalOfE,a,p,i]);return t},approxRationalsOfPowersOfPI=function(r){var e,t,o,n,s,p,i,a,l,u,c,d,_,m;if(2!==(m=r.toString().split(".")).length)return[""+Math.floor(r),approx_just_an_integer,Math.floor(r),1,2];for(u=m[1].length,d=1/Math.pow(10,u),console.log("precision: "+d),t=null,l=Number.MAX_VALUE,p=c=1;c<=5;p=++c)for(i=e=1;e<=12;i=++e)s=Math.pow(Math.PI,p)/i,Math.abs(s)>1e-10?(_=r/s,a=Math.round(_),n=Math.abs(1-_/a)):(_=1,a=1,n=Math.abs(r-s)),n<2*d&&(o=simpleComplexityMeasure(a,p,i))<l&&(l=o,t=[a+" * (pi ^ "+p+" ) / "+i+" )",approx_rationalOfPi,a,p,i]);return t},approxTrigonometric=function(r){var e,t,o,n,s;return 2!==(s=r.toString().split(".")).length?[""+Math.floor(r),approx_just_an_integer,Math.floor(r),1,2]:(o=s[1].length,n=1/Math.pow(10,o),console.log("precision: "+n),null!=(t=approxSineOfRationals(r))?t:null!=(e=approxSineOfRationalMultiplesOfPI(r))?e:null)},approxSineOfRationals=function(r){var e,t,o,n,s,p,i,a,l,u,c,d,_,m,f;if(2!==(f=r.toString().split(".")).length)return[""+Math.floor(r),approx_just_an_integer,Math.floor(r),1,2];for(c=f[1].length,_=1/Math.pow(10,c),console.log("precision: "+_),t=null,u=Number.MAX_VALUE,i=d=1;d<=4;i=++d)for(a=e=1;e<=4;a=++e)s=i/a,p=Math.sin(s),Math.abs(p)>1e-10?(m=r/p,l=Math.round(m),n=Math.abs(1-m/l)):(m=1,l=1,n=Math.abs(r-p)),n<2*_&&(o=simpleComplexityMeasure(l,i,a))<u&&(u=o,t=[l+" * sin( "+i+"/"+a+" )",approx_sine_of_rational,l,i,a]);return t},approxSineOfRationalMultiplesOfPI=function(r){var e,t,o,n,s,p,i,a,l,u,c,d,_,m,f;if(2!==(f=r.toString().split(".")).length)return[""+Math.floor(r),approx_just_an_integer,Math.floor(r),1,2];for(c=f[1].length,_=1/Math.pow(10,c),console.log("precision: "+_),t=null,u=Number.MAX_VALUE,i=d=1;d<=13;i=++d)for(a=e=1;e<=13;a=++e)s=i/a,p=Math.sin(Math.PI*s),Math.abs(p)>1e-10?(m=r/p,l=Math.round(m),n=Math.abs(1-m/l)):(m=1,l=1,n=Math.abs(r-p)),n<23*_&&(o=simpleComplexityMeasure(l,i,a))<u&&(u=o,t=[l+" * sin( "+i+"/"+a+" * pi )",approx_sine_of_pi_times_rational,l,i,a]);return t},approxAll=function(r){var e,t,o,n,s,p,i,a,l,u,c;return 2!==(c=r.toString().split(".")).length?[""+Math.floor(r),approx_just_an_integer,Math.floor(r),1,2]:(l=c[1].length,u=1/Math.pow(10,l),console.log("precision: "+u),a=Number.MAX_VALUE,i=0,p=null,!0,null!=(t=approxRadicals(r))&&((i=simpleComplexityMeasure(t))<a?(console.log("better explanation by approxRadicals: "+t+" complexity: "+i),a=i,p=t):console.log("subpar explanation by approxRadicals: "+t+" complexity: "+i)),null!=(e=approxLogs(r))&&((i=simpleComplexityMeasure(e))<a?(console.log("better explanation by approxLogs: "+e+" complexity: "+i),a=i,p=e):console.log("subpar explanation by approxLogs: "+e+" complexity: "+i)),null!=(o=approxRationalsOfPowersOfE(r))&&((i=simpleComplexityMeasure(o))<a?(console.log("better explanation by approxRationalsOfPowersOfE: "+o+" complexity: "+i),a=i,p=o):console.log("subpar explanation by approxRationalsOfPowersOfE: "+o+" complexity: "+i)),null!=(n=approxRationalsOfPowersOfPI(r))&&((i=simpleComplexityMeasure(n))<a?(console.log("better explanation by approxRationalsOfPowersOfPI: "+n+" complexity: "+i),a=i,p=n):console.log("subpar explanation by approxRationalsOfPowersOfPI: "+n+" complexity: "+i)),null!=(s=approxTrigonometric(r))&&((i=simpleComplexityMeasure(s))<a?(console.log("better explanation by approxTrigonometric: "+s+" complexity: "+i),a=i,p=s):console.log("subpar explanation by approxTrigonometric: "+s+" complexity: "+i)),p)},simpleComplexityMeasure=function(r,e,t){var o;if(o=null,r instanceof Array){switch(r[1]){case approx_sine_of_pi_times_rational:o=4;break;case approx_rationalOfPi:o=Math.pow(4,Math.abs(r[3]))*Math.abs(r[2]);break;case approx_rationalOfE:o=Math.pow(3,Math.abs(r[3]))*Math.abs(r[2]);break;default:o=0}o+=Math.abs(r[2])*(Math.abs(r[3])+Math.abs(r[4]))}else o+=Math.abs(r)*(Math.abs(e)+Math.abs(t));return 1===r[2]?o-=1:o+=1,1===r[3]?o-=1:o+=1,1===r[4]?o-=1:o+=1,o<0&&(o=0),o},testApprox=function(){var r,e,t,o,n,s,p,i,a,l,u,c,d,_,m,f,h,g,b,E,v,y,A,T,O,S,M,I,R,N,x,L,k,D,P,U,B,w,C,G,q,F,Y,X,W,z,$,V,Z,H,Q,j,J,K,rr,er,tr,or,nr;for(z=0,w=(V=[2,3,5,6,7,8,10]).length;z<w;z++)for(U=V[z],r=0,C=(Z=[2,3,5,6,7,8,10]).length;r<C;r++)U!==(B=Z[r])&&(console.log("testapproxRadicals testing: 1 * sqrt( "+U+" ) / "+B),P=U/B,nr=Math.sqrt(U)/B,or=(er=approxRadicals(nr))[2]*Math.sqrt(er[3])/er[4],Math.abs(nr-or)>1e-15&&console.log("fail testapproxRadicals: 1 * sqrt( "+U+" ) / "+B+" . obtained: "+er));for(e=0,G=(H=[2,3,5,6,7,8,10]).length;e<G;e++)for(U=H[e],t=0,q=(Q=[2,3,5,6,7,8,10]).length;t<q;t++)U!==(B=Q[t])&&(console.log("testapproxRadicals testing with 4 digits: 1 * sqrt( "+U+" ) / "+B),P=U/B,nr=($=Math.sqrt(U)/B).toFixed(4),or=(er=approxRadicals(nr))[2]*Math.sqrt(er[3])/er[4],Math.abs($-or)>1e-15&&console.log("fail testapproxRadicals with 4 digits: 1 * sqrt( "+U+" ) / "+B+" . obtained: "+er));for(o=0,F=(j=[2,3,5,6,7,8,10]).length;o<F;o++)for(U=j[o],n=0,Y=(J=[2,3,5,6,7,8,10]).length;n<Y;n++)U!==(B=J[n])&&(console.log("testapproxRadicals testing: 1 * sqrt( "+U+" / "+B+" )"),P=U/B,nr=Math.sqrt(U/B),null!=(er=approxRadicals(nr))&&(or=er[2]*Math.sqrt(er[3]/er[4]),er[1]===approx_radicalOfRatio&&Math.abs(nr-or)>1e-15&&console.log("fail testapproxRadicals: 1 * sqrt( "+U+" / "+B+" ) . obtained: "+er)));for(s=0,X=(K=[1,2,3,5,6,7,8,10]).length;s<X;s++)for(U=K[s],p=0,W=(rr=[1,2,3,5,6,7,8,10]).length;p<W;p++)B=rr[p],1===U&&1===B||(console.log("testapproxRadicals testing with 4 digits:: 1 * sqrt( "+U+" / "+B+" )"),P=U/B,nr=($=Math.sqrt(U/B)).toFixed(4),or=(er=approxRadicals(nr))[2]*Math.sqrt(er[3]/er[4]),er[1]===approx_radicalOfRatio&&Math.abs($-or)>1e-15&&console.log("fail testapproxRadicals with 4 digits:: 1 * sqrt( "+U+" / "+B+" ) . obtained: "+er));for(U=i=1;i<=5;U=++i)for(B=a=1;a<=5;B=++a)console.log("testApproxAll testing: 1 * log("+U+" ) / "+B),P=U/B,nr=Math.log(U)/B,or=(er=approxAll(nr))[2]*Math.log(er[3])/er[4],Math.abs(nr-or)>1e-15&&console.log("fail testApproxAll: 1 * log("+U+" ) / "+B+" . obtained: "+er);for(U=l=1;l<=5;U=++l)for(B=u=1;u<=5;B=++u)console.log("testApproxAll testing with 4 digits: 1 * log("+U+" ) / "+B),P=U/B,nr=($=Math.log(U)/B).toFixed(4),or=(er=approxAll(nr))[2]*Math.log(er[3])/er[4],Math.abs($-or)>1e-15&&console.log("fail testApproxAll with 4 digits: 1 * log("+U+" ) / "+B+" . obtained: "+er);for(U=c=1;c<=5;U=++c)for(B=d=1;d<=5;B=++d)console.log("testApproxAll testing: 1 * log("+U+" / "+B+" )"),P=U/B,nr=Math.log(U/B),or=(er=approxAll(nr))[2]*Math.log(er[3]/er[4]),Math.abs(nr-or)>1e-15&&console.log("fail testApproxAll: 1 * log("+U+" / "+B+" ) . obtained: "+er);for(U=_=1;_<=5;U=++_)for(B=m=1;m<=5;B=++m)console.log("testApproxAll testing with 4 digits: 1 * log("+U+" / "+B+" )"),P=U/B,nr=($=Math.log(U/B)).toFixed(4),or=(er=approxAll(nr))[2]*Math.log(er[3]/er[4]),Math.abs($-or)>1e-15&&console.log("fail testApproxAll with 4 digits: 1 * log("+U+" / "+B+" ) . obtained: "+er);for(U=f=1;f<=2;U=++f)for(B=h=1;h<=12;B=++h)console.log("testApproxAll testing: 1 * (e ^ "+U+" ) / "+B),P=U/B,nr=Math.pow(Math.E,U)/B,or=(er=approxAll(nr))[2]*Math.pow(Math.E,er[3])/er[4],Math.abs(nr-or)>1e-15&&console.log("fail testApproxAll: 1 * (e ^ "+U+" ) / "+B+" . obtained: "+er);for(U=g=1;g<=2;U=++g)for(B=b=1;b<=12;B=++b)console.log("approxRationalsOfPowersOfE testing with 4 digits: 1 * (e ^ "+U+" ) / "+B),P=U/B,nr=($=Math.pow(Math.E,U)/B).toFixed(4),or=(er=approxRationalsOfPowersOfE(nr))[2]*Math.pow(Math.E,er[3])/er[4],Math.abs($-or)>1e-15&&console.log("fail approxRationalsOfPowersOfE with 4 digits: 1 * (e ^ "+U+" ) / "+B+" . obtained: "+er);for(U=E=1;E<=2;U=++E)for(B=v=1;v<=12;B=++v)console.log("testApproxAll testing: 1 * pi ^ "+U+" / "+B),P=U/B,nr=Math.pow(Math.PI,U)/B,or=(er=approxAll(nr))[2]*Math.pow(Math.PI,er[3])/er[4],Math.abs(nr-or)>1e-15&&console.log("fail testApproxAll: 1 * pi ^ "+U+" / "+B+" ) . obtained: "+er);for(U=y=1;y<=2;U=++y)for(B=A=1;A<=12;B=++A)console.log("approxRationalsOfPowersOfPI testing with 4 digits: 1 * pi ^ "+U+" / "+B),P=U/B,nr=($=Math.pow(Math.PI,U)/B).toFixed(4),or=(er=approxRationalsOfPowersOfPI(nr))[2]*Math.pow(Math.PI,er[3])/er[4],Math.abs($-or)>1e-15&&console.log("fail approxRationalsOfPowersOfPI with 4 digits: 1 * pi ^ "+U+" / "+B+" ) . obtained: "+er);for(U=T=1;T<=4;U=++T)for(B=O=1;O<=4;B=++O)console.log("testApproxAll testing: 1 * sin( "+U+"/"+B+" )"),P=U/B,nr=Math.sin(P),tr=(er=approxAll(nr))[3]/er[4],or=er[2]*Math.sin(tr),Math.abs(nr-or)>1e-15&&console.log("fail testApproxAll: 1 * sin( "+U+"/"+B+" ) . obtained: "+er);for(U=S=1;S<=4;U=++S)for(B=M=1;M<=4;B=++M)console.log("testApproxAll testing with 5 digits: 1 * sin( "+U+"/"+B+" )"),P=U/B,nr=($=Math.sin(P)).toFixed(5),null==(er=approxAll(nr))&&console.log("fail testApproxAll with 5 digits: 1 * sin( "+U+"/"+B+" ) . obtained:  undefined "),tr=er[3]/er[4],or=er[2]*Math.sin(tr),(D=Math.abs($-or))>1e-14&&console.log("fail testApproxAll with 5 digits: 1 * sin( "+U+"/"+B+" ) . obtained: "+er+" error: "+D);for(U=I=1;I<=4;U=++I)for(B=R=1;R<=4;B=++R)console.log("testApproxAll testing with 4 digits: 1 * sin( "+U+"/"+B+" )"),P=U/B,nr=($=Math.sin(P)).toFixed(4),null==(er=approxAll(nr))&&console.log("fail testApproxAll with 4 digits: 1 * sin( "+U+"/"+B+" ) . obtained:  undefined "),tr=er[3]/er[4],or=er[2]*Math.sin(tr),(D=Math.abs($-or))>1e-14&&console.log("fail testApproxAll with 4 digits: 1 * sin( "+U+"/"+B+" ) . obtained: "+er+" error: "+D);for("0"!==approxAll(nr=0)[0]&&console.log("fail testApproxAll: 0"),"0"!==approxAll(nr=0)[0]&&console.log("fail testApproxAll: 0.0"),"0"!==approxAll(nr=0)[0]&&console.log("fail testApproxAll: 0.00"),"0"!==approxAll(nr=0)[0]&&console.log("fail testApproxAll: 0.000"),"0"!==approxAll(nr=0)[0]&&console.log("fail testApproxAll: 0.0000"),"1"!==approxAll(nr=1)[0]&&console.log("fail testApproxAll: 1"),"1"!==approxAll(nr=1)[0]&&console.log("fail testApproxAll: 1.0"),"1"!==approxAll(nr=1)[0]&&console.log("fail testApproxAll: 1.00"),"1"!==approxAll(nr=1)[0]&&console.log("fail testApproxAll: 1.000"),"1"!==approxAll(nr=1)[0]&&console.log("fail testApproxAll: 1.0000"),"1"!==approxAll(nr=1)[0]&&console.log("fail testApproxAll: 1.00000"),nr=Math.sqrt(2),"1 * sqrt( 2 ) / 1"!==approxAll(nr)[0]&&console.log("fail testApproxAll: Math.sqrt(2)"),"1 * sqrt( 2 ) / 1"!==approxAll(nr=1.41)[0]&&console.log("fail testApproxAll: 1.41"),"1 * sqrt( 2 ) / 1"!==approxRadicals(nr=1.4)[0]&&console.log("fail approxRadicals: 1.4"),"1 * log( 2 ) / 1"!==approxLogs(nr=.6)[0]&&console.log("fail approxLogs: 0.6"),"1 * log( 2 ) / 1"!==approxLogs(nr=.69)[0]&&console.log("fail approxLogs: 0.69"),"1 * log( 2 ) / 1"!==approxLogs(nr=.7)[0]&&console.log("fail approxLogs: 0.7"),"1 * log( 3 ) / 1"!==approxLogs(nr=1.09)[0]&&console.log("fail approxLogs: 1.09"),"1 * log( 3 ) / 1"!==approxAll(nr=1.09)[0]&&console.log("fail approxAll: 1.09"),"1 * log( 3 ) / 1"!==approxAll(nr=1.098)[0]&&console.log("fail approxAll: 1.098"),"1 * log( 3 ) / 1"!==approxAll(nr=1.1)[0]&&console.log("fail approxAll: 1.1"),"1 * log( 3 ) / 1"!==approxAll(nr=1.11)[0]&&console.log("fail approxAll: 1.11"),nr=Math.sqrt(3),"1 * sqrt( 3 ) / 1"!==approxAll(nr)[0]&&console.log("fail testApproxAll: Math.sqrt(3)"),"1"!==approxAll(nr=1)[0]&&console.log("fail testApproxAll: 1.0000"),"1 * (pi ^ 1 ) / 1 )"!==approxAll(nr=3.141592)[0]&&console.log("fail testApproxAll: 3.141592"),"10 * (pi ^ 1 ) / 1 )"!==approxAll(nr=31.41592)[0]&&console.log("fail testApproxAll: 31.41592"),"100 * (pi ^ 1 ) / 1 )"!==approxAll(nr=314.1592)[0]&&console.log("fail testApproxAll: 314.1592"),"10000000 * (pi ^ 1 ) / 1 )"!==approxAll(nr=31415926.53589793)[0]&&console.log("fail testApproxAll: 31415926.53589793"),nr=Math.sqrt(2),"2 * sin( 1/4 * pi )"!==approxTrigonometric(nr)[0]&&console.log("fail approxTrigonometric: Math.sqrt(2)"),nr=Math.sqrt(3),"2 * sin( 1/3 * pi )"!==approxTrigonometric(nr)[0]&&console.log("fail approxTrigonometric: Math.sqrt(3)"),nr=(Math.sqrt(6)-Math.sqrt(2))/4,"1 * sin( 1/12 * pi )"!==approxAll(nr)[0]&&console.log("fail testApproxAll: (Math.sqrt(6) - Math.sqrt(2))/4"),nr=Math.sqrt(2-Math.sqrt(2))/2,"1 * sin( 1/8 * pi )"!==approxAll(nr)[0]&&console.log("fail testApproxAll: Math.sqrt(2 - Math.sqrt(2))/2"),nr=(Math.sqrt(6)+Math.sqrt(2))/4,"1 * sin( 5/12 * pi )"!==approxAll(nr)[0]&&console.log("fail testApproxAll: (Math.sqrt(6) + Math.sqrt(2))/4"),nr=Math.sqrt(2+Math.sqrt(3))/2,"1 * sin( 5/12 * pi )"!==approxAll(nr)[0]&&console.log("fail testApproxAll: Math.sqrt(2 + Math.sqrt(3))/2"),nr=(Math.sqrt(5)-1)/4,"1 * sin( 1/10 * pi )"!==approxAll(nr)[0]&&console.log("fail testApproxAll: (Math.sqrt(5) - 1)/4"),nr=Math.sqrt(10-2*Math.sqrt(5))/4,"1 * sin( 1/5 * pi )"!==approxAll(nr)[0]&&console.log("fail testApproxAll: Math.sqrt(10 - 2*Math.sqrt(5))/4"),nr=Math.sin(Math.PI/7),"1 * sin( 1/7 * pi )"!==approxAll(nr)[0]&&console.log("fail testApproxAll: Math.sin(Math.PI/7)"),nr=Math.sin(Math.PI/9),"1 * sin( 1/9 * pi )"!==approxAll(nr)[0]&&console.log("fail testApproxAll: Math.sin(Math.PI/9)"),"6 * (pi ^ 5 ) / 1 )"!==approxRationalsOfPowersOfPI(nr=1836.15267)[0]&&console.log("fail approxRationalsOfPowersOfPI: 1836.15267"),U=N=1;N<=13;U=++N)for(B=x=1;x<=13;B=++x)console.log("approxTrigonometric testing: 1 * sin( "+U+"/"+B+" * pi )"),P=U/B,nr=Math.sin(Math.PI*P),tr=(er=approxTrigonometric(nr))[3]/er[4],or=er[2]*Math.sin(Math.PI*tr),Math.abs(nr-or)>1e-15&&console.log("fail approxTrigonometric: 1 * sin( "+U+"/"+B+" * pi ) . obtained: "+er);for(U=L=1;L<=13;U=++L)for(B=k=1;k<=13;B=++k)5===U&&11===B||6===U&&11===B||(console.log("approxTrigonometric testing with 4 digits: 1 * sin( "+U+"/"+B+" * pi )"),P=U/B,nr=($=Math.sin(Math.PI*P)).toFixed(4),tr=(er=approxTrigonometric(nr))[3]/er[4],or=er[2]*Math.sin(Math.PI*tr),(D=Math.abs($-or))>1e-14&&console.log("fail approxTrigonometric with 4 digits: 1 * sin( "+U+"/"+B+" * pi ) . obtained: "+er+" error: "+D));return console.log("testApprox done")},$.approxRadicals=approxRadicals,$.approxRationalsOfLogs=approxRationalsOfLogs,$.approxAll=approxAll,$.testApprox=testApprox,Eval_arccos=function(){return push(cadr(p1)),Eval(),arccos()},arccos=function(){var r,e;if(0,r=0,save(),p1=pop(),car(p1)===symbol(COS))return push(cadr(p1)),void restore();if(isdouble(p1))return e=0,r=Math.acos(p1.d),e&&stop("arccos function argument is not in the interval [-1,1]"),push_double(r),void restore();if(isoneoversqrttwo(p1)||car(p1)===symbol(MULTIPLY)&&equalq(car(cdr(p1)),1,2)&&car(car(cdr(cdr(p1))))===symbol(POWER)&&equaln(car(cdr(car(cdr(cdr(p1))))),2)&&equalq(car(cdr(cdr(car(cdr(cdr(p1)))))),1,2))return evaluatingAsFloats?push_double(Math.PI/4):(push_rational(1,4),push_symbol(PI),multiply()),void restore();if(isminusoneoversqrttwo(p1)||car(p1)===symbol(MULTIPLY)&&equalq(car(cdr(p1)),-1,2)&&car(car(cdr(cdr(p1))))===symbol(POWER)&&equaln(car(cdr(car(cdr(cdr(p1))))),2)&&equalq(car(cdr(cdr(car(cdr(cdr(p1)))))),1,2))return evaluatingAsFloats?push_double(3*Math.PI/4):(push_rational(3,4),push_symbol(PI),multiply()),void restore();if(!isrational(p1))return push_symbol(ARCCOS),push(p1),list(2),void restore();switch(push(p1),push_integer(2),multiply(),pop_integer()){case-2:evaluatingAsFloats?push_double(Math.PI):push_symbol(PI);break;case-1:evaluatingAsFloats?push_double(2*Math.PI/3):(push_rational(2,3),push_symbol(PI),multiply());break;case 0:evaluatingAsFloats?push_double(Math.PI/2):(push_rational(1,2),push_symbol(PI),multiply());break;case 1:evaluatingAsFloats?push_double(Math.PI/3):(push_rational(1,3),push_symbol(PI),multiply());break;case 2:evaluatingAsFloats?push_double(0):push(zero);break;default:push_symbol(ARCCOS),push(p1),list(2)}return restore()},Eval_arccosh=function(){return push(cadr(p1)),Eval(),arccosh()},arccosh=function(){var r;return r=0,save(),p1=pop(),car(p1)===symbol(COSH)?(push(cadr(p1)),void restore()):isdouble(p1)?((r=p1.d)<1&&stop("arccosh function argument is less than 1.0"),r=Math.log(r+Math.sqrt(r*r-1)),push_double(r),void restore()):isplusone(p1)?(push(zero),void restore()):(push_symbol(ARCCOSH),push(p1),list(2),restore())},Eval_arcsin=function(){return push(cadr(p1)),Eval(),arcsin()},arcsin=function(){var r,e;if(0,r=0,save(),p1=pop(),car(p1)===symbol(SIN))return push(cadr(p1)),void restore();if(isdouble(p1))return e=0,r=Math.asin(p1.d),e&&stop("arcsin function argument is not in the interval [-1,1]"),push_double(r),void restore();if(isoneoversqrttwo(p1)||car(p1)===symbol(MULTIPLY)&&equalq(car(cdr(p1)),1,2)&&car(car(cdr(cdr(p1))))===symbol(POWER)&&equaln(car(cdr(car(cdr(cdr(p1))))),2)&&equalq(car(cdr(cdr(car(cdr(cdr(p1)))))),1,2))return push_rational(1,4),push_symbol(PI),multiply(),void restore();if(isminusoneoversqrttwo(p1)||car(p1)===symbol(MULTIPLY)&&equalq(car(cdr(p1)),-1,2)&&car(car(cdr(cdr(p1))))===symbol(POWER)&&equaln(car(cdr(car(cdr(cdr(p1))))),2)&&equalq(car(cdr(cdr(car(cdr(cdr(p1)))))),1,2))return evaluatingAsFloats?push_double(-Math.PI/4):(push_rational(-1,4),push_symbol(PI),multiply()),void restore();if(!isrational(p1))return push_symbol(ARCSIN),push(p1),list(2),void restore();switch(push(p1),push_integer(2),multiply(),pop_integer()){case-2:evaluatingAsFloats?push_double(-Math.PI/2):(push_rational(-1,2),push_symbol(PI),multiply());break;case-1:evaluatingAsFloats?push_double(-Math.PI/6):(push_rational(-1,6),push_symbol(PI),multiply());break;case 0:evaluatingAsFloats?push_double(0):push(zero);break;case 1:evaluatingAsFloats?push_double(Math.PI/6):(push_rational(1,6),push_symbol(PI),multiply());break;case 2:evaluatingAsFloats?push_double(Math.PI/2):(push_rational(1,2),push_symbol(PI),multiply());break;default:push_symbol(ARCSIN),push(p1),list(2)}return restore()},Eval_arcsinh=function(){return push(cadr(p1)),Eval(),arcsinh()},arcsinh=function(){var r;return r=0,save(),p1=pop(),car(p1)===symbol(SINH)?(push(cadr(p1)),void restore()):isdouble(p1)?(r=p1.d,r=Math.log(r+Math.sqrt(r*r+1)),push_double(r),void restore()):isZeroAtomOrTensor(p1)?(push(zero),void restore()):(push_symbol(ARCSINH),push(p1),list(2),restore())},Eval_arctan=function(){return push(cadr(p1)),Eval(),arctan()},arctan=function(){var r,e;return r=0,save(),p1=pop(),car(p1)===symbol(TAN)?(push(cadr(p1)),void restore()):isdouble(p1)?(e=0,r=Math.atan(p1.d),e&&stop("arctan function error"),push_double(r),void restore()):isZeroAtomOrTensor(p1)?(push(zero),void restore()):isnegative(p1)?(push(p1),negate(),arctan(),negate(),void restore()):Find(p1,symbol(SIN))&&Find(p1,symbol(COS))&&(push(p1),numerator(),p2=pop(),push(p1),denominator(),p3=pop(),car(p2)===symbol(SIN)&&car(p3)===symbol(COS)&&equal(cadr(p2),cadr(p3)))?(push(cadr(p2)),void restore()):car(p1)===symbol(POWER)&&equaln(cadr(p1),3)&&equalq(caddr(p1),-1,2)||car(p1)===symbol(MULTIPLY)&&equalq(car(cdr(p1)),1,3)&&car(car(cdr(cdr(p1))))===symbol(POWER)&&equaln(car(cdr(car(cdr(cdr(p1))))),3)&&equalq(car(cdr(cdr(car(cdr(cdr(p1)))))),1,2)?(push_rational(1,6),evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),multiply(),void restore()):equaln(p1,1)?(push_rational(1,4),evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),multiply(),void restore()):car(p1)===symbol(POWER)&&equaln(cadr(p1),3)&&equalq(caddr(p1),1,2)?(push_rational(1,3),evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),multiply(),void restore()):(push_symbol(ARCTAN),push(p1),list(2),restore())},Eval_arctanh=function(){return push(cadr(p1)),Eval(),arctanh()},arctanh=function(){var r;return r=0,save(),p1=pop(),car(p1)===symbol(TANH)?(push(cadr(p1)),void restore()):isdouble(p1)?(((r=p1.d)<-1||r>1)&&stop("arctanh function argument is not in the interval [-1,1]"),r=Math.log((1+r)/(1-r))/2,push_double(r),void restore()):isZeroAtomOrTensor(p1)?(push(zero),void restore()):(push_symbol(ARCTANH),push(p1),list(2),restore())},DEBUG_ARG=!1,Eval_arg=function(){return push(cadr(p1)),Eval(),arg()},arg=function(){return save(),p1=pop(),push(p1),numerator(),yyarg(),push(p1),denominator(),yyarg(),subtract(),restore()},yyarg=function(){if(save(),p1=pop(),ispositivenumber(p1)||p1===symbol(PI))isdouble(p1)||evaluatingAsFloats?push_double(0):push_integer(0);else if(isnegativenumber(p1))isdouble(p1)||evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),negate();else if(issymbol(p1))push_symbol(ARG),push(p1),list(2);else if(car(p1)===symbol(POWER)&&equaln(cadr(p1),-1))evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),push(caddr(p1)),multiply();else if(car(p1)===symbol(POWER)&&cadr(p1)===symbol(E))push(caddr(p1)),imag();else if(car(p1)===symbol(POWER)&&isoneovertwo(caddr(p1)))DEBUG_ARG&&console.log("arg of a sqrt: "+p1),push(cadr(p1)),arg(),DEBUG_ARG&&console.log(" = 1/2 * "+stack[tos-1]),push(caddr(p1)),multiply();else if(car(p1)===symbol(MULTIPLY))for(push_integer(0),p1=cdr(p1);iscons(p1);)push(car(p1)),arg(),add(),p1=cdr(p1);else car(p1)===symbol(ADD)?(push(p1),rect(),p1=pop(),push(p1),real(),p2=pop(),push(p1),imag(),p3=pop(),isZeroAtomOrTensor(p2)?(evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),isnegative(p3)&&negate()):(push(p3),push(p2),divide(),arctan(),isnegative(p2)&&(evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),isnegative(p3)?subtract():add()))):isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES)))?(push_symbol(ARG),push(p1),list(2)):push_integer(0);return restore()},bake=function(){var r,e,t,o,n,s;if(r=0,0,0,0,0,0,expanding++,save(),p1=pop(),e=ispoly(p1,symbol(SYMBOL_S)),t=ispoly(p1,symbol(SYMBOL_T)),o=ispoly(p1,symbol(SYMBOL_X)),n=ispoly(p1,symbol(SYMBOL_Y)),s=ispoly(p1,symbol(SYMBOL_Z)),1===e&&0===t&&0===o&&0===n&&0===s)p2=symbol(SYMBOL_S),bake_poly();else if(0===e&&1===t&&0===o&&0===n&&0===s)p2=symbol(SYMBOL_T),bake_poly();else if(0===e&&0===t&&1===o&&0===n&&0===s)p2=symbol(SYMBOL_X),bake_poly();else if(0===e&&0===t&&0===o&&1===n&&0===s)p2=symbol(SYMBOL_Y),bake_poly();else if(0===e&&0===t&&0===o&&0===n&&1===s)p2=symbol(SYMBOL_Z),bake_poly();else if(iscons(p1)&&car(p1)!==symbol(FOR)){for(r=tos,push(car(p1)),p1=cdr(p1);iscons(p1);)push(car(p1)),bake(),p1=cdr(p1);list(tos-r)}else push(p1);return restore(),expanding--},polyform=function(){var r;if(r=0,save(),p2=pop(),p1=pop(),ispoly(p1,p2))bake_poly();else if(iscons(p1)){for(r=tos,push(car(p1)),p1=cdr(p1);iscons(p1);)push(car(p1)),push(p2),polyform(),p1=cdr(p1);list(tos-r)}else push(p1);return restore()},bake_poly=function(){var r,e,t,o,n,s;for(0,t=0,0,0,r=tos,push(p1),push(p2),o=coeff(),e=tos,t=s=o-1;s>=0;t=s+=-1)p1=stack[r+t],bake_poly_term(t);return(n=tos-e)>1&&(list(n),push(symbol(ADD)),swap(),cons()),p1=pop(),moveTos(tos-o),push(p1)},bake_poly_term=function(r){var e,t;if(0,0,!isZeroAtomOrTensor(p1)){if(0!==r){if(e=tos,car(p1)===symbol(MULTIPLY))for(p1=cdr(p1);iscons(p1);)push(car(p1)),p1=cdr(p1);else equaln(p1,1)||push(p1);return 1===r?push(p2):(push(symbol(POWER)),push(p2),push_integer(r),list(3)),(t=tos-e)>1?(list(t),push(symbol(MULTIPLY)),swap(),cons()):void 0}if(car(p1)===symbol(ADD))for(p1=cdr(p1);iscons(p1);)push(car(p1)),p1=cdr(p1);else push(p1)}},mint=function(r){return bigInt(r)},setSignTo=function(r,e){if(r.isPositive()){if(e<0)return r.multiply(bigInt(-1))}else if(e>0)return r.multiply(bigInt(-1));return r},makeSignSameAs=function(r,e){if(r.isPositive()){if(e.isNegative())return r.multiply(bigInt(-1))}else if(e.isPositive())return r.multiply(bigInt(-1));return r},makePositive=function(r){return r.isNegative()?r.multiply(bigInt(-1)):r},add_numbers=function(){var r,e;if(r=1,e=1,!isrational(stack[tos-1])||!isrational(stack[tos-2]))return save(),p2=pop(),p1=pop(),r=isdouble(p1)?p1.d:convert_rational_to_double(p1),e=isdouble(p2)?p2.d:convert_rational_to_double(p2),push_double(r+e),restore();qadd()},subtract_numbers=function(){var r,e;if(r=0,e=0,!isrational(stack[tos-1])||!isrational(stack[tos-2]))return save(),p2=pop(),p1=pop(),r=isdouble(p1)?p1.d:convert_rational_to_double(p1),e=isdouble(p2)?p2.d:convert_rational_to_double(p2),push_double(r-e),restore();qsub()},multiply_numbers=function(){var r,e;if(r=0,e=0,!isrational(stack[tos-1])||!isrational(stack[tos-2]))return save(),p2=pop(),p1=pop(),r=isdouble(p1)?p1.d:convert_rational_to_double(p1),e=isdouble(p2)?p2.d:convert_rational_to_double(p2),push_double(r*e),restore();qmul()},divide_numbers=function(){var r,e;if(r=0,e=0,!isrational(stack[tos-1])||!isrational(stack[tos-2]))return save(),p2=pop(),p1=pop(),isZeroAtomOrTensor(p2)&&stop("divide by zero"),r=isdouble(p1)?p1.d:convert_rational_to_double(p1),e=isdouble(p2)?p2.d:convert_rational_to_double(p2),push_double(r/e),restore();qdiv()},invert_number=function(){var r,e;return save(),p1=pop(),isZeroAtomOrTensor(p1)&&stop("divide by zero"),isdouble(p1)?(push_double(1/p1.d),void restore()):(r=bigInt(p1.q.a),e=bigInt(p1.q.b),e=makeSignSameAs(e,r),r=setSignTo(r,1),(p1=new U).k=NUM,p1.q.a=e,p1.q.b=r,push(p1),restore())},compare_rationals=function(r,e){var t,o;return 0,t=mmul(r.q.a,e.q.b),o=mmul(r.q.b,e.q.a),mcmp(t,o)},compare_numbers=function(r,e){var t,o;return t=0,o=0,isrational(r)&&isrational(e)?compare_rationals(r,e):(t=isdouble(r)?r.d:convert_rational_to_double(r))<(o=isdouble(e)?e.d:convert_rational_to_double(e))?-1:t>o?1:0},negate_number=function(){if(save(),p1=pop(),isZeroAtomOrTensor(p1))return push(p1),void restore();switch(p1.k){case NUM:(p2=new U).k=NUM,p2.q.a=bigInt(p1.q.a.multiply(bigInt.minusOne)),p2.q.b=bigInt(p1.q.b),push(p2);break;case DOUBLE:push_double(-p1.d);break;default:stop("bug caught in mp_negate_number")}return restore()},bignum_truncate=function(){var r;return save(),p1=pop(),r=mdiv(p1.q.a,p1.q.b),(p1=new U).k=NUM,p1.q.a=r,p1.q.b=bigInt(1),push(p1),restore()},mp_numerator=function(){return save(),(p1=pop()).k!==NUM?(push(one),void restore()):((p2=new U).k=NUM,p2.q.a=bigInt(p1.q.a),p2.q.b=bigInt(1),push(p2),restore())},mp_denominator=function(){return save(),(p1=pop()).k!==NUM?(push(one),void restore()):((p2=new U).k=NUM,p2.q.a=bigInt(p1.q.b),p2.q.b=bigInt(1),push(p2),restore())},bignum_power_number=function(r){var e,t,o;return save(),p1=pop(),e=mpow(p1.q.a,Math.abs(r)),t=mpow(p1.q.b,Math.abs(r)),r<0&&(o=e,e=makeSignSameAs(e=t,t=o),t=setSignTo(t,1)),(p1=new U).k=NUM,p1.q.a=e,p1.q.b=t,push(p1),restore()},convert_bignum_to_double=function(r){return r.toJSNumber()},convert_rational_to_double=function(r){var e;return r.q,(e=r.q.a.divmod(r.q.b)).quotient+e.remainder/r.q.b.toJSNumber()},push_integer=function(r){return DEBUG&&console.log("pushing integer "+r),save(),(p1=new U).k=NUM,p1.q.a=bigInt(r),p1.q.b=bigInt(1),push(p1),restore()},push_double=function(r){return save(),(p1=new U).k=DOUBLE,p1.d=r,push(p1),restore()},push_rational=function(r,e){var t;return(t=new U).k=NUM,t.q.a=bigInt(r),t.q.b=bigInt(e),push(t)},pop_integer=function(){var r;switch(r=NaN,save(),(p1=pop()).k){case NUM:isinteger(p1)&&p1.q.a.isSmall&&(r=p1.q.a.toJSNumber());break;case DOUBLE:DEBUG&&console.log("popping integer but double is found"),Math.floor(p1.d)===p1.d&&(DEBUG&&console.log("...altough it's an integer"),r=p1.d)}return restore(),r},print_double=function(r,e){var t,o;return t="",o=doubleToReasonableString(r.d),t+=print_str(1===e&&"-"===o?o+1:o)},bignum_scan_integer=function(r){var e,t,o;return save(),"+"!==(o=r[t=0])&&"-"!==o||t++,e=bigInt(r.substring(t)),(p1=new U).k=NUM,p1.q.a=e,p1.q.b=bigInt(1),push(p1),"-"===o&&negate(),restore()},bignum_scan_float=function(r){return push_double(parseFloat(r))},print_number=function(r,e){var t,o,n;switch(o="",n="","",r.k){case NUM:t=r.q.a.toString(),e||"-"===t[0]&&(t=t.substring(1)),printMode===PRINTMODE_LATEX&&isfraction(r)&&(t="\\frac{"+t+"}{"),o+=t,isfraction(r)&&(printMode!==PRINTMODE_LATEX&&(o+="/"),n=r.q.b.toString(),printMode===PRINTMODE_LATEX&&(n+="}"),o+=n);break;case DOUBLE:t=doubleToReasonableString(r.d),e||"-"===t[0]&&(t=t.substring(1)),o+=t}return o},gcd_numbers=function(){return save(),p2=pop(),p1=pop(),(p3=new U).k=NUM,p3.q.a=mgcd(p1.q.a,p2.q.a),p3.q.b=mgcd(p1.q.b,p2.q.b),p3.q.a=setSignTo(p3.q.a,1),push(p3),restore()},pop_double=function(){var r;switch(r=0,save(),(p1=pop()).k){case NUM:r=convert_rational_to_double(p1);break;case DOUBLE:r=p1.d;break;default:r=0}return restore(),r},bignum_float=function(){var r;return 0,r=convert_rational_to_double(pop()),push_double(r)},bignum_factorial=function(r){return save(),(p1=new U).k=NUM,p1.q.a=__factorial(r),p1.q.b=bigInt(1),push(p1),restore()},__factorial=function(r){var e,t,o,n,s;if(o=0,0===r||1===r)return e=bigInt(1);if(e=bigInt(2),t=bigInt(0),3<=r)for(o=n=3,s=r;3<=s?n<=s:n>=s;o=3<=s?++n:--n)t=bigInt(o),e=mmul(e,t);return e},mask=[1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072,262144,524288,1048576,2097152,4194304,8388608,16777216,33554432,67108864,134217728,268435456,536870912,1073741824,2147483648],mp_set_bit=function(r,e){return console.log("not implemented yet"),r[e/32]|=mask[e%32]},mp_clr_bit=function(r,e){return console.log("not implemented yet"),r[e/32]&=~mask[e%32]},mshiftright=function(r){return r.shiftRight()},Eval_binomial=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),binomial()},binomial=function(){return save(),ybinomial(),restore()},ybinomial=function(){if(p2=pop(),p1=pop(),0!==BINOM_check_args())return push(p1),factorial(),push(p2),factorial(),divide(),push(p1),push(p2),subtract(),factorial(),divide();push(zero)},BINOM_check_args=function(){return isNumericAtom(p1)&&lessp(p1,zero)?0:isNumericAtom(p2)&&lessp(p2,zero)?0:isNumericAtom(p1)&&isNumericAtom(p2)&&lessp(p1,p2)?0:1},Eval_ceiling=function(){return push(cadr(p1)),Eval(),ceiling()},ceiling=function(){return save(),yyceiling(),restore()},yyceiling=function(){var r;return r=0,p1=pop(),isNumericAtom(p1)?isdouble(p1)?(r=Math.ceil(p1.d),void push_double(r)):isinteger(p1)?void push(p1):((p3=new U).k=NUM,p3.q.a=mdiv(p1.q.a,p1.q.b),p3.q.b=mint(1),push(p3),isnegativenumber(p1)?1:(push_integer(1),add())):(push_symbol(CEILING),push(p1),void list(2))},Eval_choose=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),choose()},choose=function(){return save(),p2=pop(),p1=pop(),0===choose_check_args()?(push_integer(0),void restore()):(push(p1),factorial(),push(p2),factorial(),divide(),push(p1),push(p2),subtract(),factorial(),divide(),restore())},choose_check_args=function(){return isNumericAtom(p1)&&lessp(p1,zero)?0:isNumericAtom(p2)&&lessp(p2,zero)?0:isNumericAtom(p1)&&isNumericAtom(p2)&&lessp(p1,p2)?0:1},Eval_circexp=function(){return push(cadr(p1)),Eval(),circexp(),Eval()},circexp=function(){var r,e,t,o;if(e=0,r=0,save(),p1=pop(),car(p1)===symbol(COS))return push(cadr(p1)),expcos(),void restore();if(car(p1)===symbol(SIN))return push(cadr(p1)),expsin(),void restore();if(car(p1)===symbol(TAN))return p1=cadr(p1),push(imaginaryunit),push(p1),multiply(),exponential(),p2=pop(),push(imaginaryunit),push(p1),multiply(),negate(),exponential(),p3=pop(),push(p3),push(p2),subtract(),push(imaginaryunit),multiply(),push(p2),push(p3),add(),divide(),void restore();if(car(p1)===symbol(COSH))return p1=cadr(p1),push(p1),exponential(),push(p1),negate(),exponential(),add(),push_rational(1,2),multiply(),void restore();if(car(p1)===symbol(SINH))return p1=cadr(p1),push(p1),exponential(),push(p1),negate(),exponential(),subtract(),push_rational(1,2),multiply(),void restore();if(car(p1)===symbol(TANH))return p1=cadr(p1),push(p1),push_integer(2),multiply(),exponential(),p1=pop(),push(p1),push_integer(1),subtract(),push(p1),push_integer(1),add(),divide(),void restore();if(iscons(p1)){for(r=tos;iscons(p1);)push(car(p1)),circexp(),p1=cdr(p1);return list(tos-r),void restore()}if(p1.k===TENSOR){for(push(p1),copy_tensor(),e=t=0,o=(p1=pop()).tensor.nelem;0<=o?t<o:t>o;e=0<=o?++t:--t)push(p1.tensor.elem[e]),circexp(),p1.tensor.elem[e]=pop();return push(p1),void restore()}return push(p1),restore()},Eval_clearall=function(){return do_clearall(),push(symbol(NIL))},do_clearall=function(){return 0===test_flag&&clear_term(),do_clearPatterns(),clear_symbols(),defn(),codeGen=!1},clearall=function(){return run("clearall")},clearRenamedVariablesToAvoidBindingToExternalScope=function(){var r,e,t,o;for(o=[],r=e=0,t=symtab.length;0<=t?e<t:e>t;r=0<=t?++e:--e)-1!==symtab[r].printname.indexOf("AVOID_BINDING_TO_EXTERNAL_SCOPE_VALUE")?(symtab[r].k=SYM,symtab[r].printname="",binding[r]=symtab[r],o.push(isSymbolReclaimable[r]=!0)):o.push(void 0);return o},Eval_clear=function(){var r,e;for(p2=cdr(p1);iscons(p2);)(e=car(p2)).k!==SYM&&stop("symbol error"),r=symtab.indexOf(e),symtab[r].k=SYM,symtab[r].printname="",binding[r]=symtab[r],isSymbolReclaimable[r]=!0,p2=cdr(p2);return push(symbol(NIL))},DEBUG_CLOCKFORM=!1,Eval_clock=function(){return push(cadr(p1)),Eval(),clockform()},clockform=function(){return save(),p1=pop(),push(p1),abs(),DEBUG_CLOCKFORM&&console.log("clockform: abs of "+p1+" : "+stack[tos-1]),push_symbol(POWER),push_integer(-1),push(p1),arg(),DEBUG_CLOCKFORM&&console.log("clockform: arg of "+p1+" : "+stack[tos-1]),evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),divide(),DEBUG_CLOCKFORM&&console.log("clockform: divide : "+stack[tos-1]),list(3),DEBUG_CLOCKFORM&&console.log("clockform: power : "+stack[tos-1]),multiply(),DEBUG_CLOCKFORM&&console.log("clockform: multiply : "+stack[tos-1]),restore()},Eval_condense=function(){return push(cadr(p1)),Eval(),Condense()},Condense=function(){var r;return r=expanding,expanding=0,save(),yycondense(),restore(),expanding=r},yycondense=function(){if(p1=pop(),car(p1)===symbol(ADD)){for(p3=cdr(p1),push(car(p3)),p3=cdr(p3);iscons(p3);)push(car(p3)),gcd(),p3=cdr(p3);for(inverse(),p2=pop(),push(zero),p3=cdr(p1);iscons(p3);)push(p2),push(car(p3)),multiply(),add(),p3=cdr(p3);return yyexpand(),push(p2),divide()}push(p1)},Eval_conj=function(){return push(cadr(p1)),Eval(),p1=pop(),push(p1),Find(p1,imaginaryunit)?conjugate():(polar(),conjugate(),clockform())},conjugate=function(){return push(imaginaryunit),push(imaginaryunit),negate(),subst(),Eval()},consCount=0,cons=function(){var r;return consCount++,DEBUG&&console.log("cons tos: "+tos+" # "+consCount),(r=new U).k=CONS,r.cons.cdr=pop(),r===r.cons.cdr&&console.log("something wrong p == its cdr"),r.cons.car=pop(),push(r)},Eval_cos=function(){return push(cadr(p1)),Eval(),cosine()},cosine=function(){return save(),p1=pop(),car(p1)===symbol(ADD)?cosine_of_angle_sum():cosine_of_angle(),restore()},cosine_of_angle_sum=function(){for(p2=cdr(p1);iscons(p2);){if(p4=car(p2),isnpi(p4))return push(p1),push(p4),subtract(),p3=pop(),push(p3),cosine(),push(p4),cosine(),multiply(),push(p3),sine(),push(p4),sine(),multiply(),void subtract();p2=cdr(p2)}return cosine_of_angle()},cosine_of_angle=function(){var r,e;if(car(p1)!==symbol(ARCCOS)){if(isdouble(p1))return r=Math.cos(p1.d),Math.abs(r)<1e-10&&(r=0),void push_double(r);if(isnegative(p1)&&(push(p1),negate(),p1=pop()),car(p1)===symbol(ARCTAN))return push_integer(1),push(cadr(p1)),push_integer(2),power(),add(),push_rational(-1,2),void power();if(push(p1),push_integer(180),multiply(),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),divide(),(e=pop_integer())<0||isNaN(e))return push(symbol(COS)),push(p1),void list(2);switch(e%360){case 90:case 270:return push_integer(0);case 60:case 300:return push_rational(1,2);case 120:case 240:return push_rational(-1,2);case 45:case 315:return push_rational(1,2),push_integer(2),push_rational(1,2),power(),multiply();case 135:case 225:return push_rational(-1,2),push_integer(2),push_rational(1,2),power(),multiply();case 30:case 330:return push_rational(1,2),push_integer(3),push_rational(1,2),power(),multiply();case 150:case 210:return push_rational(-1,2),push_integer(3),push_rational(1,2),power(),multiply();case 0:return push_integer(1);case 180:return push_integer(-1);default:return push(symbol(COS)),push(p1),list(2)}}else push(cadr(p1))},Eval_cosh=function(){return push(cadr(p1)),Eval(),ycosh()},ycosh=function(){return save(),yycosh(),restore()},yycosh=function(){var r;if(r=0,p1=pop(),car(p1)!==symbol(ARCCOSH)){if(isdouble(p1))return r=Math.cosh(p1.d),Math.abs(r)<1e-10&&(r=0),void push_double(r);if(!isZeroAtomOrTensor(p1))return push_symbol(COSH),push(p1),list(2);push(one)}else push(cadr(p1))},Eval_decomp=function(){var r;return save(),console.log("Eval_decomp is being called!!!!!!!!!!!!!!!!!!!!"),r=tos,push(symbol(NIL)),push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),(p1=pop())===symbol(NIL)?guess():push(p1),decomp(!1),list(tos-r),restore()},pushTryNotToDuplicate=function(r){if(!(tos>0&&(DEBUG&&console.log("comparing "+r+" to: "+stack[tos-1]),equal(r,stack[tos-1]))))return push(r);DEBUG&&console.log("skipping "+r+" because it's already on stack ")},decomp=function(r){if(save(),p2=pop(),p1=pop(),DEBUG&&console.log("DECOMPOSING "+p1),r){if(!iscons(p1))return DEBUG&&console.log(" ground thing: "+p1),pushTryNotToDuplicate(p1),void restore()}else if(0===Find(p1,p2))return DEBUG&&console.log(" entire expression is constant"),pushTryNotToDuplicate(p1),void restore();if(isadd(p1))return decomp_sum(r),void restore();if(ismultiply(p1))return decomp_product(r),void restore();for(DEBUG&&console.log(" naive decomp"),p3=cdr(p1),DEBUG&&console.log("startig p3: "+p3);iscons(p3);)r&&push(car(p3)),DEBUG&&console.log("recursive decomposition"),push(car(p3)),DEBUG&&console.log("car(p3): "+car(p3)),push(p2),DEBUG&&console.log("p2: "+p2),decomp(r),p3=cdr(p3);return restore()},decomp_sum=function(r){var e;for(DEBUG&&console.log(" decomposing the sum "),0,p3=cdr(p1);iscons(p3);)(Find(car(p3),p2)||r)&&(push(car(p3)),push(p2),decomp(r)),p3=cdr(p3);for(e=tos,p3=cdr(p1);iscons(p3);)0===Find(car(p3),p2)&&pushTryNotToDuplicate(car(p3)),p3=cdr(p3);if(tos-e)return add_all(tos-e),p3=pop(),pushTryNotToDuplicate(p3),push(p3),negate()},decomp_product=function(r){var e;for(DEBUG&&console.log(" decomposing the product "),0,p3=cdr(p1);iscons(p3);)(Find(car(p3),p2)||r)&&(push(car(p3)),push(p2),decomp(r)),p3=cdr(p3);for(e=tos,p3=cdr(p1);iscons(p3);)0===Find(car(p3),p2)&&pushTryNotToDuplicate(car(p3)),p3=cdr(p3);if(tos-e)return multiply_all(tos-e)},define_user_function=function(){return p3=caadr(p1),p4=cdadr(p1),p5=caddr(p1),issymbol(p3)||stop("function name?"),car(p5)===symbol(EVAL)&&(push(cadr(p5)),Eval(),p5=pop()),push_symbol(FUNCTION),push(p5),push(p4),list(3),p5=pop(),set_binding(p3,p5),push_symbol(NIL)},Eval_function_reference=function(){return push(p1)},divisors=function(){var r,e,t,o,n,s;for(e=0,0,0,save(),r=tos-1,divisors_onstack(),t=tos-r,(s=stack.slice(r,r+t)).sort(cmp_expr),stack=stack.slice(0,r).concat(s).concat(stack.slice(r+t)),(p1=alloc_tensor(t)).tensor.ndim=1,p1.tensor.dim[0]=t,e=o=0,n=t;0<=n?o<n:o>n;e=0<=n?++o:--o)p1.tensor.elem[e]=stack[r+e];return moveTos(r),push(p1),restore()},divisors_onstack=function(){var r,e,t,o,n,s;if(0,e=0,0,0,save(),p1=pop(),r=tos,isNumericAtom(p1))push(p1),factor_small_number();else if(car(p1)===symbol(ADD))push(p1),__factor_add();else if(car(p1)===symbol(MULTIPLY))for(p1=cdr(p1),isNumericAtom(car(p1))&&(push(car(p1)),factor_small_number(),p1=cdr(p1));iscons(p1);)p2=car(p1),car(p2)===symbol(POWER)?(push(cadr(p2)),push(caddr(p2))):(push(p2),push(one)),p1=cdr(p1);else car(p1)===symbol(POWER)?(push(cadr(p1)),push(caddr(p1))):(push(p1),push(one));for(t=tos,push(one),gen(r,t),e=n=0,s=o=tos-t;0<=s?n<s:n>s;e=0<=s?++n:--n)stack[r+e]=stack[t+e];return moveTos(r+o),restore()},gen=function(r,e){var t,o,n,s;if(0,o=0,save(),p1=pop(),r===e)return push(p1),void restore();if(p2=stack[r+0],p3=stack[r+1],push(p3),t=pop_integer(),!isNaN(t))for(o=n=0,s=Math.abs(t);0<=s?n<=s:n>=s;o=0<=s?++n:--n)push(p1),push(p2),push_integer(sign(t)*o),power(),multiply(),gen(r+2,e);return restore()},__factor_add=function(){for(save(),p1=pop(),p3=cdr(p1),push(car(p3)),p3=cdr(p3);iscons(p3);)push(car(p3)),gcd(),p3=cdr(p3);if(p2=pop(),isplusone(p2))return push(p1),push(one),void restore();if(isNumericAtom(p2))push(p2),factor_small_number();else if(car(p2)===symbol(MULTIPLY))for(p3=cdr(p2),isNumericAtom(car(p3))?(push(car(p3)),factor_small_number()):(push(car(p3)),push(one)),p3=cdr(p3);iscons(p3);)push(car(p3)),push(one),p3=cdr(p3);else push(p2),push(one);for(push(p2),inverse(),p2=pop(),push(zero),p3=cdr(p1);iscons(p3);)push(p2),push(car(p3)),multiply(),add(),p3=cdr(p3);return push(one),restore()},dpow=function(){var r,e,t,o,n,s;return r=0,e=0,0,0,n=0,0,o=pop_double(),0===(t=pop_double())&&o<0&&stop("divide by zero"),t>=0||o%1==0?(n=Math.pow(t,o),void push_double(n)):(n=Math.pow(Math.abs(t),o),s=Math.PI*o,o%.5==0?(r=0,e=Math.sin(s)):(r=Math.cos(s),e=Math.sin(s)),push_double(r*n),push_double(e*n),push(imaginaryunit),multiply(),add())},Eval=function(){var r;switch(check_esc_flag(),save(),p1=pop(),!evaluatingAsFloats&&isfloating(p1)&&(r=!0,evaluatingAsFloats++),p1.k){case CONS:Eval_cons();break;case NUM:evaluatingAsFloats?push_double(convert_rational_to_double(p1)):push(p1);break;case DOUBLE:case STR:push(p1);break;case TENSOR:Eval_tensor();break;case SYM:Eval_sym();break;default:stop("atom?")}return r&&evaluatingAsFloats--,restore()},Eval_sym=function(){var r,e,t,o,n,s;if(iskeyword(p1))return push(p1),push(symbol(LAST)),list(2),void Eval();if(p1===symbol(PI)&&evaluatingAsFloats)push_double(Math.PI);else if(p2=get_binding(p1),DEBUG&&console.log("looked up: "+p1+" which contains: "+p2),push(p2),p1!==p2){if(-1!==(o=chainOfUserSymbolsNotFunctionsBeingEvaluated.indexOf(p1))){for(r="",e=t=n=o,s=chainOfUserSymbolsNotFunctionsBeingEvaluated.length;n<=s?t<s:t>s;e=n<=s?++t:--t)r+=chainOfUserSymbolsNotFunctionsBeingEvaluated[e].printname+" -> ";return r+=p1.printname,void stop("recursive evaluation of symbols: "+r)}return chainOfUserSymbolsNotFunctionsBeingEvaluated.push(p1),Eval(),chainOfUserSymbolsNotFunctionsBeingEvaluated.pop()}},Eval_cons=function(){var r;if(r=car(p1),car(r)!==symbol(EVAL))switch(issymbol(r)||stop("cons?"),symnum(r)){case ABS:return Eval_abs();case ADD:return Eval_add();case ADJ:return Eval_adj();case AND:return Eval_and();case ARCCOS:return Eval_arccos();case ARCCOSH:return Eval_arccosh();case ARCSIN:return Eval_arcsin();case ARCSINH:return Eval_arcsinh();case ARCTAN:return Eval_arctan();case ARCTANH:return Eval_arctanh();case ARG:return Eval_arg();case ATOMIZE:return Eval_atomize();case BESSELJ:return Eval_besselj();case BESSELY:return Eval_bessely();case BINDING:return Eval_binding();case BINOMIAL:return Eval_binomial();case CEILING:return Eval_ceiling();case CHECK:return Eval_check();case CHOOSE:return Eval_choose();case CIRCEXP:return Eval_circexp();case CLEAR:return Eval_clear();case CLEARALL:return Eval_clearall();case CLEARPATTERNS:return Eval_clearpatterns();case CLOCK:return Eval_clock();case COEFF:return Eval_coeff();case COFACTOR:return Eval_cofactor();case CONDENSE:return Eval_condense();case CONJ:return Eval_conj();case CONTRACT:return Eval_contract();case COS:return Eval_cos();case COSH:return Eval_cosh();case DECOMP:return Eval_decomp();case DEGREE:return Eval_degree();case DEFINT:return Eval_defint();case DENOMINATOR:return Eval_denominator();case DERIVATIVE:return Eval_derivative();case DET:return Eval_det();case DIM:return Eval_dim();case DIRAC:return Eval_dirac();case DIVISORS:return Eval_divisors();case DO:return Eval_do();case DOT:return Eval_inner();case DRAW:return Eval_draw();case DSOLVE:return Eval_dsolve();case EIGEN:return Eval_eigen();case EIGENVAL:return Eval_eigenval();case EIGENVEC:return Eval_eigenvec();case ERF:return Eval_erf();case ERFC:return Eval_erfc();case EVAL:return Eval_Eval();case EXP:return Eval_exp();case EXPAND:return Eval_expand();case EXPCOS:return Eval_expcos();case EXPSIN:return Eval_expsin();case FACTOR:return Eval_factor();case FACTORIAL:return Eval_factorial();case FACTORPOLY:return Eval_factorpoly();case FILTER:return Eval_filter();case FLOATF:return Eval_float();case APPROXRATIO:return Eval_approxratio();case FLOOR:return Eval_floor();case FOR:return Eval_for();case FUNCTION:return Eval_function_reference();case GAMMA:return Eval_gamma();case GCD:return Eval_gcd();case HERMITE:return Eval_hermite();case HILBERT:return Eval_hilbert();case IMAG:return Eval_imag();case INDEX:return Eval_index();case INNER:return Eval_inner();case INTEGRAL:return Eval_integral();case INV:return Eval_inv();case INVG:return Eval_invg();case ISINTEGER:return Eval_isinteger();case ISPRIME:return Eval_isprime();case LAGUERRE:return Eval_laguerre();case LCM:return Eval_lcm();case LEADING:return Eval_leading();case LEGENDRE:return Eval_legendre();case LOG:return Eval_log();case LOOKUP:return Eval_lookup();case MOD:return Eval_mod();case MULTIPLY:return Eval_multiply();case NOT:return Eval_not();case NROOTS:return Eval_nroots();case NUMBER:return Eval_number();case NUMERATOR:return Eval_numerator();case OPERATOR:return Eval_operator();case OR:return Eval_or();case OUTER:return Eval_outer();case PATTERN:return Eval_pattern();case PATTERNSINFO:return Eval_patternsinfo();case POLAR:return Eval_polar();case POWER:return Eval_power();case PRIME:return Eval_prime();case PRINT:return Eval_print();case PRINT2DASCII:return Eval_print2dascii();case PRINTFULL:return Eval_printcomputer();case PRINTLATEX:return Eval_printlatex();case PRINTLIST:return Eval_printlist();case PRINTPLAIN:return Eval_printhuman();case PRODUCT:return Eval_product();case QUOTE:return Eval_quote();case QUOTIENT:return Eval_quotient();case RANK:return Eval_rank();case RATIONALIZE:return Eval_rationalize();case REAL:return Eval_real();case ROUND:return Eval_round();case YYRECT:return Eval_rect();case ROOTS:return Eval_roots();case SETQ:return Eval_setq();case SGN:return Eval_sgn();case SILENTPATTERN:return Eval_silentpattern();case SIMPLIFY:return Eval_simplify();case SIN:return Eval_sin();case SINH:return Eval_sinh();case SHAPE:return Eval_shape();case SQRT:return Eval_sqrt();case STOP:return Eval_stop();case SUBST:return Eval_subst();case SUM:return Eval_sum();case SYMBOLSINFO:return Eval_symbolsinfo();case TAN:return Eval_tan();case TANH:return Eval_tanh();case TAYLOR:return Eval_taylor();case TEST:return Eval_test();case TESTEQ:return Eval_testeq();case TESTGE:return Eval_testge();case TESTGT:return Eval_testgt();case TESTLE:return Eval_testle();case TESTLT:return Eval_testlt();case TRANSPOSE:return Eval_transpose();case UNIT:return Eval_unit();case ZERO:return Eval_zero();default:return Eval_user_function()}else Eval_user_function()},Eval_binding=function(){return push(get_binding(cadr(p1)))},Eval_check=function(){var r;return null==(r=isZeroLikeOrNonZeroLikeOrUndetermined(cadr(p1)))?push(p1):push_integer(r)},Eval_det=function(){return push(cadr(p1)),Eval(),det()},Eval_dim=function(){var r;return push(cadr(p1)),Eval(),p2=pop(),iscons(cddr(p1))?(push(caddr(p1)),Eval(),r=pop_integer()):r=1,istensor(p2)?r<1||r>p2.tensor.ndim?push(p1):push_integer(p2.tensor.dim[r-1]):push_integer(1)},Eval_divisors=function(){return push(cadr(p1)),Eval(),divisors()},Eval_do=function(){var r;for(push(car(p1)),p1=cdr(p1),r=[];iscons(p1);)pop(),push(car(p1)),Eval(),r.push(p1=cdr(p1));return r},Eval_dsolve=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),push(cadddr(p1)),Eval(),dsolve()},Eval_Eval=function(){for(push(cadr(p1)),Eval(),p1=cddr(p1);iscons(p1);)push(car(p1)),Eval(),push(cadr(p1)),Eval(),subst(),p1=cddr(p1);return Eval()},Eval_exp=function(){return push(cadr(p1)),Eval(),exponential()},Eval_factorial=function(){return push(cadr(p1)),Eval(),factorial()},Eval_index=function(){var r,e,t;if(r=tos,e=p1,p1=cdr(p1),push(car(p1)),Eval(),t=stack[tos-1],isNumericAtom(t)&&stop("trying to access a scalar as a tensor"),!istensor(t))return moveTos(r),void push(e);for(p1=cdr(p1);iscons(p1);){if(push(car(p1)),Eval(),!isintegerorintegerfloat(stack[tos-1]))return moveTos(r),void push(e);p1=cdr(p1)}return index_function(tos-r)},Eval_isinteger=function(){if(push(cadr(p1)),Eval(),p1=pop(),isrational(p1))isinteger(p1)?push(one):push(zero);else{if(!isdouble(p1))return push_symbol(ISINTEGER),push(p1),list(2);Math.floor(p1.d)===p1.d?push(one):push(zero)}},Eval_number=function(){return push(cadr(p1)),Eval(),(p1=pop()).k===NUM||p1.k===DOUBLE?push_integer(1):push_integer(0)},Eval_operator=function(){var r;for(r=tos,push_symbol(OPERATOR),p1=cdr(p1);iscons(p1);)push(car(p1)),Eval(),p1=cdr(p1);return list(tos-r)},Eval_quote=function(){return push(cadr(p1))},Eval_rank=function(){return push(cadr(p1)),Eval(),p1=pop(),istensor(p1)?push_integer(p1.tensor.ndim):push(zero)},Eval_setq=function(){if(caadr(p1)!==symbol(INDEX)){if(!iscons(cadr(p1)))return issymbol(cadr(p1))||stop("symbol assignment: error in symbol"),push(caddr(p1)),Eval(),p2=pop(),set_binding(cadr(p1),p2),push(symbol(NIL));define_user_function()}else setq_indexed()},setq_indexed=function(){var r;for(p4=cadadr(p1),console.log("p4: "+p4),issymbol(p4)||stop("indexed assignment: expected a symbol name"),r=tos,push(caddr(p1)),Eval(),p2=cdadr(p1);iscons(p2);)push(car(p2)),Eval(),p2=cdr(p2);return set_component(tos-r),p3=pop(),set_binding(p4,p3),push(symbol(NIL))},Eval_sqrt=function(){return push(cadr(p1)),Eval(),push_rational(1,2),power()},Eval_stop=function(){return stop("user stop")},Eval_subst=function(){return push(cadddr(p1)),Eval(),push(caddr(p1)),Eval(),push(cadr(p1)),Eval(),subst(),Eval()},Eval_unit=function(){var r,e,t,o;if(r=0,0,push(cadr(p1)),Eval(),e=pop_integer(),isNaN(e))push(p1);else{if(!(e<1)){for((p1=alloc_tensor(e*e)).tensor.ndim=2,p1.tensor.dim[0]=e,p1.tensor.dim[1]=e,r=t=0,o=e;0<=o?t<o:t>o;r=0<=o?++t:--t)p1.tensor.elem[e*r+r]=one;return check_tensor_dimensions(p1),push(p1)}push(p1)}},Eval_noexpand=function(){var r;return r=expanding,expanding=0,Eval(),expanding=r},Eval_predicate=function(){return save(),p1=top(),car(p1)===symbol(SETQ)&&(pop(),push_symbol(TESTEQ),push(cadr(p1)),push(caddr(p1)),list(3)),Eval(),restore()},Eval_expcos=function(){return push(cadr(p1)),Eval(),expcos()},expcos=function(){return save(),p1=pop(),push(imaginaryunit),push(p1),multiply(),exponential(),push_rational(1,2),multiply(),push(imaginaryunit),negate(),push(p1),multiply(),exponential(),push_rational(1,2),multiply(),add(),restore()},Eval_expsin=function(){return push(cadr(p1)),Eval(),expsin()},expsin=function(){return save(),p1=pop(),push(imaginaryunit),push(p1),multiply(),exponential(),push(imaginaryunit),divide(),push_rational(1,2),multiply(),push(imaginaryunit),negate(),push(p1),multiply(),exponential(),push(imaginaryunit),divide(),push_rational(1,2),multiply(),subtract(),restore()},Eval_factor=function(){var r;for(push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),(p2=pop())===symbol(NIL)?guess():push(p2),factor(),p1=cdddr(p1),r=[];iscons(p1);)push(car(p1)),Eval(),factor_again(),r.push(p1=cdr(p1));return r},factor_again=function(){var r,e;if(save(),p2=pop(),p1=pop(),r=tos,car(p1)===symbol(MULTIPLY))for(p1=cdr(p1);iscons(p1);)push(car(p1)),push(p2),factor_term(),p1=cdr(p1);else push(p1),push(p2),factor_term();return(e=tos-r)>1&&multiply_all_noexpand(e),restore()},factor_term=function(){if(save(),factorpoly(),p1=pop(),car(p1)===symbol(MULTIPLY))for(p1=cdr(p1);iscons(p1);)push(car(p1)),p1=cdr(p1);else push(p1);return restore()},factor=function(){return save(),p2=pop(),p1=pop(),isinteger(p1)?(push(p1),factor_number()):(push(p1),push(p2),factorpoly()),restore()},factor_small_number=function(){var r,e,t,o,n,s;for(t=0,save(),o=pop_integer(),isNaN(o)&&stop("number too big to factor"),o<0&&(o=-o),t=n=0,s=MAXPRIMETAB;(0<=s?n<s:n>s)&&!((r=primetab[t])>o/r);t=0<=s?++n:--n){for(e=0;o%r==0;)o/=r,e++;e&&(push_integer(r),push_integer(e))}return o>1&&(push_integer(o),push_integer(1)),restore()},factorial=function(){var r;return 0,save(),p1=pop(),push(p1),(r=pop_integer())<0||isNaN(r)?(push_symbol(FACTORIAL),push(p1),list(2),void restore()):(bignum_factorial(r),restore())},simplifyfactorials=function(){var r;if(0,save(),r=expanding,expanding=0,p1=pop(),car(p1)===symbol(ADD)){for(push(zero),p1=cdr(p1);iscons(p1);)push(car(p1)),simplifyfactorials(),add(),p1=cdr(p1);return expanding=r,void restore()}return car(p1)===symbol(MULTIPLY)?(sfac_product(),expanding=r,void restore()):(push(p1),expanding=r,restore())},sfac_product=function(){var r,e,t,o,n,s,p,i,a,l,u;for(t=0,o=0,n=0,u=tos,p1=cdr(p1),n=0;iscons(p1);)push(car(p1)),p1=cdr(p1),n++;for(t=s=0,p=n-1;0<=p?s<p:s>p;t=0<=p?++s:--s)if(stack[u+t]!==symbol(NIL))for(o=r=i=t+1,a=n;i<=a?r<a:r>a;o=i<=a?++r:--r)stack[u+o]!==symbol(NIL)&&sfac_product_f(u,t,o);for(push(one),t=e=0,l=n;0<=l?e<l:e>l;t=0<=l?++e:--e)stack[u+t]!==symbol(NIL)&&(push(stack[u+t]),multiply());return p1=pop(),moveTos(tos-n),push(p1)},sfac_product_f=function(r,e,t){var o,n,s,p;if(o=0,n=0,p1=stack[r+e],p2=stack[r+t],ispower(p1)?(p3=caddr(p1),p1=cadr(p1)):p3=one,ispower(p2)?(p4=caddr(p2),p2=cadr(p2)):p4=one,isfactorial(p1)&&isfactorial(p2)){if(push(p3),push(p4),add(),yyexpand(),0!==(n=pop_integer()))return;if(push(cadr(p1)),push(cadr(p2)),subtract(),yyexpand(),0===(n=pop_integer())||isNaN(n))return;for(n<0&&(n=-n,p5=p1,p1=p2,p2=p5,p5=p3,p3=p4,p4=p5),push(one),o=s=1,p=n;1<=p?s<=p:s>=p;o=1<=p?++s:--s)push(cadr(p2)),push_integer(o),add(),push(p3),power(),multiply();return stack[r+e]=pop(),stack[r+t]=symbol(NIL)}},polycoeff=0,factpoly_expo=0,factorpoly=function(){return save(),p2=pop(),p1=pop(),Find(p1,p2)&&ispoly(p1,p2)&&issymbol(p2)?(push(p1),push(p2),yyfactorpoly(),restore()):(push(p1),void restore())},yyfactorpoly=function(){var r,e,t,o,n,s,p,i,a,l,u,c,d,_,m,f,h,g;for(0,a=0,save(),p2=pop(),p1=pop(),i=tos,isfloating(p1)&&stop("floating point numbers in polynomial"),polycoeff=tos,push(p1),push(p2),factpoly_expo=coeff()-1,rationalize_coefficients(i),g="real",h=null;factpoly_expo>0;)if(isZeroAtomOrTensor(stack[polycoeff+0])?(push_integer(1),p4=pop(),push_integer(0),p5=pop()):"real"===g?p=get_factor_from_real_root():"complex"===g&&(s=get_factor_from_complex_root(h)),"real"===g){if(0===p){g="complex";continue}for(push(p4),push(p2),multiply(),push(p5),add(),p8=pop(),DEBUG&&console.log("success\nFACTOR="+p8),push(p7),push(p8),multiply_noexpand(),p7=pop(),yydivpoly();factpoly_expo&&isZeroAtomOrTensor(stack[polycoeff+factpoly_expo]);)factpoly_expo--;for(push(zero),a=l=0,d=factpoly_expo;0<=d?l<=d:l>=d;a=0<=d?++l:--l)push(stack[polycoeff+a]),push(p2),push_integer(a),power(),multiply(),add();h=pop()}else if("complex"===g){if(0===s)break;if(push(p4),push(p2),subtract(),push(p4),conjugate(),push(p2),subtract(),multiply(),p8=pop(),DEBUG&&console.log("success\nFACTOR="+p8),push(p7),c=pop(),push(p7),push(p8),multiply_noexpand(),p7=pop(),null==h){for(push(zero),a=r=0,_=factpoly_expo;0<=_?r<=_:r>=_;a=0<=_?++r:--r)push(stack[polycoeff+a]),push(p2),push_integer(a),power(),multiply(),add();h=pop()}if(push(n=h),push(p8),push(p2),divpoly(),h=pop(),push(h),push(p8),multiply(),o=pop(),!equal(o,n))return DEBUG&&console.log("we found a polynomial based on complex root and its conj but it doesn't divide the poly, quitting"),DEBUG&&console.log("so just returning previousFactorisation times dividend: "+c+" * "+n),push(c),push(n),u=expanding,expanding=0,yycondense(),expanding=u,multiply_noexpand(),p7=pop(),stack[i]=p7,moveTos(i+1),void restore();for(a=e=0,m=factpoly_expo;0<=m?e<=m:e>=m;a=0<=m?++e:--e)pop();push(h),push(p2),coeff(),factpoly_expo-=2}for(push(zero),a=t=0,f=factpoly_expo;0<=f?t<=f:t>=f;a=0<=f?++t:--t)push(stack[polycoeff+a]),push(p2),push_integer(a),power(),multiply(),add();return p1=pop(),DEBUG&&console.log("POLY="+p1),push(p1),u=expanding,expanding=0,yycondense(),expanding=u,p1=pop(),factpoly_expo>0&&isnegativeterm(stack[polycoeff+factpoly_expo])&&(push(p1),negate(),p1=pop(),push(p7),negate_noexpand(),p7=pop()),push(p7),push(p1),multiply_noexpand(),p7=pop(),DEBUG&&console.log("RESULT="+p7),stack[i]=p7,moveTos(i+1),restore()},rationalize_coefficients=function(r){var e,t,o,n,s,p,i;for(t=0,p7=one,t=o=n=r,s=tos;n<=s?o<s:o>s;t=n<=s?++o:--o)push(stack[t]),denominator(),push(p7),lcm(),p7=pop();for(t=e=p=r,i=tos;p<=i?e<i:e>i;t=p<=i?++e:--e)push(p7),push(stack[t]),multiply(),stack[t]=pop();if(push(p7),reciprocate(),p7=pop(),DEBUG)return console.log("rationalize_coefficients result")},get_factor_from_real_root=function(){var r,e,t,o,n,s,p,i,a,l,u,c,d,_,m,f,h,g;if(i=0,0,0,0,0,0,0,DEBUG){for(push(zero),i=u=0,c=factpoly_expo;0<=c?u<=c:u>=c;i=0<=c?++u:--u)push(stack[polycoeff+i]),push(p2),push_integer(i),power(),multiply(),add();p1=pop(),console.log("POLY="+p1)}if(p=tos,s=tos,push(stack[polycoeff+factpoly_expo]),divisors_onstack(),l=tos-s,r=tos,push(stack[polycoeff+0]),divisors_onstack(),a=tos-r,DEBUG){for(console.log("divisors of base term"),i=e=0,d=a;0<=d?e<d:e>d;i=0<=d?++e:--e)console.log(", "+stack[r+i]);for(console.log("divisors of leading term"),i=t=0,_=l;0<=_?t<_:t>_;i=0<=_?++t:--t)console.log(", "+stack[s+i])}for(h=o=0,m=l;0<=m?o<m:o>m;h=0<=m?++o:--o)for(g=n=0,f=a;0<=f?n<f:n>f;g=0<=f?++n:--n){if(p4=stack[s+h],p5=stack[r+g],push(p5),push(p4),divide(),negate(),p3=pop(),Evalpoly(),DEBUG&&(console.log("try A="+p4),console.log(", B="+p5),console.log(", root "+p2),console.log("=-B/A="+p3),console.log(", POLY("+p3),console.log(")="+p6)),isZeroAtomOrTensor(p6))return moveTos(p),DEBUG&&console.log("get_factor_from_real_root returning 1"),1;if(push(p5),negate(),p5=pop(),push(p3),negate(),p3=pop(),Evalpoly(),DEBUG&&(console.log("try A="+p4),console.log(", B="+p5),console.log(", root "+p2),console.log("=-B/A="+p3),console.log(", POLY("+p3),console.log(")="+p6)),isZeroAtomOrTensor(p6))return moveTos(p),DEBUG&&console.log("get_factor_from_real_root returning 1"),1}return moveTos(p),DEBUG&&console.log("get_factor_from_real_root returning 0"),0},get_factor_from_complex_root=function(r){var e,t,o,n,s;if(0,0,0,0,0,0,0,factpoly_expo<=2)return DEBUG&&console.log("no more factoring via complex roots to be found in polynomial of degree <= 2"),0;if(p1=r,DEBUG&&console.log("complex root finding for POLY="+p1),t=tos,tos,push_integer(-1),push_rational(2,3),power(),rect(),p4=pop(),DEBUG&&console.log("complex root finding: trying with "+p4),push(p4),p3=pop(),push(p3),Evalpoly(),DEBUG&&console.log("complex root finding result: "+p6),isZeroAtomOrTensor(p6))return moveTos(t),DEBUG&&console.log("get_factor_from_complex_root returning 1"),1;if(push_integer(1),push_rational(2,3),power(),rect(),p4=pop(),DEBUG&&console.log("complex root finding: trying with "+p4),push(p4),p3=pop(),push(p3),Evalpoly(),DEBUG&&console.log("complex root finding result: "+p6),isZeroAtomOrTensor(p6))return moveTos(t),DEBUG&&console.log("get_factor_from_complex_root returning 1"),1;for(n=o=-10;o<=10;n=++o)for(s=e=1;e<=5;s=++e)if(push_integer(n),push_integer(s),push(imaginaryunit),multiply(),add(),rect(),p4=pop(),push(p4),p3=pop(),push(p3),Evalpoly(),isZeroAtomOrTensor(p6))return moveTos(t),DEBUG&&console.log("found complex root: "+p6),1;return moveTos(t),DEBUG&&console.log("get_factor_from_complex_root returning 0"),0},yydivpoly=function(){var r,e,t;for(r=0,p6=zero,r=e=t=factpoly_expo;t<=0?e<0:e>0;r=t<=0?++e:--e)push(stack[polycoeff+r]),stack[polycoeff+r]=p6,push(p4),divide(),p6=pop(),push(stack[polycoeff+r-1]),push(p6),push(p5),multiply(),subtract(),stack[polycoeff+r-1]=pop();if(stack[polycoeff+0]=p6,DEBUG)return console.log("yydivpoly Q:")},Evalpoly=function(){var r,e,t;for(r=0,push(zero),r=e=t=factpoly_expo;t<=0?e<=0:e>=0;r=t<=0?++e:--e)push(p3),multiply(),push(stack[polycoeff+r]),DEBUG&&(console.log("Evalpoly top of stack:"),console.log(print_list(stack[tos-r]))),add();return p6=pop()},factors=function(r){var e;if(e=tos,car(r)===symbol(ADD))for(r=cdr(r);iscons(r);)push_term_factors(car(r)),r=cdr(r);else push_term_factors(r);return tos-e},push_term_factors=function(r){var e;if(car(r)===symbol(MULTIPLY)){for(r=cdr(r),e=[];iscons(r);)push(car(r)),e.push(r=cdr(r));return e}return push(r)},Eval_float=function(){return evaluatingAsFloats++,push(cadr(p1)),Eval(),yyfloat(),Eval(),evaluatingAsFloats--},checkFloatHasWorkedOutCompletely=function(r){var e,t,o,n,s;if(n=countOccurrencesOfSymbol(symbol(POWER),r),o=countOccurrencesOfSymbol(symbol(PI),r),e=countOccurrencesOfSymbol(symbol(E),r),t=countOccurrencesOfSymbol(symbol(MULTIPLY),r),s=countOccurrencesOfSymbol(symbol(ADD),r),DEBUG&&(console.log("     ... numberOfPowers: "+n),console.log("     ... numberOfPIs: "+o),console.log("     ... numberOfEs: "+e),console.log("     ... numberOfMults: "+t),console.log("     ... numberOfSums: "+s)),n>1||o>0||e>0||t>1||s>1)return stop("float: some unevalued parts in "+r)},zzfloat=function(){return save(),evaluatingAsFloats++,Eval(),yyfloat(),Eval(),evaluatingAsFloats--,restore()},yyfloat=function(){var r,e,t,o;if(e=0,r=0,evaluatingAsFloats++,save(),p1=pop(),iscons(p1)){for(r=tos;iscons(p1);)push(car(p1)),yyfloat(),p1=cdr(p1);list(tos-r)}else if(p1.k===TENSOR){for(push(p1),copy_tensor(),e=t=0,o=(p1=pop()).tensor.nelem;0<=o?t<o:t>o;e=0<=o?++t:--t)push(p1.tensor.elem[e]),yyfloat(),p1.tensor.elem[e]=pop();push(p1)}else p1.k===NUM?(push(p1),bignum_float()):p1===symbol(PI)?push_double(Math.PI):p1===symbol(E)?push_double(Math.E):push(p1);return restore(),evaluatingAsFloats--},Eval_floor=function(){return push(cadr(p1)),Eval(),yfloor()},yfloor=function(){return save(),yyfloor(),restore()},yyfloor=function(){var r;return r=0,p1=pop(),isNumericAtom(p1)?isdouble(p1)?(r=Math.floor(p1.d),void push_double(r)):isinteger(p1)?void push(p1):((p3=new U).k=NUM,p3.q.a=mdiv(p1.q.a,p1.q.b),p3.q.b=mint(1),push(p3),isnegativenumber(p1)?(push_integer(-1),add()):void 0):(push_symbol(FLOOR),push(p1),void list(2))},Eval_for=function(){var r,e,t,o,n,s,p;if(r=0,0,0,o=caddr(p1),issymbol(o)||stop("for: 2nd arg should be the variable to loop over"),push(cadddr(p1)),Eval(),e=pop_integer(),isNaN(e))push(p1);else{if(push(caddddr(p1)),Eval(),t=pop_integer(),!isNaN(t)){for(p4=get_binding(o),r=n=s=e,p=t;s<=p?n<=p:n>=p;r=s<=p?++n:--n)push_integer(r),p5=pop(),set_binding(o,p5),push(cadr(p1)),Eval(),pop();return set_binding(o,p4),push_symbol(NIL)}push(p1)}},Eval_gamma=function(){return push(cadr(p1)),Eval(),gamma()},gamma=function(){return save(),gammaf(),restore()},gammaf=function(){return p1=pop(),isrational(p1)&&MEQUAL(p1.q.a,1)&&MEQUAL(p1.q.b,2)?(evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),push_rational(1,2),void power()):isrational(p1)&&MEQUAL(p1.q.a,3)&&MEQUAL(p1.q.b,2)?(evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),push_rational(1,2),power(),push_rational(1,2),void multiply()):isnegativeterm(p1)?(evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),push_integer(-1),multiply(),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),push(p1),multiply(),sine(),push(p1),multiply(),push(p1),negate(),gamma(),multiply(),void divide()):void(car(p1)!==symbol(ADD)?(push_symbol(GAMMA),push(p1),list(2)):gamma_of_sum())},gamma_of_sum=function(){return p3=cdr(p1),isrational(car(p3))&&MEQUAL(car(p3).q.a,1)&&MEQUAL(car(p3).q.b,1)?(push(cadr(p3)),push(cadr(p3)),gamma(),multiply()):isrational(car(p3))&&MEQUAL(car(p3).q.a,-1)&&MEQUAL(car(p3).q.b,1)?(push(cadr(p3)),gamma(),push(cadr(p3)),push_integer(-1),add(),divide()):(push_symbol(GAMMA),push(p1),void list(2))},Eval_gcd=function(){var r;for(p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),r=[];iscons(p1);)push(car(p1)),Eval(),gcd(),r.push(p1=cdr(p1));return r},gcd=function(){var r;return r=expanding,save(),gcd_main(),restore(),expanding=r},gcd_main=function(){if(expanding=1,p2=pop(),p1=pop(),equal(p1,p2))push(p1);else{if(isrational(p1)&&isrational(p2))return push(p1),push(p2),void gcd_numbers();if(car(p1)!==symbol(ADD)||car(p2)!==symbol(ADD))if(car(p1)===symbol(ADD)&&(gcd_expr(p1),p1=pop()),car(p2)===symbol(ADD)&&(gcd_expr(p2),p2=pop()),car(p1)!==symbol(MULTIPLY)||car(p2)!==symbol(MULTIPLY))if(car(p1)!==symbol(MULTIPLY))if(car(p2)!==symbol(MULTIPLY))if(car(p1)===symbol(POWER)?(p3=caddr(p1),p1=cadr(p1)):p3=one,car(p2)===symbol(POWER)?(p4=caddr(p2),p2=cadr(p2)):p4=one,equal(p1,p2)){if(isNumericAtom(p3)&&isNumericAtom(p4))return push(p1),lessp(p3,p4)?push(p3):push(p4),void power();if(push(p3),push(p4),divide(),p5=pop(),isNumericAtom(p5))return push(p1),p5=car(p3)===symbol(MULTIPLY)&&isNumericAtom(cadr(p3))?cadr(p3):one,p6=car(p4)===symbol(MULTIPLY)&&isNumericAtom(cadr(p4))?cadr(p4):one,lessp(p5,p6)?push(p3):push(p4),void power();if(push(p3),push(p4),subtract(),p5=pop(),isNumericAtom(p5))return push(p1),isnegativenumber(p5)?push(p3):push(p4),power();push(one)}else push(one);else gcd_factor_term();else gcd_term_factor();else gcd_term_term();else gcd_expr_expr()}},gcd_expr_expr=function(){if(length(p1)===length(p2)){for(p3=cdr(p1),push(car(p3)),p3=cdr(p3);iscons(p3);)push(car(p3)),gcd(),p3=cdr(p3);for(p3=pop(),p4=cdr(p2),push(car(p4)),p4=cdr(p4);iscons(p4);)push(car(p4)),gcd(),p4=cdr(p4);return p4=pop(),push(p1),push(p3),divide(),p5=pop(),push(p2),push(p4),divide(),p6=pop(),equal(p5,p6)?(push(p5),push(p3),push(p4),gcd(),multiply()):push(one)}push(one)},gcd_expr=function(r){var e;for(r=cdr(r),push(car(r)),r=cdr(r),e=[];iscons(r);)push(car(r)),gcd(),e.push(r=cdr(r));return e},gcd_term_term=function(){var r;for(push(one),p3=cdr(p1),r=[];iscons(p3);){for(p4=cdr(p2);iscons(p4);)push(car(p3)),push(car(p4)),gcd(),multiply(),p4=cdr(p4);r.push(p3=cdr(p3))}return r},gcd_term_factor=function(){var r;for(push(one),p3=cdr(p1),r=[];iscons(p3);)push(car(p3)),push(p2),gcd(),multiply(),r.push(p3=cdr(p3));return r},gcd_factor_term=function(){var r;for(push(one),p4=cdr(p2),r=[];iscons(p4);)push(p1),push(car(p4)),gcd(),multiply(),r.push(p4=cdr(p4));return r},guess=function(){var r;return r=pop(),push(r),Find(r,symbol(SYMBOL_X))?push_symbol(SYMBOL_X):Find(r,symbol(SYMBOL_Y))?push_symbol(SYMBOL_Y):Find(r,symbol(SYMBOL_Z))?push_symbol(SYMBOL_Z):Find(r,symbol(SYMBOL_T))?push_symbol(SYMBOL_T):Find(r,symbol(SYMBOL_S))?push_symbol(SYMBOL_S):push_symbol(SYMBOL_X)},DEBUG_IMAG=!1,Eval_imag=function(){return push(cadr(p1)),Eval(),imag()},imag=function(){return save(),rect(),p1=pop(),DEBUG_IMAG&&console.log("IMAGE of "+p1),push(p1),push(p1),conjugate(),DEBUG_IMAG&&console.log(" image: conjugate result: "+stack[tos-1]),subtract(),push_integer(2),divide(),DEBUG_IMAG&&console.log(" image: 1st divide result: "+stack[tos-1]),push(imaginaryunit),divide(),DEBUG_IMAG&&console.log(" image: 2nd divide result: "+stack[tos-1]),restore()},index_function=function(r){var e,t,o,n,s,p,i,a,l,u,c,d,_,m,f,h,g,b,E,v;for(s=0,p=0,0,0,l=0,v=0,save(),(i=r-1)>(a=(p1=stack[E=tos-r]).tensor.ndim)&&stop("too many indices for tensor"),p=0,s=u=0,c=i;0<=c?u<c:u>c;s=0<=c?++u:--u)push(stack[E+s+1]),((v=pop_integer())<1||v>p1.tensor.dim[s])&&stop("index out of range"),p=p*p1.tensor.dim[s]+v-1;if(a===i)return moveTos(tos-r),push(p1.tensor.elem[p]),void restore();for(s=e=d=i,_=a;d<=_?e<_:e>_;s=d<=_?++e:--e)p=p*p1.tensor.dim[s]+0;for(l=1,s=t=m=i,f=a;m<=f?t<f:t>f;s=m<=f?++t:--t)l*=p1.tensor.dim[s];for((p2=alloc_tensor(l)).tensor.ndim=a-i,s=o=h=i,g=a;h<=g?o<g:o>g;s=h<=g?++o:--o)p2.tensor.dim[s-i]=p1.tensor.dim[s];for(s=n=0,b=l;0<=b?n<b:n>b;s=0<=b?++n:--n)p2.tensor.elem[s]=p1.tensor.elem[p+s];return check_tensor_dimensions(p1),check_tensor_dimensions(p2),moveTos(tos-r),push(p2),restore()},set_component=function(r){var e,t,o,n,s,p,i,a,l,u,c,d,_,m,f,h,g,b,E;for(p=0,i=0,0,0,E=0,save(),r<3&&stop("error in indexed assign"),p2=stack[b=tos-r],p1=stack[b+1],istensor(p1)||stop("error in indexed assign: assigning to something that is not a tensor"),(a=r-2)>(l=p1.tensor.ndim)&&stop("error in indexed assign"),i=0,p=u=0,c=a;0<=c?u<c:u>c;p=0<=c?++u:--u)push(stack[b+p+2]),((E=pop_integer())<1||E>p1.tensor.dim[p])&&stop("error in indexed assign\n"),i=i*p1.tensor.dim[p]+E-1;for(p=e=d=a,_=l;d<=_?e<_:e>_;p=d<=_?++e:--e)i=i*p1.tensor.dim[p]+0;for((p3=alloc_tensor(p1.tensor.nelem)).tensor.ndim=p1.tensor.ndim,p=t=0,m=p1.tensor.ndim;0<=m?t<m:t>m;p=0<=m?++t:--t)p3.tensor.dim[p]=p1.tensor.dim[p];for(p=o=0,f=p1.tensor.nelem;0<=f?o<f:o>f;p=0<=f?++o:--o)p3.tensor.elem[p]=p1.tensor.elem[p];if(check_tensor_dimensions(p1),check_tensor_dimensions(p3),p1=p3,l===a)return istensor(p2)&&stop("error in indexed assign"),p1.tensor.elem[i]=p2,check_tensor_dimensions(p1),moveTos(tos-r),push(p1),void restore();for(istensor(p2)||stop("error in indexed assign"),l-a!==p2.tensor.ndim&&stop("error in indexed assign"),p=n=0,h=p2.tensor.ndim;0<=h?n<h:n>h;p=0<=h?++n:--n)p1.tensor.dim[a+p]!==p2.tensor.dim[p]&&stop("error in indexed assign");for(p=s=0,g=p2.tensor.nelem;0<=g?s<g:s>g;p=0<=g?++s:--s)p1.tensor.elem[i+p]=p2.tensor.elem[p];return check_tensor_dimensions(p1),check_tensor_dimensions(p2),moveTos(tos-r),push(p1),restore()},DEBUG_IS=!1,isZeroAtomOrTensor=function(r){var e,t,o;switch(e=0,r.k){case NUM:if(MZERO(r.q.a))return 1;break;case DOUBLE:if(0===r.d)return 1;break;case TENSOR:for(e=t=0,o=r.tensor.nelem;0<=o?t<o:t>o;e=0<=o?++t:--t)if(!isZeroAtomOrTensor(r.tensor.elem[e]))return 0;return 1}return 0},isZeroLikeOrNonZeroLikeOrUndetermined=function(r){var e;if(push(r),Eval_predicate(),e=pop(),isZeroAtomOrTensor(e))return 0;if(isNumericAtomOrTensor(e))return 1;if(push(e),zzfloat(),e=pop(),isZeroAtomOrTensor(e))return 0;if(isNumericAtomOrTensor(e))return 1;if(Find(e,imaginaryunit)){if(push(e),absValFloat(),Eval_predicate(),e=pop(),isZeroAtomOrTensor(e))return 0;if(isNumericAtomOrTensor(e))return 1}return null},isnegativenumber=function(r){switch(r.k){case NUM:if(-1===MSIGN(r.q.a))return 1;break;case DOUBLE:if(r.d<0)return 1}return 0},ispositivenumber=function(r){switch(r.k){case NUM:if(1===MSIGN(r.q.a))return 1;break;case DOUBLE:if(r.d>0)return 1}return 0},isplustwo=function(r){switch(r.k){case NUM:if(MEQUAL(r.q.a,2)&&MEQUAL(r.q.b,1))return 1;break;case DOUBLE:if(2===r.d)return 1}return 0},isplusone=function(r){switch(r.k){case NUM:if(MEQUAL(r.q.a,1)&&MEQUAL(r.q.b,1))return 1;break;case DOUBLE:if(1===r.d)return 1}return 0},isminusone=function(r){switch(r.k){case NUM:if(MEQUAL(r.q.a,-1)&&MEQUAL(r.q.b,1))return 1;break;case DOUBLE:if(-1===r.d)return 1}return 0},isone=function(r){return isplusone(r)||isminusone(r)},isinteger=function(r){return r.k===NUM&&MEQUAL(r.q.b,1)?1:0},isintegerorintegerfloat=function(r){return r.k===DOUBLE?r.d===Math.round(r.d)?1:0:isinteger(r)},isnonnegativeinteger=function(r){return isrational(r)&&MEQUAL(r.q.b,1)&&1===MSIGN(r.q.a)?1:0},isposint=function(r){return isinteger(r)&&1===MSIGN(r.q.a)?1:0},ispoly=function(r,e){return Find(r,e)?ispoly_expr(r,e):0},ispoly_expr=function(r,e){if(car(r)===symbol(ADD)){for(r=cdr(r);iscons(r);){if(!ispoly_term(car(r),e))return 0;r=cdr(r)}return 1}return ispoly_term(r,e)},ispoly_term=function(r,e){if(car(r)===symbol(MULTIPLY)){for(r=cdr(r);iscons(r);){if(!ispoly_factor(car(r),e))return 0;r=cdr(r)}return 1}return ispoly_factor(r,e)},ispoly_factor=function(r,e){return equal(r,e)?1:car(r)===symbol(POWER)&&equal(cadr(r),e)?isposint(caddr(r))?1:0:Find(r,e)?0:1},isnegativeterm=function(r){return isnegativenumber(r)?1:car(r)===symbol(MULTIPLY)&&isnegativenumber(cadr(r))?1:0},hasNegativeRationalExponent=function(r){return car(r)===symbol(POWER)&&isrational(car(cdr(cdr(r))))&&isnegativenumber(car(cdr(r)))?(DEBUG_IS&&console.log("hasNegativeRationalExponent: "+r.toString()+" has imaginary component"),1):(DEBUG_IS&&console.log("hasNegativeRationalExponent: "+r.toString()+" has NO imaginary component"),0)},isimaginarynumberdouble=function(r){return car(r)===symbol(MULTIPLY)&&3===length(r)&&isdouble(cadr(r))&&hasNegativeRationalExponent(caddr(r))||equal(r,imaginaryunit)?1:0},isimaginarynumber=function(r){return car(r)===symbol(MULTIPLY)&&3===length(r)&&isNumericAtom(cadr(r))&&equal(caddr(r),imaginaryunit)||equal(r,imaginaryunit)||hasNegativeRationalExponent(caddr(r))?(DEBUG_IS&&console.log("isimaginarynumber: "+r.toString()+" is imaginary number"),1):(DEBUG_IS&&console.log("isimaginarynumber: "+r.toString()+" isn't an imaginary number"),0)},iscomplexnumberdouble=function(r){return car(r)===symbol(ADD)&&3===length(r)&&isdouble(cadr(r))&&isimaginarynumberdouble(caddr(r))||isimaginarynumberdouble(r)?1:0},iscomplexnumber=function(r){return car(r)===symbol(ADD)&&3===length(r)&&isNumericAtom(cadr(r))&&isimaginarynumber(caddr(r))||isimaginarynumber(r)?(DEBUG&&console.log("iscomplexnumber: "+r.toString()+" is imaginary number"),1):(DEBUG&&console.log("iscomplexnumber: "+r.toString()+" is imaginary number"),0)},iseveninteger=function(r){return isinteger(r)&&r.q.a.isEven()?1:0},isnegative=function(r){return car(r)===symbol(ADD)&&isnegativeterm(cadr(r))?1:isnegativeterm(r)?1:0},issymbolic=function(r){if(issymbol(r))return 1;for(;iscons(r);){if(issymbolic(car(r)))return 1;r=cdr(r)}return 0},isintegerfactor=function(r){return isinteger(r)||car(r)===symbol(POWER)&&isinteger(cadr(r))&&isinteger(caddr(r))?1:0},isNumberOneOverSomething=function(r){return isfraction(r)&&1===Math.abs(r.q.a.value)?1:0},isoneover=function(r){return car(r)===symbol(POWER)&&isminusone(caddr(r))?1:0},isfraction=function(r){return r.k!==NUM||MEQUAL(r.q.b,1)?0:1},equaln=function(r,e){switch(r.k){case NUM:if(MEQUAL(r.q.a,e)&&MEQUAL(r.q.b,1))return 1;break;case DOUBLE:if(r.d===e)return 1}return 0},equalq=function(r,e,t){switch(r.k){case NUM:if(MEQUAL(r.q.a,e)&&MEQUAL(r.q.b,t))return 1;break;case DOUBLE:if(r.d===e/t)return 1}return 0},isoneovertwo=function(r){return equalq(r,1,2)?1:0},isminusoneovertwo=function(r){return equalq(r,-1,2)?1:0},isoneoversqrttwo=function(r){return car(r)===symbol(POWER)&&equaln(cadr(r),2)&&equalq(caddr(r),-1,2)?1:0},isminusoneoversqrttwo=function(r){return car(r)===symbol(MULTIPLY)&&equaln(cadr(r),-1)&&isoneoversqrttwo(caddr(r))&&3===length(r)?1:0},isfloating=function(r){if(r.k===DOUBLE||r===symbol(FLOATF))return 1;for(;iscons(r);){if(isfloating(car(r)))return 1;r=cdr(r)}return 0},isimaginaryunit=function(r){return equal(r,imaginaryunit)?1:0},isquarterturn=function(r){var e,t;if(t=0,e=0,car(r)!==symbol(MULTIPLY))return 0;if(equal(cadr(r),imaginaryunit))return caddr(r)!==symbol(PI)?0:3!==length(r)?0:2;if(!isNumericAtom(cadr(r)))return 0;if(!equal(caddr(r),imaginaryunit))return 0;if(cadddr(r)!==symbol(PI))return 0;if(4!==length(r))return 0;if(push(cadr(r)),push_integer(2),multiply(),t=pop_integer(),isNaN(t))return 0;switch(t<1&&(e=1,t=-t),t%4){case 0:t=1;break;case 1:t=e?4:3;break;case 2:t=2;break;case 3:t=e?3:4}return t},isnpi=function(r){var e;return e=0,r===symbol(PI)?2:car(r)===symbol(MULTIPLY)&&isNumericAtom(cadr(r))&&caddr(r)===symbol(PI)&&3===length(r)?(0,push(cadr(r)),push_integer(2),multiply(),e=pop_integer(),isNaN(e)?0:e=e<0?4- -e%4:1+(e-1)%4):0},$.isZeroAtomOrTensor=isZeroAtomOrTensor,$.isnegativenumber=isnegativenumber,$.isplusone=isplusone,$.isminusone=isminusone,$.isinteger=isinteger,$.isnonnegativeinteger=isnonnegativeinteger,$.isposint=isposint,$.isnegativeterm=isnegativeterm,$.isimaginarynumber=isimaginarynumber,$.iscomplexnumber=iscomplexnumber,$.iseveninteger=iseveninteger,$.isnegative=isnegative,$.issymbolic=issymbolic,$.isintegerfactor=isintegerfactor,$.isoneover=isoneover,$.isfraction=isfraction,$.isoneoversqrttwo=isoneoversqrttwo,$.isminusoneoversqrttwo=isminusoneoversqrttwo,$.isfloating=isfloating,$.isimaginaryunit=isimaginaryunit,$.isquarterturn=isquarterturn,$.isnpi=isnpi,Eval_isprime=function(){return push(cadr(p1)),Eval(),p1=pop(),isnonnegativeinteger(p1)&&mprime(p1.q.a)?push_integer(1):push_integer(0)},Eval_lcm=function(){var r;for(p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),r=[];iscons(p1);)push(car(p1)),Eval(),lcm(),r.push(p1=cdr(p1));return r},lcm=function(){var r;return r=expanding,save(),yylcm(),restore(),expanding=r},yylcm=function(){return expanding=1,p2=pop(),p1=pop(),push(p1),push(p2),gcd(),push(p1),divide(),push(p2),divide(),inverse()},Eval_leading=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),(p1=pop())===symbol(NIL)?guess():push(p1),leading()},leading=function(){return save(),p2=pop(),p1=pop(),push(p1),push(p2),degree(),p3=pop(),push(p1),push(p2),push(p3),power(),divide(),push(p2),filter(),restore()},list=function(r){var e,t,o;for(0,push(symbol(NIL)),o=[],e=0,t=r;0<=t?e<t:e>t;0<=t?++e:--e)o.push(cons());return o},Eval_log=function(){return push(cadr(p1)),Eval(),logarithm()},logarithm=function(){return save(),yylog(),restore()},yylog=function(){var r;if(r=0,(p1=pop())!==symbol(E))if(equaln(p1,1))push_integer(0);else{if(isnegativenumber(p1))return push(p1),negate(),logarithm(),push(imaginaryunit),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),multiply(),void add();if(isdouble(p1))return r=Math.log(p1.d),void push_double(r);if(isfraction(p1))return push(p1),numerator(),logarithm(),push(p1),denominator(),logarithm(),void subtract();if(car(p1)===symbol(POWER))return push(caddr(p1)),push(cadr(p1)),logarithm(),void multiply();if(car(p1)!==symbol(MULTIPLY))return push_symbol(LOG),push(p1),list(2);for(push_integer(0),p1=cdr(p1);iscons(p1);)push(car(p1)),logarithm(),add(),p1=cdr(p1)}else push_integer(1)},Eval_lookup=function(){return p1=cadr(p1),iscons(p1)||cadr(p1).k!==SYM||(p1=get_binding(p1)),push(p1)},madd=function(r,e){return r.add(e)},msub=function(r,e){return r.subtract(e)},addf=function(r,e){return r.add(e)},subf=function(r,e){return r.subtract(e)},ucmp=function(r,e){return r.compareAbs(e)},mgcd=function(r,e){return bigInt.gcd(r,e)},new_string=function(r){return save(),(p1=new U).k=STR,p1.str=r,push(p1),restore()},out_of_memory=function(){return stop("out of memory")},push_zero_matrix=function(r,e){return push(alloc_tensor(r*e)),stack[tos-1].tensor.ndim=2,stack[tos-1].tensor.dim[0]=r,stack[tos-1].tensor.dim[1]=e},push_identity_matrix=function(r){var e,t,o;for(push_zero_matrix(r,r),e=0,e=t=0,o=r;0<=o?t<o:t>o;e=0<=o?++t:--t)stack[tos-1].tensor.elem[e*r+e]=one;return check_tensor_dimensions(stack[tos-1])},push_cars=function(r){var e;for(e=[];iscons(r);)push(car(r)),e.push(r=cdr(r));return e},peek=function(){return save(),p1=pop(),push(p1),restore()},equal=function(r,e){return 0===cmp_expr(r,e)?1:0},lessp=function(r,e){return cmp_expr(r,e)<0?1:0},sign=function(r){return r<0?-1:r>0?1:0},cmp_expr=function(r,e){var t;if(t=0,r===e)return 0;if(r===symbol(NIL))return-1;if(e===symbol(NIL))return 1;if(isNumericAtom(r)&&isNumericAtom(e))return sign(compare_numbers(r,e));if(isNumericAtom(r))return-1;if(isNumericAtom(e))return 1;if(isstr(r)&&isstr(e))return sign(strcmp(r.str,e.str));if(isstr(r))return-1;if(isstr(e))return 1;if(issymbol(r)&&issymbol(e))return sign(strcmp(get_printname(r),get_printname(e)));if(issymbol(r))return-1;if(issymbol(e))return 1;if(istensor(r)&&istensor(e))return compare_tensors(r,e);if(istensor(r))return-1;if(istensor(e))return 1;for(;iscons(r)&&iscons(e);){if(0!==(t=cmp_expr(car(r),car(e))))return t;r=cdr(r),e=cdr(e)}return iscons(e)?-1:iscons(r)?1:0},length=function(r){var e;for(e=0;iscons(r);)r=cdr(r),e++;return e},unique=function(r){return save(),p1=symbol(NIL),p2=symbol(NIL),unique_f(r),p2!==symbol(NIL)&&(p1=symbol(NIL)),r=p1,restore(),r},unique_f=function(r){if(isstr(r))p1===symbol(NIL)?p1=r:r!==p1&&(p2=r);else for(;iscons(r);){if(unique_f(car(r)),p2!==symbol(NIL))return;r=cdr(r)}},ssqrt=function(){return push_rational(1,2),power()},yyexpand=function(){var r;return r=expanding,expanding=1,Eval(),expanding=r},exponential=function(){return push_symbol(E),swap(),power()},square=function(){return push_integer(2),power()},sort_stack=function(r){var e,t;return e=tos-r,(t=stack.slice(e,e+r)).sort(cmp_expr),stack=stack.slice(0,e).concat(t).concat(stack.slice(e+r))},$.equal=equal,$.length=length,mmul=function(r,e){return r.multiply(e)},mdiv=function(r,e){return r.divide(e)},mmod=function(r,e){return r.mod(e)},mdivrem=function(r,e){var t;return[(t=r.divmod(e)).quotient,t.remainder]},Eval_mod=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),mod()},mod=function(){var r;return r=0,save(),p2=pop(),p1=pop(),isZeroAtomOrTensor(p2)&&stop("mod function: divide by zero"),isNumericAtom(p1)&&isNumericAtom(p2)?(isdouble(p1)&&(push(p1),r=pop_integer(),isNaN(r)&&stop("mod function: cannot convert float value to integer"),push_integer(r),p1=pop()),isdouble(p2)&&(push(p2),r=pop_integer(),isNaN(r)&&stop("mod function: cannot convert float value to integer"),push_integer(r),p2=pop()),isinteger(p1)&&isinteger(p2)||stop("mod function: integer arguments expected"),(p3=new U).k=NUM,p3.q.a=mmod(p1.q.a,p2.q.a),p3.q.b=mint(1),push(p3),restore()):(push_symbol(MOD),push(p1),push(p2),list(3),void restore())},mpow=function(r,e){return r.pow(e)},mprime=function(r){return r.isProbablePrime()},mroot=function(r,e){var t,o,n,s,p,i,a;for(r=r.abs(),t=0,0,n=0,0===e&&stop("root index is zero"),n=0;r.shiftRight(n)>0;)n++;if(0===n)return mint(0);for(n=Math.floor((n-1)/e),o=Math.floor(n/32+1),i=bigInt(o),t=s=0,p=o;0<=p?s<p:s>p;t=0<=p?++s:--s)i=i.and(bigInt(1).shiftLeft(t).not());for(;n>=0;){switch(i=i.or(bigInt(1).shiftLeft(n)),a=mpow(i,e),mcmp(a,r)){case 0:return i;case 1:i=i.and(bigInt(1).shiftLeft(n).not())}n--}return 0},Eval_multiply=function(){var r;for(push(cadr(p1)),Eval(),p1=cddr(p1),r=[];iscons(p1);)push(car(p1)),Eval(),multiply(),r.push(p1=cdr(p1));return r},multiply=function(){return esc_flag&&stop("escape key stop"),isNumericAtom(stack[tos-2])&&isNumericAtom(stack[tos-1])?multiply_numbers():(save(),yymultiply(),restore())},yymultiply=function(){var r,e,t,o,n,s;if(0,e=0,0,p2=pop(),p1=pop(),r=tos,isZeroAtomOrTensor(p1)||isZeroAtomOrTensor(p2))evaluatingAsFloats?push_double(0):push(zero);else if(expanding&&isadd(p1))for(p1=cdr(p1),evaluatingAsFloats?push_double(0):push(zero);iscons(p1);)push(car(p1)),push(p2),multiply(),add(),p1=cdr(p1);else if(expanding&&isadd(p2))for(p2=cdr(p2),evaluatingAsFloats?push_double(0):push(zero);iscons(p2);)push(p1),push(car(p2)),multiply(),add(),p2=cdr(p2);else{if(!istensor(p1)&&istensor(p2))return push(p1),push(p2),void scalar_times_tensor();if(istensor(p1)&&!istensor(p2))return push(p1),push(p2),void tensor_times_scalar();for(car(p1)===symbol(MULTIPLY)?p1=cdr(p1):(push(p1),list(1),p1=pop()),car(p2)===symbol(MULTIPLY)?p2=cdr(p2):(push(p2),list(1),p2=pop()),isNumericAtom(car(p1))&&isNumericAtom(car(p2))?(push(car(p1)),push(car(p2)),multiply_numbers(),p1=cdr(p1),p2=cdr(p2)):isNumericAtom(car(p1))?(push(car(p1)),p1=cdr(p1)):isNumericAtom(car(p2))?(push(car(p2)),p2=cdr(p2)):evaluatingAsFloats?push_double(1):push(one),parse_p1(),parse_p2();iscons(p1)&&iscons(p2);)if(caar(p1)!==symbol(OPERATOR)||caar(p2)!==symbol(OPERATOR))switch(cmp_expr(p3,p4)){case-1:push(car(p1)),p1=cdr(p1),parse_p1();break;case 1:push(car(p2)),p2=cdr(p2),parse_p2();break;case 0:combine_factors(r),p1=cdr(p1),p2=cdr(p2),parse_p1(),parse_p2();break;default:stop("internal error 2")}else push_symbol(OPERATOR),push(cdar(p1)),push(cdar(p2)),append(),cons(),p1=cdr(p1),p2=cdr(p2),parse_p1(),parse_p2();for(;iscons(p1);)push(car(p1)),p1=cdr(p1);for(;iscons(p2);)push(car(p2)),p2=cdr(p2);if(__normalize_radical_factors(r),expanding)for(e=o=n=r,s=tos;n<=s?o<s:o>s;e=n<=s?++o:--o)if(isadd(stack[e]))return void multiply_all(tos-r);if(1!==(t=tos-r)){if(!isrational(stack[r])||!equaln(stack[r],1))return list(t),p7=pop(),push_symbol(MULTIPLY),push(p7),cons();2===t?(p7=pop(),pop(),push(p7)):(stack[r]=symbol(MULTIPLY),list(t))}}},parse_p1=function(){if(p3=car(p1),p5=evaluatingAsFloats?one_as_double:one,car(p3)===symbol(POWER))return p5=caddr(p3),p3=cadr(p3)},parse_p2=function(){if(p4=car(p2),p6=evaluatingAsFloats?one_as_double:one,car(p4)===symbol(POWER))return p6=caddr(p4),p4=cadr(p4)},combine_factors=function(r){return push(p4),push(p5),push(p6),add(),power(),p7=pop(),isNumericAtom(p7)?(push(stack[r]),push(p7),multiply_numbers(),stack[r]=pop()):car(p7)===symbol(MULTIPLY)&&isNumericAtom(cadr(p7))&&cdddr(p7)===symbol(NIL)?(push(stack[r]),push(cadr(p7)),multiply_numbers(),stack[r]=pop(),push(caddr(p7))):push(p7)},gp=[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,-6,-7,-8,-3,-4,-5,13,14,15,-16,9,10,11,-12],[0,0,6,-1,-11,10,-2,-15,14,12,-5,4,-9,16,-8,7,-13],[0,0,7,11,-1,-9,15,-2,-13,5,12,-3,-10,8,16,-6,-14],[0,0,8,-10,9,-1,-14,13,-2,-4,3,12,-11,-7,6,16,-15],[0,0,3,2,15,-14,1,11,-10,16,-8,7,13,12,-5,4,9],[0,0,4,-15,2,13,-11,1,9,8,16,-6,14,5,12,-3,10],[0,0,5,14,-13,2,10,-9,1,-7,6,16,15,-4,3,12,11],[0,0,13,12,-5,4,16,-8,7,-1,-11,10,-3,-2,-15,14,-6],[0,0,14,5,12,-3,8,16,-6,11,-1,-9,-4,15,-2,-13,-7],[0,0,15,-4,3,12,-7,6,16,-10,9,-1,-5,-14,13,-2,-8],[0,0,16,-9,-10,-11,-13,-14,-15,-3,-4,-5,1,-6,-7,-8,2],[0,0,9,-16,8,-7,-12,5,-4,-2,-15,14,6,-1,-11,10,3],[0,0,10,-8,-16,6,-5,-12,3,15,-2,-13,7,11,-1,-9,4],[0,0,11,7,-6,-16,4,-3,-12,-14,13,-2,8,-10,9,-1,5],[0,0,12,13,14,15,9,10,11,-6,-7,-8,-2,-3,-4,-5,-1]],combine_gammas=function(r){var e;if((e=gp[Math.floor(p1.gamma)][Math.floor(p2.gamma)])<0&&(e=-e,push(stack[r]),negate(),stack[r]=pop()),e>1)return push(_gamma[e])},multiply_noexpand=function(){var r;return r=expanding,expanding=0,multiply(),expanding=r},multiply_all=function(r){var e,t,o,n;if(t=0,1!==r){if(0!==r){for(push(stack[e=tos-r]),t=o=1,n=r;1<=n?o<n:o>n;t=1<=n?++o:--o)push(stack[e+t]),multiply();return stack[e]=pop(),moveTos(e+1)}push(evaluatingAsFloats?one_as_double:one)}},multiply_all_noexpand=function(r){var e;return e=expanding,expanding=0,multiply_all(r),expanding=e},divide=function(){return isNumericAtom(stack[tos-2])&&isNumericAtom(stack[tos-1])?divide_numbers():(inverse(),multiply())},inverse=function(){return isNumericAtom(stack[tos-1])?invert_number():(push_integer(-1),power())},reciprocate=function(){return inverse()},negate=function(){return isNumericAtom(stack[tos-1])?negate_number():(evaluatingAsFloats?push_double(-1):push_integer(-1),multiply())},negate_expand=function(){var r;return r=expanding,expanding=1,negate(),expanding=r},negate_noexpand=function(){var r;return r=expanding,expanding=0,negate(),expanding=r},__normalize_radical_factors=function(r){var e,t,o,n,s,p,i,a,l,u;if(o=0,!(isplusone(stack[r])||isminusone(stack[r])||isdouble(stack[r]))){for(o=n=s=r+1,p=tos;(s<=p?n<p:n>p)&&!__is_radical_number(stack[o]);o=s<=p?++n:--n);if(o!==tos){for(save(),push(stack[r]),mp_numerator(),p1=pop(),o=e=i=r+1,a=tos;(i<=a?e<a:e>a)&&(!isplusone(p1)&&!isminusone(p1));o=i<=a?++e:--e)__is_radical_number(stack[o])&&(p3=cadr(stack[o]),p4=caddr(stack[o]),isnegativenumber(p4)&&(push(p1),push(p3),divide(),p5=pop(),isinteger(p5)&&(p1=p5,push_symbol(POWER),push(p3),push(evaluatingAsFloats?one_as_double:one),push(p4),add(),list(3),stack[o]=pop())));for(push(stack[r]),mp_denominator(),p2=pop(),o=t=l=r+1,u=tos;(l<=u?t<u:t>u)&&!isplusone(p2);o=l<=u?++t:--t)if(__is_radical_number(stack[o])&&(p3=cadr(stack[o]),p4=caddr(stack[o]),!isnegativenumber(p4)&&(push(p2),push(p3),divide(),p5=pop(),isinteger(p5)))){if(p2=p5,push_symbol(POWER),push(p3),push(p4),push(one),subtract(),dontCreateNewRadicalsInDenominatorWhenEvalingMultiplication&&isinteger(p3)&&!isinteger(stack[tos-1])&&isnegativenumber(stack[tos-1])){pop(),pop(),pop(),push(p1),push(p3),divide(),p1=pop();break}list(3),stack[o]=pop()}return push(p1),push(p2),divide(),stack[r]=pop(),restore()}}},__is_radical_number=function(r){return car(r)===symbol(POWER)&&isNumericAtom(cadr(r))&&isNumericAtom(caddr(r))&&!isminusone(cadr(r))?1:0},Eval_denominator=function(){return push(cadr(p1)),Eval(),denominator()},denominator=function(){var r,e;if(r=0,e=pop(),car(e)===symbol(ADD)&&(push(e),rationalize(),e=pop()),car(e)!==symbol(MULTIPLY)||isplusone(car(cdr(e))))return isrational(e)?(push(e),mp_denominator()):car(e)===symbol(POWER)&&isnegativeterm(caddr(e))?(push(e),reciprocate()):push(one);for(r=tos,e=cdr(e);iscons(e);)push(car(e)),denominator(),e=cdr(e);return multiply_all(tos-r)},Eval_numerator=function(){return push(cadr(p1)),Eval(),numerator()},numerator=function(){var r,e;if(r=0,e=pop(),car(e)===symbol(ADD)&&(push(e),rationalize(),e=pop()),car(e)!==symbol(MULTIPLY)||isplusone(car(cdr(e))))return isrational(e)?(push(e),mp_numerator()):car(e)===symbol(POWER)&&isnegativeterm(caddr(e))?push(one):push(e);for(r=tos,e=cdr(e);iscons(e);)push(car(e)),numerator(),e=cdr(e);return multiply_all(tos-r)},partition=function(){for(save(),p2=pop(),p1=pop(),push_integer(1),p3=pop(),p4=p3,p1=cdr(p1);iscons(p1);)Find(car(p1),p2)?(push(p4),push(car(p1)),multiply(),p4=pop()):(push(p3),push(car(p1)),multiply(),p3=pop()),p1=cdr(p1);return push(p3),push(p4),restore()},Eval_silentpattern=function(){return Eval_pattern(),pop(),push_symbol(NIL)},Eval_pattern=function(){var r,e,t,o,n;return iscons(cdr(p1))||stop("pattern needs at least a template and a transformed version"),r=car(cdr(p1)),(t=car(cdr(cdr(p1))))===symbol(NIL)&&stop("pattern needs at least a template and a transformed version"),n=iscons(cdr(cdr(p1)))?car(cdr(cdr(cdr(p1)))):symbol(NIL),equal(r,t)&&stop("recursive pattern"),o="template: "+print_list(r),o+=" tests: "+print_list(n),DEBUG&&console.log("pattern stringkey: "+o),-1===(e=userSimplificationsInStringForm.indexOf(o))?(userSimplificationsInStringForm.push(o),userSimplificationsInListForm.push(cdr(p1))):(DEBUG&&console.log("pattern already exists, replacing. "+cdr(p1)),userSimplificationsInStringForm[e]=o,userSimplificationsInListForm[e]=cdr(p1)),push_symbol(PATTERN),push(cdr(p1)),list(2)},do_clearPatterns=function(){return userSimplificationsInListForm=[],userSimplificationsInStringForm=[]},Eval_clearpatterns=function(){return do_clearPatterns(),push_symbol(NIL)},Eval_patternsinfo=function(){var r;return""!==(r=patternsinfo())?new_string(r):push_symbol(NIL)},patternsinfo=function(){var r,e,t;for(t="",r=0,e=userSimplificationsInListForm.length;r<e;r++)userSimplificationsInListForm[r],t+=userSimplificationsInListForm+"\n";return t},Eval_polar=function(){return push(cadr(p1)),Eval(),polar()},polar=function(){return evaluatingPolar++,save(),p1=pop(),push(p1),abs(),push(imaginaryunit),push(p1),arg(),multiply(),exponential(),multiply(),evaluatingPolar--,restore()},n_factor_number=0,factor_number=function(){var r;return 0,save(),p1=pop(),equaln(p1,0)||equaln(p1,1)||equaln(p1,-1)?(push(p1),void restore()):(n_factor_number=p1.q.a,r=tos,factor_a(),tos-r>1&&(list(tos-r),push_symbol(MULTIPLY),swap(),cons()),restore())},factor_a=function(){var r,e;for(e=0,n_factor_number.isNegative()&&(n_factor_number=setSignTo(n_factor_number,1),push_integer(-1)),e=r=0;r<1e4;e=++r)if(try_kth_prime(e),0===n_factor_number.compare(1))return;return factor_b()},try_kth_prime=function(r){var e,t,o,n;for(e=0,t=mint(primetab[r]),e=0;;){if(0===n_factor_number.compare(1))return void(e&&push_factor(t,e));if(o=(n=mdivrem(n_factor_number,t))[0],!n[1].isZero())break;e++,n_factor_number=o}if(e&&push_factor(t,e),-1===mcmp(o,t))return push_factor(n_factor_number,1),n_factor_number=mint(1)},factor_b=function(){var r,e,t,o,n,s,p;for(t=0,o=0,r=mint(1),s=mint(5),p=mint(2),t=1,o=1;;){if(mprime(n_factor_number))return push_factor(n_factor_number,1),0;for(;;){if(esc_flag&&stop("esc"),n=msub(p,s),n=setSignTo(n,1),e=mgcd(n,n_factor_number),!MEQUAL(e,1)){if(push_factor(e,1),0===mcmp(e,n_factor_number))return-1;n=mdiv(n_factor_number,e),s=n=mmod(s,n_factor_number=n),p=n=mmod(p,n_factor_number);break}0==--t&&(p=s,t=o*=2),n=mmul(s,s),s=madd(n,r),s=n=mmod(s,n_factor_number)}}},push_factor=function(r,e){if((p1=new U).k=NUM,p1.q.a=r,p1.q.b=mint(1),push(p1),e>1)return push_symbol(POWER),swap(),(p1=new U).k=NUM,p1.q.a=mint(e),p1.q.b=mint(1),push(p1),list(3)},DEBUG_POWER=!1,Eval_power=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),power()},power=function(){return save(),yypower(),restore()},yypower=function(){var r,e,t,o,n,s,p;if(p=0,p2=pop(),p1=pop(),o=p2,t=p1,DEBUG_POWER&&console.log("POWER: "+p1+" ^ "+p2),equal(p1,one)||isZeroAtomOrTensor(p2))return evaluatingAsFloats?push_double(1):push(one),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(equal(p2,one))return push(p1),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(isminusone(p1)&&isminusone(p2))return evaluatingAsFloats?push_double(1):push(one),negate(),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(isminusone(p1)&&isoneovertwo(p2))return push(imaginaryunit),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(isminusone(p1)&&isminusoneovertwo(p2))return push(imaginaryunit),negate(),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(isminusone(p1)&&!isdouble(p1)&&isrational(p2)&&!isinteger(p2)&&ispositivenumber(p2)&&!evaluatingAsFloats)return DEBUG_POWER&&console.log("   power: -1 ^ rational"),DEBUG_POWER&&console.log(" trick: p2.q.a , p2.q.b "+p2.q.a+" , "+p2.q.b),p2.q.a<p2.q.b?(push_symbol(POWER),push(p1),push(p2),list(3)):(push_symbol(MULTIPLY),push(p1),push_symbol(POWER),push(p1),push_rational(p2.q.a.mod(p2.q.b),p2.q.b),list(3),list(3),DEBUG_POWER&&console.log(" trick applied : "+stack[tos-1])),rect(),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(isrational(p1)&&isrational(p2))return DEBUG_POWER&&console.log("   power: isrational(p1) && isrational(p2)"),push(p1),push(p2),qpow(),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(isNumericAtom(p1)&&isNumericAtom(p2))return DEBUG_POWER&&console.log("   power: both base and exponent are either rational or double "),DEBUG_POWER&&console.log("POWER - isNumericAtom(p1) && isNumericAtom(p2)"),push(p1),push(p2),dpow(),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(istensor(p1))return DEBUG_POWER&&console.log("   power: istensor(p1) "),power_tensor(),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(car(p1)===symbol(ABS)&&iseveninteger(p2)&&!isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES))))return DEBUG_POWER&&console.log("   power: even power of absolute of real value "),push(cadr(p1)),push(p2),power(),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(p1===symbol(E)&&car(p2)===symbol(LOG))return push(cadr(p2)),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(p1===symbol(E)&&isdouble(p2))return DEBUG_POWER&&console.log("   power: p1 == symbol(E) && isdouble(p2) "),push_double(Math.exp(p2.d)),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(p1===symbol(E)&&0!==Find(p2,imaginaryunit)&&0!==Find(p2,symbol(PI))&&!evaluatingPolar&&(push_symbol(POWER),push(p1),push(p2),list(3),DEBUG_POWER&&console.log("   power: turning complex exponential to rect: "+stack[tos-1]),rect(),e=pop(),0===Find(e,symbol(PI))))return DEBUG_POWER&&console.log("   power: turned complex exponential to rect: "+e),void push(e);if(car(p1)===symbol(MULTIPLY)&&isinteger(p2)){for(DEBUG_POWER&&console.log("   power: (a * b) ^ c\t->\t(a ^ c) * (b ^ c) "),p1=cdr(p1),push(car(p1)),push(p2),power(),p1=cdr(p1);iscons(p1);)push(car(p1)),push(p2),power(),multiply(),p1=cdr(p1);DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1])}else{if(s=!1,isNumericAtom(cadr(p1))&&(s=sign(compare_numbers(cadr(p1),zero))),car(p1)===symbol(POWER)&&(isinteger(p2)||s))return push(cadr(p1)),push(caddr(p1)),push(p2),multiply(),power(),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(r=!1,iseveninteger(caddr(p1))&&(push(caddr(p1)),push(p2),multiply(),n=pop(),isone(n)&&(r=!0)),car(p1)===symbol(POWER)&&r)return DEBUG_POWER&&console.log("   power: car(p1) == symbol(POWER) && b_isEven_and_c_isItsInverse "),push(cadr(p1)),abs(),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(expanding&&isadd(p1)&&isNumericAtom(p2)&&(push(p2),(p=pop_integer())>1&&!isNaN(p)))return DEBUG_POWER&&console.log("   power: expanding && isadd(p1) && isNumericAtom(p2) "),power_sum(p),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(1===trigmode&&car(p1)===symbol(SIN)&&iseveninteger(p2))return DEBUG_POWER&&console.log("   power: trigmode == 1 && car(p1) == symbol(SIN) && iseveninteger(p2) "),push_integer(1),push(cadr(p1)),cosine(),push_integer(2),power(),subtract(),push(p2),push_rational(1,2),multiply(),power(),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(2===trigmode&&car(p1)===symbol(COS)&&iseveninteger(p2))return DEBUG_POWER&&console.log("   power: trigmode == 2 && car(p1) == symbol(COS) && iseveninteger(p2) "),push_integer(1),push(cadr(p1)),sine(),push_integer(2),power(),subtract(),push(p2),push_rational(1,2),multiply(),power(),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(iscomplexnumber(p1)){if(DEBUG_POWER&&console.log(" power - handling the case (a + ib) ^ n"),isinteger(p2))return push(p1),conjugate(),p3=pop(),push(p3),push(p3),push(p1),multiply(),divide(),isone(p2)||(push(p2),negate(),power()),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]));if(isNumericAtom(p2))return push(p1),abs(),push(p2),power(),push_integer(-1),push(p1),arg(),push(p2),multiply(),evaluatingAsFloats||iscomplexnumberdouble(p1)&&isdouble(p2)?push_double(Math.PI):push(symbol(PI)),divide(),power(),multiply(),avoidCalculatingPowersIntoArctans&&Find(stack[tos-1],symbol(ARCTAN))&&(pop(),push_symbol(POWER),push(p1),push(p2),list(3)),void(DEBUG_POWER&&console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]))}if(!simplify_polar())return DEBUG_POWER&&console.log("   power: nothing can be done "),push_symbol(POWER),push(p1),push(p2),list(3),DEBUG_POWER?console.log("   power of "+t+" ^ "+o+": "+stack[tos-1]):void 0;DEBUG_POWER&&console.log("   power: using simplify_polar")}},power_sum=function(r){var e,t,o,n,s,p,i,a,l,u;for(e=[],s=0,p=0,0,i=length(p1)-1,push_frame(i*(r+1)),p1=cdr(p1),s=t=0,a=i;0<=a?t<a:t>a;s=0<=a?++t:--t){for(p=o=0,l=r;0<=l?o<=l:o>=l;p=0<=l?++o:--o)push(car(p1)),push_integer(p),power(),stack[frame+s*(r+1)+p]=pop();p1=cdr(p1)}for(push_integer(r),factorial(),p1=pop(),s=n=0,u=i;0<=u?n<u:n>u;s=0<=u?++n:--n)e[s]=0;return push(zero),multinomial_sum(i,r,e,0,r),pop_frame(i*(r+1))},multinomial_sum=function(r,e,t,o,n){var s,p,i,a,l,u,c;if(a=0,!(o<r-1)){for(t[o]=n,push(p1),a=p=0,u=r;0<=u?p<u:p>u;a=0<=u?++p:--p)push_integer(t[a]),factorial(),divide();for(a=i=0,c=r;0<=c?i<c:i>c;a=0<=c?++i:--i)push(stack[frame+a*(e+1)+t[a]]),multiply();return add()}for(a=s=0,l=n;0<=l?s<=l:s>=l;a=0<=l?++s:--s)t[o]=a,multinomial_sum(r,e,t,o+1,n-a)},simplify_polar=function(){var r;switch(r=0,r=isquarterturn(p2)){case 0:1;break;case 1:return push_integer(1),1;case 2:return push_integer(-1),1;case 3:return push(imaginaryunit),1;case 4:return push(imaginaryunit),negate(),1}if(car(p2)===symbol(ADD)){for(p3=cdr(p2);iscons(p3)&&!(r=isquarterturn(car(p3)));)p3=cdr(p3);switch(r){case 0:return 0;case 1:push_integer(1);break;case 2:push_integer(-1);break;case 3:push(imaginaryunit);break;case 4:push(imaginaryunit),negate()}return push(p2),push(car(p3)),subtract(),exponential(),multiply(),1}return 0},Eval_prime=function(){return push(cadr(p1)),Eval(),prime()},prime=function(){var r;return r=0,((r=pop_integer())<1||r>MAXPRIMETAB)&&stop("prime: Argument out of range."),r=primetab[r-1],push_integer(r)},power_str="^",codeGen=!1,Eval_print=function(){return stringsEmittedByUserPrintouts+=_print(cdr(p1),printMode),push(symbol(NIL))},Eval_print2dascii=function(){return stringsEmittedByUserPrintouts+=_print(cdr(p1),PRINTMODE_2DASCII),push(symbol(NIL))},Eval_printcomputer=function(){return stringsEmittedByUserPrintouts+=_print(cdr(p1),PRINTMODE_COMPUTER),push(symbol(NIL))},Eval_printlatex=function(){return stringsEmittedByUserPrintouts+=_print(cdr(p1),PRINTMODE_LATEX),push(symbol(NIL))},Eval_printhuman=function(){var r;return r=test_flag,test_flag=0,stringsEmittedByUserPrintouts+=_print(cdr(p1),PRINTMODE_HUMAN),test_flag=r,push(symbol(NIL))},Eval_printlist=function(){var r;return r=_print(cdr(p1),PRINTMODE_LIST),stringsEmittedByUserPrintouts+=r,push(symbol(NIL))},_print=function(r,e){var t,o;for(t="";iscons(r);)push(car(r)),Eval(),p2=pop(),o=printMode,e===PRINTMODE_COMPUTER?(printMode=PRINTMODE_COMPUTER,t=printline(p2),rememberPrint(t,LAST_FULL_PRINT)):e===PRINTMODE_HUMAN?(printMode=PRINTMODE_HUMAN,t=printline(p2),rememberPrint(t,LAST_PLAIN_PRINT)):e===PRINTMODE_2DASCII?(printMode=PRINTMODE_2DASCII,t=print2dascii(p2),rememberPrint(t,LAST_2DASCII_PRINT)):e===PRINTMODE_LATEX?(printMode=PRINTMODE_LATEX,t=printline(p2),rememberPrint(t,LAST_LATEX_PRINT)):e===PRINTMODE_LIST&&(printMode=PRINTMODE_LIST,t=print_list(p2),rememberPrint(t,LAST_LIST_PRINT)),printMode=o,r=cdr(r);return DEBUG&&console.log("emttedString from display: "+stringsEmittedByUserPrintouts),t},rememberPrint=function(r,e){var t;return scan('"'+r+'"'),t=pop(),set_binding(symbol(e),t)},print_str=function(r){return DEBUG&&console.log("emttedString from print_str: "+stringsEmittedByUserPrintouts),r},print_char=function(r){return r},collectLatexStringFromReturnValue=function(r){var e,t,o;return e=printMode,printMode=PRINTMODE_LATEX,t=codeGen,codeGen=!1,o=(o=print_expr(r)).replace(/_/g,"\\_"),printMode=e,codeGen=t,DEBUG&&console.log("emttedString from collectLatexStringFromReturnValue: "+stringsEmittedByUserPrintouts),o},printline=function(r){var e;return e="",e+=print_expr(r)},print_base_of_denom=function(r){var e;return e="",isfraction(r)||car(r)===symbol(ADD)||car(r)===symbol(MULTIPLY)||car(r)===symbol(POWER)||lessp(r,zero)?(e+=print_char("("),e+=print_expr(r),e+=print_char(")")):e+=print_expr(r),e},print_expo_of_denom=function(r){var e;return e="",isfraction(r)||car(r)===symbol(ADD)||car(r)===symbol(MULTIPLY)||car(r)===symbol(POWER)?(e+=print_char("("),e+=print_expr(r),e+=print_char(")")):e+=print_expr(r),e},print_denom=function(r,e){var t;return t="",save(),p1=cadr(r),p2=caddr(r),isminusone(p2)?(t+=print_base_of_denom(p1),restore(),t):(1===e&&(t+=print_char("(")),push(p2),negate(),p2=pop(),t+=print_power(p1,p2),1===e&&(t+=print_char(")")),restore(),t)},print_a_over_b=function(r){var e,t,o;for(e="",flag=0,o=0,t=0,save(),o=0,t=0,p1=cdr(r),p2=car(p1),isrational(p2)?(push(p2),mp_numerator(),absval(),p3=pop(),push(p2),mp_denominator(),p4=pop(),isplusone(p3)||o++,isplusone(p4)||t++,p1=cdr(p1)):(p3=one,p4=one);iscons(p1);)p2=car(p1),is_denominator(p2)?t++:o++,p1=cdr(p1);if(printMode===PRINTMODE_LATEX&&(e+=print_str("\\frac{")),0===o)e+=print_char("1");else for(flag=0,p1=cdr(r),isrational(car(p1))&&(p1=cdr(p1)),isplusone(p3)||(e+=print_factor(p3),flag=1);iscons(p1);)p2=car(p1),is_denominator(p2)?1:(flag&&(e+=print_multiply_sign()),e+=print_factor(p2),flag=1),p1=cdr(p1);for(e+=print_str(printMode===PRINTMODE_LATEX?"}{":printMode!==PRINTMODE_HUMAN||test_flag?"/":" / "),t>1&&printMode!==PRINTMODE_LATEX&&(e+=print_char("(")),flag=0,p1=cdr(r),isrational(car(p1))&&(p1=cdr(p1)),isplusone(p4)||(e+=print_factor(p4),flag=1);iscons(p1);)p2=car(p1),is_denominator(p2)&&(flag&&(e+=print_multiply_sign()),e+=print_denom(p2,t),flag=1),p1=cdr(p1);return t>1&&printMode!==PRINTMODE_LATEX&&(e+=print_char(")")),printMode===PRINTMODE_LATEX&&(e+=print_str("}")),restore(),e},print_expr=function(r){var e;if(e="",isadd(r))for(r=cdr(r),"-"===sign_of_term(car(r))&&(e+=print_str("-")),e+=print_term(car(r)),r=cdr(r);iscons(r);)"+"===sign_of_term(car(r))?e+=print_str(printMode!==PRINTMODE_HUMAN||test_flag?"+":" + "):e+=print_str(printMode!==PRINTMODE_HUMAN||test_flag?"-":" - "),e+=print_term(car(r)),r=cdr(r);else"-"===sign_of_term(r)&&(e+=print_str("-")),e+=print_term(r);return e},sign_of_term=function(r){var e;return e="",car(r)===symbol(MULTIPLY)&&isNumericAtom(cadr(r))&&lessp(cadr(r),zero)?e+="-":isNumericAtom(r)&&lessp(r,zero)?e+="-":e+="+",e},print_term=function(r){var e,t,o,n,s;if(e="",car(r)===symbol(MULTIPLY)&&any_denominators(r))return e+=print_a_over_b(r);if(car(r)===symbol(MULTIPLY)){for(r=cdr(r),isminusone(car(r))&&(r=cdr(r)),s=!1,isNumericAtom(car(r))&&(s=!0),o=!1,printMode===PRINTMODE_LATEX&&iscons(cdr(r))&&isNumberOneOverSomething(car(r))&&(o=!0,t=car(r).q.b.toString()),o?(n=e,e=""):e+=print_factor(car(r)),r=cdr(r);iscons(r);)printMode===PRINTMODE_LATEX&&s&&caar(r)===symbol(POWER)&&isNumericAtom(car(cdr(car(r))))&&(isfraction(car(cdr(cdr(car(r)))))||(e+=" \\cdot ")),e+=print_multiply_sign(),e+=print_factor(car(r)),s=!1,isNumericAtom(car(r))&&(s=!0),r=cdr(r);o&&(e=n+"\\frac{"+e+"}{"+t+"}")}else e+=print_factor(r);return e},print_subexpr=function(r){var e;return e="",e+=print_char("("),e+=print_expr(r),e+=print_char(")")},print_factorial_function=function(r){var e;return e="",r=cadr(r),car(r)===symbol(ADD)||car(r)===symbol(MULTIPLY)||car(r)===symbol(POWER)||car(r)===symbol(FACTORIAL)?e+=print_subexpr(r):e+=print_expr(r),e+=print_char("!")},print_ABS_latex=function(r){var e;return e="",e+=print_str("\\left |"),e+=print_expr(cadr(r)),e+=print_str(" \\right |")},print_BINOMIAL_latex=function(r){var e;return e="",e+=print_str("\\binom{"),e+=print_expr(cadr(r)),e+=print_str("}{"),e+=print_expr(caddr(r)),e+=print_str("} ")},print_DOT_latex=function(r){var e;return e="",e+=print_expr(cadr(r)),e+=print_str(" \\cdot "),e+=print_expr(caddr(r))},print_DOT_codegen=function(r){var e;return e="dot(",e+=print_expr(cadr(r)),e+=", ",e+=print_expr(caddr(r)),e+=")"},print_SIN_codegen=function(r){var e;return e="Math.sin(",e+=print_expr(cadr(r)),e+=")"},print_COS_codegen=function(r){var e;return e="Math.cos(",e+=print_expr(cadr(r)),e+=")"},print_TAN_codegen=function(r){var e;return e="Math.tan(",e+=print_expr(cadr(r)),e+=")"},print_ARCSIN_codegen=function(r){var e;return e="Math.asin(",e+=print_expr(cadr(r)),e+=")"},print_ARCCOS_codegen=function(r){var e;return e="Math.acos(",e+=print_expr(cadr(r)),e+=")"},print_ARCTAN_codegen=function(r){var e;return e="Math.atan(",e+=print_expr(cadr(r)),e+=")"},print_SQRT_latex=function(r){var e;return e="",e+=print_str("\\sqrt{"),e+=print_expr(cadr(r)),e+=print_str("} ")},print_TRANSPOSE_latex=function(r){var e;return e="",e+=print_str("{"),iscons(cadr(r))&&(e+=print_str("(")),e+=print_expr(cadr(r)),iscons(cadr(r))&&(e+=print_str(")")),e+=print_str("}"),e+=print_str("^T")},print_TRANSPOSE_codegen=function(r){var e;return e="",e+=print_str("transpose("),e+=print_expr(cadr(r)),e+=print_str(")")},print_UNIT_codegen=function(r){var e;return e="",e+=print_str("identity("),e+=print_expr(cadr(r)),e+=print_str(")")},print_INV_latex=function(r){var e;return e="",e+=print_str("{"),iscons(cadr(r))&&(e+=print_str("(")),e+=print_expr(cadr(r)),iscons(cadr(r))&&(e+=print_str(")")),e+=print_str("}"),e+=print_str("^{-1}")},print_INV_codegen=function(r){var e;return e="",e+=print_str("inv("),e+=print_expr(cadr(r)),e+=print_str(")")},print_DEFINT_latex=function(r){var e,t,o,n,s,p,i,a,l;for(t="",o=car(cdr(r)),p=r=cdr(r),s=0;iscons(cdr(cdr(r)));)s++,a=cdr(cdr(r)),t+=print_str("\\int^{"),t+=print_expr(car(cdr(a))),t+=print_str("}_{"),t+=print_expr(car(a)),t+=print_str("} \\! "),r=cdr(a);for(t+=print_expr(o),t+=print_str(" \\,"),r=p,n=e=1,i=s;1<=i?e<=i:e>=i;n=1<=i?++e:--e)l=cdr(r),t+=print_str(" \\mathrm{d} "),t+=print_expr(car(l)),n<s&&(t+=print_str(" \\, ")),r=cdr(cdr(l));return t},print_tensor=function(r){var e;return e="",e+=print_tensor_inner(r,0,0)[1]},print_tensor_inner=function(r,e,t){var o,n,s,p,i,a,l;if(n="",n+=print_str("["),e<r.tensor.ndim-1)for(p=o=0,i=r.tensor.dim[e];0<=i?o<i:o>i;p=0<=i?++o:--o)t=(a=print_tensor_inner(r,e+1,t))[0],n+=a[1],p!==r.tensor.dim[e]-1&&(n+=print_str(","));else for(p=s=0,l=r.tensor.dim[e];0<=l?s<l:s>l;p=0<=l?++s:--s)n+=print_expr(r.tensor.elem[t]),p!==r.tensor.dim[e]-1&&(n+=print_str(",")),t++;return[t,n+=print_str("]")]},print_tensor_latex=function(r){var e;return e="",r.tensor.ndim<=2&&(e+=print_tensor_inner_latex(!0,r,0,0)[1]),e},print_tensor_inner_latex=function(r,e,t,o){var n,s,p,i,a,l,u;if(s="",r&&(s+="\\begin{bmatrix} "),t<e.tensor.ndim-1)for(i=n=0,a=e.tensor.dim[t];0<=a?n<a:n>a;i=0<=a?++n:--n)o=(l=print_tensor_inner_latex(0,e,t+1,o))[0],s+=l[1],i!==e.tensor.dim[t]-1&&(s+=print_str(" \\\\ "));else for(i=p=0,u=e.tensor.dim[t];0<=u?p<u:p>u;i=0<=u?++p:--p)s+=print_expr(e.tensor.elem[o]),i!==e.tensor.dim[t]-1&&(s+=print_str(" & ")),o++;return r&&(s+=" \\end{bmatrix}"),[o,s]},print_SUM_latex=function(r){var e;return e="\\sum_{",e+=print_expr(caddr(r)),e+="=",e+=print_expr(cadddr(r)),e+="}^{",e+=print_expr(caddddr(r)),e+="}{",e+=print_expr(cadr(r)),e+="}"},print_SUM_codegen=function(r){var e,t,o,n;return e=cadr(r),n=caddr(r),t=cadddr(r),o=caddddr(r),"(function(){ var "+n+";  var holderSum = 0;  var lowerlimit = "+print_expr(t)+";  var upperlimit = "+print_expr(o)+";  for ("+n+" = lowerlimit; "+n+" < upperlimit; "+n+"++) {    holderSum += "+print_expr(e)+"; }  return holderSum;})()"},print_TEST_latex=function(r){var e;for(e="\\left\\{ \\begin{array}{ll}",r=cdr(r);iscons(r);){if(cdr(r)===symbol(NIL)){e+="{",e+=print_expr(car(r)),e+="} & otherwise ",e+=" \\\\\\\\";break}e+="{",e+=print_expr(cadr(r)),e+="} & if & ",e+=print_expr(car(r)),e+=" \\\\\\\\",r=cddr(r)}return(e=e.substring(0,e.length-4))+"\\end{array} \\right."},print_TEST_codegen=function(r){var e,t;for(e="(function(){",r=cdr(r),t=0;iscons(r);){if(cdr(r)===symbol(NIL)){e+="else {",e+="return ("+print_expr(car(r))+");",e+="}";break}t&&(e+=" else "),e+="if ("+print_expr(car(r))+"){",e+="return ("+print_expr(cadr(r))+");",e+="}",t++,r=cddr(r)}return e+="})()"},print_TESTLT_latex=function(r){var e;return e="{",e+=print_expr(cadr(r)),e+="}",e+=" < ",e+="{",(e+=print_expr(caddr(r)))+"}"},print_TESTLE_latex=function(r){var e;return e="{",e+=print_expr(cadr(r)),e+="}",e+=" \\leq ",e+="{",(e+=print_expr(caddr(r)))+"}"},print_TESTGT_latex=function(r){var e;return e="{",e+=print_expr(cadr(r)),e+="}",e+=" > ",e+="{",(e+=print_expr(caddr(r)))+"}"},print_TESTGE_latex=function(r){var e;return e="{",e+=print_expr(cadr(r)),e+="}",e+=" \\geq ",e+="{",(e+=print_expr(caddr(r)))+"}"},print_TESTEQ_latex=function(r){var e;return e="{",e+=print_expr(cadr(r)),e+="}",e+=" = ",e+="{",(e+=print_expr(caddr(r)))+"}"},print_FOR_codegen=function(r){var e,t,o,n;return e=cadr(r),n=caddr(r),t=cadddr(r),o=caddddr(r),"(function(){ var "+n+";  var lowerlimit = "+print_expr(t)+";  var upperlimit = "+print_expr(o)+";  for ("+n+" = lowerlimit; "+n+" < upperlimit; "+n+"++) {    "+print_expr(e)+" } })()"};print_DO_codegen=function(r){var e;for(e="",r=cdr(r);iscons(r);)e+=print_expr(car(r)),r=cdr(r);return e},print_SETQ_codegen=function(r){var e;return e="",e+=print_expr(cadr(r)),e+=" = ",e+=print_expr(caddr(r)),e+="; "},print_PRODUCT_latex=function(r){var e;return e="\\prod_{",e+=print_expr(caddr(r)),e+="=",e+=print_expr(cadddr(r)),e+="}^{",e+=print_expr(caddddr(r)),e+="}{",e+=print_expr(cadr(r)),e+="}"},print_PRODUCT_codegen=function(r){var e,t,o,n;return e=cadr(r),n=caddr(r),t=cadddr(r),o=caddddr(r),"(function(){ var "+n+";  var holderProduct = 1;  var lowerlimit = "+print_expr(t)+";  var upperlimit = "+print_expr(o)+";  for ("+n+" = lowerlimit; "+n+" < upperlimit; "+n+"++) {    holderProduct *= "+print_expr(e)+"; }  return holderProduct;})()"},print_base=function(r){var e;return e="",isadd(cadr(r))||caadr(r)===symbol(MULTIPLY)||caadr(r)===symbol(POWER)||isnegativenumber(cadr(r))?(e+=print_str("("),e+=print_expr(cadr(r)),e+=print_str(")")):isNumericAtom(cadr(r))&&(lessp(cadr(r),zero)||isfraction(cadr(r)))?(e+=print_str("("),e+=print_factor(cadr(r)),e+=print_str(")")):e+=print_factor(cadr(r)),e},print_exponent=function(r){var e;return e="",iscons(caddr(r))||isfraction(caddr(r))||isNumericAtom(caddr(r))&&lessp(caddr(r),zero)?(e+=print_str("("),e+=print_expr(caddr(r)),e+=print_str(")")):e+=print_factor(caddr(r)),e},print_power=function(r,e){var t,o,n,s;if(t="",DEBUG&&console.log("power base: "+r+"  exponent: "+e),isoneovertwo(e))if(equaln(r,2)){if(codeGen)return t+=print_str("Math.SQRT2")}else{if(printMode===PRINTMODE_LATEX)return t+=print_str("\\sqrt{"),t+=print_expr(r),t+=print_str("}");if(codeGen)return t+=print_str("Math.sqrt("),t+=print_expr(r),t+=print_str(")")}if(equaln(get_binding(symbol(PRINT_LEAVE_E_ALONE)),1)&&r===symbol(E))return codeGen?(t+=print_str("Math.exp("),t+=print_expo_of_denom(e),t+=print_str(")")):(printMode===PRINTMODE_LATEX?(t+=print_str("e^{"),t+=print_expr(e),t+=print_str("}")):(t+=print_str("exp("),t+=print_expr(e),t+=print_str(")")),t);if(codeGen)return t+=print_str("Math.pow("),t+=print_base_of_denom(r),t+=print_str(", "),t+=print_expo_of_denom(e),t+=print_str(")");if(equaln(get_binding(symbol(PRINT_LEAVE_X_ALONE)),0)||"x"!==r.printname){if(r!==symbol(E)){if(isminusone(e))return t+=print_str(printMode===PRINTMODE_LATEX?"\\frac{1}{":printMode!==PRINTMODE_HUMAN||test_flag?"1/":"1 / "),iscons(r)&&printMode!==PRINTMODE_LATEX?(t+=print_str("("),t+=print_expr(r),t+=print_str(")")):t+=print_expr(r),printMode===PRINTMODE_LATEX&&(t+=print_str("}")),t;if(isnegativeterm(e))return t+=print_str(printMode===PRINTMODE_LATEX?"\\frac{1}{":printMode!==PRINTMODE_HUMAN||test_flag?"1/":"1 / "),push(e),push_integer(-1),multiply(),n=pop(),iscons(r)&&printMode!==PRINTMODE_LATEX?(t+=print_str("("),t+=print_power(r,n),t+=print_str(")")):t+=print_power(r,n),printMode===PRINTMODE_LATEX&&(t+=print_str("}")),t}if(isfraction(e)&&printMode===PRINTMODE_LATEX)return t+=print_str("\\sqrt"),push(e),denominator(),o=pop(),isplustwo(o)||(t+=print_str("["),t+=print_expr(o),t+=print_str("]")),t+=print_str("{"),push(e),numerator(),s=pop(),t+=print_power(r,e=s),t+=print_str("}")}return printMode===PRINTMODE_LATEX&&isplusone(e)?t+=print_expr(r):(isadd(r)||isnegativenumber(r)?(t+=print_str("("),t+=print_expr(r),t+=print_str(")")):car(r)===symbol(MULTIPLY)||car(r)===symbol(POWER)?(printMode!==PRINTMODE_LATEX&&(t+=print_str("(")),t+=print_factor(r,!0),printMode!==PRINTMODE_LATEX&&(t+=print_str(")"))):isNumericAtom(r)&&(lessp(r,zero)||isfraction(r))?(t+=print_str("("),t+=print_factor(r),t+=print_str(")")):t+=print_factor(r),t+=print_str(printMode!==PRINTMODE_HUMAN||test_flag?"^":power_str),printMode===PRINTMODE_LATEX?print_expr(e).length>1?(t+=print_str("{"),t+=print_expr(e),t+=print_str("}")):t+=print_expr(e):iscons(e)||isfraction(e)||isNumericAtom(e)&&lessp(e,zero)?(t+=print_str("("),t+=print_expr(e),t+=print_str(")")):t+=print_factor(e)),t},print_index_function=function(r){var e;if(e="",r=cdr(r),caar(r)===symbol(ADD)||caar(r)===symbol(MULTIPLY)||caar(r)===symbol(POWER)||caar(r)===symbol(FACTORIAL)?e+=print_subexpr(car(r)):e+=print_expr(car(r)),e+=print_str("["),r=cdr(r),iscons(r))for(e+=print_expr(car(r)),r=cdr(r);iscons(r);)e+=print_str(","),e+=print_expr(car(r)),r=cdr(r);return e+=print_str("]")},print_factor=function(r,e){var t,o,n,s,p;if(t="",isNumericAtom(r))return t+=print_number(r,!1);if(isstr(r))return t+=print_str('"'),t+=print_str(r.str),t+=print_str('"');if(istensor(r))return t+=printMode===PRINTMODE_LATEX?print_tensor_latex(r):print_tensor(r);if(car(r)===symbol(MULTIPLY))return e||"-"!==sign_of_term(r)&&printMode===PRINTMODE_LATEX||(t+=print_str(printMode===PRINTMODE_LATEX?" \\left (":"(")),t+=print_expr(r),e||"-"!==sign_of_term(r)&&printMode===PRINTMODE_LATEX||(t+=print_str(printMode===PRINTMODE_LATEX?" \\right ) ":")")),t;if(isadd(r))return e||(t+=print_str("(")),t+=print_expr(r),e||(t+=print_str(")")),t;if(car(r)===symbol(POWER))return o=cadr(r),n=caddr(r),t+=print_power(o,n);if(car(r)===symbol(FUNCTION))return s=cadr(r),codeGen||(p=caddr(r),t+=print_str("function "),DEBUG&&console.log("emittedString from print_factor "+stringsEmittedByUserPrintouts),t+=print_list(p),t+=print_str(" -> ")),t+=print_expr(s);if(car(r)===symbol(PATTERN))return t+=print_expr(caadr(r)),t+=print_str(printMode===PRINTMODE_LATEX?" \\rightarrow ":printMode!==PRINTMODE_HUMAN||test_flag?"->":" -> "),t+=print_expr(car(cdr(cadr(r))));if(car(r)===symbol(INDEX)&&issymbol(cadr(r)))return t+=print_index_function(r);if(car(r)===symbol(FACTORIAL))return t+=print_factorial_function(r);if(car(r)===symbol(ABS)&&printMode===PRINTMODE_LATEX)return t+=print_ABS_latex(r);if(car(r)===symbol(SQRT)&&printMode===PRINTMODE_LATEX)return t+=print_SQRT_latex(r);if(car(r)===symbol(TRANSPOSE)){if(printMode===PRINTMODE_LATEX)return t+=print_TRANSPOSE_latex(r);if(codeGen)return t+=print_TRANSPOSE_codegen(r)}else if(car(r)===symbol(UNIT)){if(codeGen)return t+=print_UNIT_codegen(r)}else if(car(r)===symbol(INV)){if(printMode===PRINTMODE_LATEX)return t+=print_INV_latex(r);if(codeGen)return t+=print_INV_codegen(r)}else{if(car(r)===symbol(BINOMIAL)&&printMode===PRINTMODE_LATEX)return t+=print_BINOMIAL_latex(r);if(car(r)===symbol(DEFINT)&&printMode===PRINTMODE_LATEX)return t+=print_DEFINT_latex(r);if(isinnerordot(r)){if(printMode===PRINTMODE_LATEX)return t+=print_DOT_latex(r);if(codeGen)return t+=print_DOT_codegen(r)}else if(car(r)===symbol(SIN)){if(codeGen)return t+=print_SIN_codegen(r)}else if(car(r)===symbol(COS)){if(codeGen)return t+=print_COS_codegen(r)}else if(car(r)===symbol(TAN)){if(codeGen)return t+=print_TAN_codegen(r)}else if(car(r)===symbol(ARCSIN)){if(codeGen)return t+=print_ARCSIN_codegen(r)}else if(car(r)===symbol(ARCCOS)){if(codeGen)return t+=print_ARCCOS_codegen(r)}else if(car(r)===symbol(ARCTAN)){if(codeGen)return t+=print_ARCTAN_codegen(r)}else if(car(r)===symbol(SUM)){if(printMode===PRINTMODE_LATEX)return t+=print_SUM_latex(r);if(codeGen)return t+=print_SUM_codegen(r)}else if(car(r)===symbol(PRODUCT)){if(printMode===PRINTMODE_LATEX)return t+=print_PRODUCT_latex(r);if(codeGen)return t+=print_PRODUCT_codegen(r)}else if(car(r)===symbol(FOR)){if(codeGen)return t+=print_FOR_codegen(r)}else if(car(r)===symbol(DO)){if(codeGen)return t+=print_DO_codegen(r)}else if(car(r)===symbol(TEST)){if(codeGen)return t+=print_TEST_codegen(r);if(printMode===PRINTMODE_LATEX)return t+=print_TEST_latex(r)}else if(car(r)===symbol(TESTLT)){if(codeGen)return t+="(("+print_expr(cadr(r))+") < ("+print_expr(caddr(r))+"))";if(printMode===PRINTMODE_LATEX)return t+=print_TESTLT_latex(r)}else if(car(r)===symbol(TESTLE)){if(codeGen)return t+="(("+print_expr(cadr(r))+") <= ("+print_expr(caddr(r))+"))";if(printMode===PRINTMODE_LATEX)return t+=print_TESTLE_latex(r)}else if(car(r)===symbol(TESTGT)){if(codeGen)return t+="(("+print_expr(cadr(r))+") > ("+print_expr(caddr(r))+"))";if(printMode===PRINTMODE_LATEX)return t+=print_TESTGT_latex(r)}else if(car(r)===symbol(TESTGE)){if(codeGen)return t+="(("+print_expr(cadr(r))+") >= ("+print_expr(caddr(r))+"))";if(printMode===PRINTMODE_LATEX)return t+=print_TESTGE_latex(r)}else if(car(r)===symbol(TESTEQ)){if(codeGen)return t+="(("+print_expr(cadr(r))+") === ("+print_expr(caddr(r))+"))";if(printMode===PRINTMODE_LATEX)return t+=print_TESTEQ_latex(r)}else if(car(r)===symbol(FLOOR)){if(codeGen)return t+="Math.floor("+print_expr(cadr(r))+")";if(printMode===PRINTMODE_LATEX)return t+=" \\lfloor {"+print_expr(cadr(r))+"} \\rfloor "}else if(car(r)===symbol(CEILING)){if(codeGen)return t+="Math.ceiling("+print_expr(cadr(r))+")";if(printMode===PRINTMODE_LATEX)return t+=" \\lceil {"+print_expr(cadr(r))+"} \\rceil "}else if(car(r)===symbol(ROUND)){if(codeGen)return t+="Math.round("+print_expr(cadr(r))+")"}else if(car(r)===symbol(SETQ))return codeGen?t+=print_SETQ_codegen(r):(t+=print_expr(cadr(r)),t+=print_str("="),t+=print_expr(caddr(r)))}if(iscons(r)){if(t+=print_factor(car(r)),r=cdr(r),e||(t+=print_str("(")),iscons(r))for(t+=print_expr(car(r)),r=cdr(r);iscons(r);)t+=print_str(","),t+=print_expr(car(r)),r=cdr(r);return e||(t+=print_str(")")),t}return r===symbol(DERIVATIVE)?t+=print_char("d"):r===symbol(E)?t+=print_str(codeGen?"Math.E":"e"):r===symbol(PI)?t+=print_str(printMode===PRINTMODE_LATEX?"\\pi":"pi"):t+=print_str(printMode===PRINTMODE_LATEX?"\\text{"+get_printname(r)+"}":get_printname(r)),t},print_list=function(r){var e;switch(e="",r.k){case CONS:for(e+="(",e+=print_list(car(r)),r===cdr(r)&&r!==symbol(NIL)&&console.log("oh no recursive!"),r=cdr(r);iscons(r);)e+=" ",e+=print_list(car(r)),(r=cdr(r))===cdr(r)&&r!==symbol(NIL)&&console.log("oh no recursive!");r!==symbol(NIL)&&(e+=" . ",e+=print_list(r)),e+=")";break;case STR:e+=r.str;break;case NUM:case DOUBLE:e+=print_number(r,!0);break;case SYM:e+=get_printname(r);break;default:e+="<tensor>"}return e},print_multiply_sign=function(){var r;if(r="",printMode===PRINTMODE_LATEX){if(printMode!==PRINTMODE_HUMAN||test_flag)return r;r+=print_str(" ")}return r+=print_str(printMode!==PRINTMODE_HUMAN||test_flag||codeGen?"*":" ")},is_denominator=function(r){return car(r)===symbol(POWER)&&cadr(r)!==symbol(E)&&isnegativeterm(caddr(r))?1:0},any_denominators=function(r){var e;for(r=cdr(r);iscons(r);){if(e=car(r),is_denominator(e))return 1;r=cdr(r)}return 0},Eval_product=function(){var r,e,t,o,n,s,p,i,a;if(t=0,0,0,e=cadr(p1),o=caddr(p1),issymbol(o)||stop("sum: 2nd arg?"),push(cadddr(p1)),Eval(),n=pop_integer(),isNaN(n))push(p1);else{if(push(caddddr(p1)),Eval(),s=pop_integer(),!isNaN(s)){for(p=get_binding(o),push_integer(1),t=r=i=n,a=s;i<=a?r<=a:r>=a;t=i<=a?++r:--r)push_integer(t),p5=pop(),set_binding(o,p5),push(e),Eval(),DEBUG&&(console.log("product - factor 1: "+stack[tos-1].toString()),console.log("product - factor 2: "+stack[tos-2].toString())),multiply(),DEBUG&&console.log("product - result: "+stack[tos-1].toString());return set_binding(o,p)}push(p1)}},qadd=function(){var r,e,t,o,n,s,p,i;if(s=pop(),n=pop(),e=mmul(n.q.a,s.q.b),t=mmul(n.q.b,s.q.a),p=madd(e,t),!MZERO(p))return o=mmul(n.q.b,s.q.b),r=mgcd(p,o),r=makeSignSameAs(r,o),(i=new U).k=NUM,i.q.a=mdiv(p,r),i.q.b=mdiv(o,r),push(i);push(zero)},qdiv=function(){var r,e,t;return save(),p2=pop(),p1=pop(),MZERO(p2.q.a)&&stop("divide by zero"),MZERO(p1.q.a)?(push(zero),void restore()):(r=mmul(p1.q.a,p2.q.b),e=mmul(p1.q.b,p2.q.a),t=mgcd(r,e),t=makeSignSameAs(t,e),(p1=new U).k=NUM,p1.q.a=mdiv(r,t),p1.q.b=mdiv(e,t),push(p1),restore())},qmul=function(){var r,e,t;return save(),p2=pop(),p1=pop(),MZERO(p1.q.a)||MZERO(p2.q.a)?(push(zero),void restore()):(r=mmul(p1.q.a,p2.q.a),e=mmul(p1.q.b,p2.q.b),t=mgcd(r,e),t=makeSignSameAs(t,e),(p1=new U).k=NUM,p1.q.a=mdiv(r,t),p1.q.b=mdiv(e,t),push(p1),restore())},qpow=function(){return save(),qpowf(),restore()},qpowf=function(){var r,e,t,o,n,s;if(t=0,p2=pop(),p1=pop(),isplusone(p1)||isZeroAtomOrTensor(p2))push_integer(1);else if(isminusone(p1)&&isoneovertwo(p2))push(imaginaryunit);else{if(isZeroAtomOrTensor(p1))return isnegativenumber(p2)&&stop("divide by zero"),void push(zero);if(!isplusone(p2))return isinteger(p2)?(push(p2),t=pop_integer(),isNaN(t)?(push_symbol(POWER),push(p1),push(p2),void list(3)):(n=mpow(p1.q.a,Math.abs(t)),s=mpow(p1.q.b,Math.abs(t)),t<0&&(o=n,n=makeSignSameAs(n=s,s=o),s=makePositive(s)),(p3=new U).k=NUM,p3.q.a=n,p3.q.b=s,void push(p3))):isminusone(p1)?(push(p2),void normalize_angle()):isnegativenumber(p1)?(push(p1),negate(),push(p2),qpow(),push_integer(-1),push(p2),qpow(),void multiply()):isinteger(p1)?is_small_integer(p1)?(push(p1),push(p2),void quickfactor()):p2.q.a.isSmall&&p2.q.b.isSmall?(r=p2.q.a,e=p2.q.b,0===(n=mroot(p1.q.a,e))?(push_symbol(POWER),push(p1),push(p2),void list(3)):(s=mpow(n,r),(p3=new U).k=NUM,p2.q.a.isNegative()?(p3.q.a=bigInt(1),p3.q.b=s):(p3.q.a=s,p3.q.b=bigInt(1)),push(p3))):(push_symbol(POWER),push(p1),push(p2),void list(3)):(push(p1),mp_numerator(),push(p2),qpow(),push(p1),mp_denominator(),push(p2),negate(),qpow(),void multiply());push(p1)}},normalize_angle=function(){return save(),p1=pop(),isinteger(p1)?(p1.q.a.isOdd()?push_integer(-1):push_integer(1),void restore()):(push(p1),bignum_truncate(),p2=pop(),isnegativenumber(p1)&&(push(p2),push_integer(-1),add(),p2=pop()),push(p1),push(p2),subtract(),p3=pop(),push_symbol(POWER),push_integer(-1),push(p3),list(3),p2.q.a.isOdd()&&negate(),restore())},is_small_integer=function(r){return r.q.a.isSmall},quickfactor=function(){var r,e,t,o,n,s;for(t=0,save(),p2=pop(),p1=pop(),e=tos,push(p1),factor_small_number(),s=e,t=r=0,n=o=tos-e;r<n;t=r+=2)push(stack[s+t]),push(stack[s+t+1]),push(p2),multiply(),quickpower();return multiply_all(tos-e-o),p1=pop(),moveTos(e),push(p1),restore()},quickpower=function(){var r;return 0,save(),p2=pop(),p1=pop(),push(p2),bignum_truncate(),p3=pop(),push(p2),push(p3),subtract(),p4=pop(),isZeroAtomOrTensor(p4)||(push_symbol(POWER),push(p1),push(p4),list(3)),push(p3),r=pop_integer(),isNaN(r)?(push_symbol(POWER),push(p1),push(p3),list(3),void restore()):0!==r?(push(p1),bignum_power_number(r),restore()):void restore()},Eval_rationalize=function(){return push(cadr(p1)),Eval(),rationalize()},rationalize=function(){var r;return r=expanding,yyrationalize(),expanding=r},yyrationalize=function(){var r,e,t;if(t=pop(),istensor(t))__rationalize_tensor(t);else{if(expanding=0,car(t)===symbol(ADD)){for(DEBUG&&(printf("rationalize: this is the input expr:\n"),printline(t)),push(one),multiply_denominators(t),r=pop(),DEBUG&&(printf("rationalize: this is the common denominator:\n"),printline(r)),push(zero),e=cdr(t);iscons(e);)push(r),push(car(e)),multiply(),add(),e=cdr(e);return DEBUG&&(printf("rationalize: original expr times common denominator:\n"),printline(stack[tos-1])),Condense(),DEBUG&&(printf("rationalize: after factoring:\n"),printline(stack[tos-1])),push(r),divide(),DEBUG?(printf("rationalize: after dividing by common denom. (and we're done):\n"),printline(stack[tos-1])):void 0}push(t)}},multiply_denominators=function(r){var e;if(car(r)===symbol(ADD)){for(r=cdr(r),e=[];iscons(r);)multiply_denominators_term(car(r)),e.push(r=cdr(r));return e}return multiply_denominators_term(r)},multiply_denominators_term=function(r){var e;if(car(r)===symbol(MULTIPLY)){for(r=cdr(r),e=[];iscons(r);)multiply_denominators_factor(car(r)),e.push(r=cdr(r));return e}return multiply_denominators_factor(r)},multiply_denominators_factor=function(r){if(car(r)===symbol(POWER))return push(r),r=caddr(r),isnegativenumber(r)?(inverse(),void __lcm()):car(r)===symbol(MULTIPLY)&&isnegativenumber(cadr(r))?(inverse(),void __lcm()):pop()},__rationalize_tensor=function(r){var e,t,o;if(t=0,push(r),Eval(),r=pop(),istensor(r)){for(t=e=0,o=r.tensor.nelem;0<=o?e<o:e>o;t=0<=o?++e:--e)push(r.tensor.elem[t]),rationalize(),r.tensor.elem[t]=pop();return check_tensor_dimensions(r),push(r)}push(r)},__lcm=function(){return save(),p1=pop(),p2=pop(),push(p1),push(p2),multiply(),push(p1),push(p2),gcd(),divide(),restore()},Eval_real=function(){return push(cadr(p1)),Eval(),real()},real=function(){return save(),rect(),p1=pop(),push(p1),push(p1),conjugate(),add(),push_integer(2),divide(),restore()},DEBUG_RECT=!1,Eval_rect=function(){return push(cadr(p1)),Eval(),rect()},rect=function(){var r;if(save(),r=p1=pop(),DEBUG_RECT&&console.log("RECT of "+r),DEBUG_RECT&&console.log("any clock forms in : "+r+" ? "+findPossibleClockForm(r)),issymbol(p1))DEBUG_RECT&&console.log(" rect: simple symbol: "+r),isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES)))?(push_symbol(YYRECT),push(p1),list(2)):push(p1);else if(isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES)))||findPossibleExponentialForm(p1)||findPossibleClockForm(p1)||Find(p1,symbol(SIN))&&Find(p1,symbol(COS))&&Find(p1,imaginaryunit))if(car(p1)===symbol(MULTIPLY)&&isimaginaryunit(cadr(p1))&&!isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES))))push(p1);else if(car(p1)===symbol(ADD))for(DEBUG_RECT&&console.log(" rect - "+r+" is a sum "),push_integer(0),p1=cdr(p1);iscons(p1);)push(car(p1)),rect(),add(),p1=cdr(p1);else DEBUG_RECT&&console.log(" rect - "+r+" is NOT a sum "),push(p1),abs(),DEBUG_RECT&&console.log(" rect - "+r+" abs: "+stack[tos-1].toString()),push(p1),arg(),DEBUG_RECT&&console.log(" rect - "+r+" arg of "+p1+" : "+stack[tos-1].toString()),p1=pop(),push(p1),cosine(),DEBUG_RECT&&console.log(" rect - "+r+" cosine: "+stack[tos-1].toString()),push(imaginaryunit),push(p1),sine(),DEBUG_RECT&&console.log(" rect - "+r+" sine: "+stack[tos-1].toString()),multiply(),DEBUG_RECT&&console.log(" rect - "+r+" i * sine: "+stack[tos-1].toString()),add(),DEBUG_RECT&&console.log(" rect - "+r+" cos + i * sine: "+stack[tos-1].toString()),multiply();else DEBUG_RECT&&console.log(" rect: simple symbol: "+r),push(p1);if(restore(),DEBUG_RECT)return console.log("rect of "+r+" : "+stack[tos-1])},Eval_round=function(){return push(cadr(p1)),Eval(),yround()},yround=function(){return save(),yyround(),restore()},yyround=function(){var r;return r=0,p1=pop(),isNumericAtom(p1)?isdouble(p1)?(r=Math.round(p1.d),void push_double(r)):isinteger(p1)?void push(p1):(push(p1),yyfloat(),p1=pop(),push_integer(Math.round(p1.d))):(push_symbol(ROUND),push(p1),void list(2))},T_INTEGER=1001,T_DOUBLE=1002,T_SYMBOL=1003,T_FUNCTION=1004,T_NEWLINE=1006,T_STRING=1007,T_GTEQ=1008,T_LTEQ=1009,T_EQ=1010,T_NEQ=1011,T_QUOTASSIGN=1012,token="",newline_flag=0,meta_mode=0,input_str=0,scan_str=0,token_str=0,token_buf=0,lastFoundSymbol=null,symbolsRightOfAssignment=null,symbolsLeftOfAssignment=null,isSymbolLeftOfAssignment=null,scanningParameters=null,functionInvokationsScanningStack=null,skipRootVariableToBeSolved=!1,assignmentFound=null,scanned="",scan=function(r){return DEBUG&&console.log("#### scanning "+r),lastFoundSymbol=null,symbolsRightOfAssignment=[],symbolsLeftOfAssignment=[],isSymbolLeftOfAssignment=!0,scanningParameters=[],functionInvokationsScanningStack=[""],assignmentFound=!1,scanned=r,meta_mode=0,expanding++,input_str=0,scan_str=0,get_next_token(),""===token?(push(symbol(NIL)),expanding--,0):(scan_stmt(),expanding--,assignmentFound||(symbolsInExpressionsWithoutAssignments=symbolsInExpressionsWithoutAssignments.concat(symbolsLeftOfAssignment)),token_str-input_str)},scan_meta=function(r){return scanned=r,meta_mode=1,expanding++,input_str=0,scan_str=0,get_next_token(),""===token?(push(symbol(NIL)),expanding--,0):(scan_stmt(),expanding--,token_str-input_str)},scan_stmt=function(){var r,e,t,o,n,s,p,i,a;if(scan_relation(),t=!1,token===T_QUOTASSIGN&&(t=!0),(token===T_QUOTASSIGN||"="===token)&&(a=lastFoundSymbol,DEBUG&&console.log("assignment!"),assignmentFound=!0,isSymbolLeftOfAssignment=!1,get_next_token(),push_symbol(SETQ),swap(),t&&push_symbol(QUOTE),scan_relation(),t&&list(2),list(3),isSymbolLeftOfAssignment=!0,codeGen)){if(-1!==(s=symbolsRightOfAssignment.indexOf(a))&&(symbolsRightOfAssignment.splice(s,1),symbolsHavingReassignments.push(a)),DEBUG)for(console.log("locally, "+a+" depends on: "),r=0,p=symbolsRightOfAssignment.length;r<p;r++)n=symbolsRightOfAssignment[r],console.log("\t"+n);for(null==symbolsDependencies[a]&&(symbolsDependencies[a]=[]),o=symbolsDependencies[a],e=0,i=symbolsRightOfAssignment.length;e<i;e++)n=symbolsRightOfAssignment[e],-1===o.indexOf(n)&&o.push(n);return symbolsRightOfAssignment=[]}},scan_relation=function(){switch(scan_expression(),token){case T_EQ:return push_symbol(TESTEQ),swap(),get_next_token(),scan_expression(),list(3);case T_NEQ:return push_symbol(NOT),swap(),push_symbol(TESTEQ),swap(),get_next_token(),scan_expression(),list(3),list(2);case T_LTEQ:return push_symbol(TESTLE),swap(),get_next_token(),scan_expression(),list(3);case T_GTEQ:return push_symbol(TESTGE),swap(),get_next_token(),scan_expression(),list(3);case"<":return push_symbol(TESTLT),swap(),get_next_token(),scan_expression(),list(3);case">":return push_symbol(TESTGT),swap(),get_next_token(),scan_expression(),list(3)}},scan_expression=function(){var r;switch(r=tos,token){case"+":get_next_token(),scan_term();break;case"-":get_next_token(),scan_term(),negate();break;default:scan_term()}for(;0===newline_flag&&("+"===token||"-"===token);)"+"===token?(get_next_token(),scan_term()):(get_next_token(),scan_term(),negate());if(tos-r>1)return list(tos-r),push_symbol(ADD),swap(),cons()},is_factor=function(){if(("function"==typeof token.charCodeAt?token.charCodeAt(0):void 0)===dotprod_unicode)return 1;switch(token){case"*":case"/":return 1;case"(":case T_SYMBOL:case T_FUNCTION:case T_INTEGER:case T_DOUBLE:case T_STRING:return newline_flag?(scan_str=token_str,0):1}return 0},simplify_1_in_products=function(r,e){if(r>e&&isrational(stack[r-1])&&equaln(stack[r-1],1))return pop()},multiply_consecutive_constants=function(r,e){if(r>e+1&&isNumericAtom(stack[r-2])&&isNumericAtom(stack[r-1]))return multiply()},scan_term=function(){var r;for(r=tos,scan_factor(),parse_time_simplifications&&simplify_1_in_products(tos,r);is_factor();)"*"===token?(get_next_token(),scan_factor()):"/"===token?(simplify_1_in_products(tos,r),get_next_token(),scan_factor(),inverse()):("function"==typeof token.charCodeAt?token.charCodeAt(0):void 0)===dotprod_unicode?(get_next_token(),push_symbol(INNER),swap(),scan_factor(),list(3)):scan_factor(),parse_time_simplifications&&(multiply_consecutive_constants(tos,r),simplify_1_in_products(tos,r));return r===tos?push_integer(1):tos-r>1?(list(tos-r),push_symbol(MULTIPLY),swap(),cons()):void 0},scan_power=function(){if("^"===token)return get_next_token(),push_symbol(POWER),swap(),scan_factor(),list(3)},scan_index=function(r){for(get_next_token(),push_symbol(INDEX),swap(),scan_expression();","===token;)get_next_token(),scan_expression();return"]"!==token&&scan_error("] expected"),get_next_token(),list(tos-r)},scan_factor=function(){var r,e;for(e=tos,r=!1,"("===token?scan_subexpr():token===T_SYMBOL?scan_symbol():token===T_FUNCTION?scan_function_call_with_function_name():"["===token?scan_tensor():token===T_INTEGER?(r=!0,bignum_scan_integer(token_buf),get_next_token()):token===T_DOUBLE?(r=!0,bignum_scan_float(token_buf),get_next_token()):token===T_STRING?scan_string():scan_error("syntax error");"["===token||"("===token&&0===newline_flag&&!r;)"["===token?scan_index(e):"("===token&&scan_function_call_without_function_name();for(;"!"===token;)get_next_token(),push_symbol(FACTORIAL),swap(),list(2);for(;("function"==typeof token.charCodeAt?token.charCodeAt(0):void 0)===transpose_unicode;)get_next_token(),push_symbol(TRANSPOSE),swap(),list(2);return scan_power()},addSymbolRightOfAssignment=function(r){var e,t,o,n;if(-1===predefinedSymbolsInGlobalScope_doNotTrackInDependencies.indexOf(r)&&-1===symbolsRightOfAssignment.indexOf(r)&&-1===symbolsRightOfAssignment.indexOf("'"+r)&&!skipRootVariableToBeSolved){for(DEBUG&&console.log("... adding symbol: "+r+" to the set of the symbols right of assignment"),o="",t=e=1,n=functionInvokationsScanningStack.length;1<=n?e<n:e>n;t=1<=n?++e:--e)""!==functionInvokationsScanningStack[t]&&(o+=functionInvokationsScanningStack[t]+"_"+t+"_");return r=o+r,symbolsRightOfAssignment.push(r)}},addSymbolLeftOfAssignment=function(r){var e,t,o,n;if(-1===predefinedSymbolsInGlobalScope_doNotTrackInDependencies.indexOf(r)&&-1===symbolsLeftOfAssignment.indexOf(r)&&-1===symbolsLeftOfAssignment.indexOf("'"+r)&&!skipRootVariableToBeSolved){for(DEBUG&&console.log("... adding symbol: "+r+" to the set of the symbols left of assignment"),o="",t=e=1,n=functionInvokationsScanningStack.length;1<=n?e<n:e>n;t=1<=n?++e:--e)""!==functionInvokationsScanningStack[t]&&(o+=functionInvokationsScanningStack[t]+"_"+t+"_");return r=o+r,symbolsLeftOfAssignment.push(r)}},scan_symbol=function(){if(token!==T_SYMBOL&&scan_error("symbol expected"),meta_mode&&1===token_buf.length)switch(token_buf[0]){case"a":push(symbol(METAA));break;case"b":push(symbol(METAB));break;case"x":push(symbol(METAX));break;default:push(usr_symbol(token_buf))}else push(usr_symbol(token_buf));return 0===scanningParameters.length?(DEBUG&&console.log("out of scanning parameters, processing "+token_buf),lastFoundSymbol=token_buf,isSymbolLeftOfAssignment&&addSymbolLeftOfAssignment(token_buf)):(DEBUG&&console.log("still scanning parameters, skipping "+token_buf),isSymbolLeftOfAssignment&&addSymbolRightOfAssignment("'"+token_buf)),DEBUG&&console.log("found symbol: "+token_buf+" left of assignment: "+isSymbolLeftOfAssignment),isSymbolLeftOfAssignment||addSymbolRightOfAssignment(token_buf),get_next_token()},scan_string=function(){return new_string(token_buf),get_next_token()},scan_function_call_with_function_name=function(){var r,e,t,o,n,s;if(DEBUG&&console.log("-- scan_function_call_with_function_name start"),o=1,new U,n=usr_symbol(token_buf),push(n),"roots"!==(e=token_buf)&&"defint"!==e&&"sum"!==e&&"product"!==e&&"for"!==e||functionInvokationsScanningStack.push(token_buf),lastFoundSymbol=token_buf,isSymbolLeftOfAssignment||addSymbolRightOfAssignment(token_buf),get_next_token(),get_next_token(),scanningParameters.push(!0),")"!==token){for(scan_stmt(),o++;","===token;)get_next_token(),2===o&&-1!==functionInvokationsScanningStack[functionInvokationsScanningStack.length-1].indexOf("roots")&&(symbolsRightOfAssignment=symbolsRightOfAssignment.filter(function(r){return!new RegExp("roots_"+(functionInvokationsScanningStack.length-1)+"_"+token_buf).test(r)}),skipRootVariableToBeSolved=!0),2===o&&-1!==functionInvokationsScanningStack[functionInvokationsScanningStack.length-1].indexOf("sum")&&(symbolsRightOfAssignment=symbolsRightOfAssignment.filter(function(r){return!new RegExp("sum_"+(functionInvokationsScanningStack.length-1)+"_"+token_buf).test(r)}),skipRootVariableToBeSolved=!0),2===o&&-1!==functionInvokationsScanningStack[functionInvokationsScanningStack.length-1].indexOf("product")&&(symbolsRightOfAssignment=symbolsRightOfAssignment.filter(function(r){return!new RegExp("product_"+(functionInvokationsScanningStack.length-1)+"_"+token_buf).test(r)}),skipRootVariableToBeSolved=!0),2===o&&-1!==functionInvokationsScanningStack[functionInvokationsScanningStack.length-1].indexOf("for")&&(symbolsRightOfAssignment=symbolsRightOfAssignment.filter(function(r){return!new RegExp("for_"+(functionInvokationsScanningStack.length-1)+"_"+token_buf).test(r)}),skipRootVariableToBeSolved=!0),-1!==functionInvokationsScanningStack[functionInvokationsScanningStack.length-1].indexOf("defint")&&(2===o||o>2&&(o-2)%3==0)&&(symbolsRightOfAssignment=symbolsRightOfAssignment.filter(function(r){return!new RegExp("defint_"+(functionInvokationsScanningStack.length-1)+"_"+token_buf).test(r)}),skipRootVariableToBeSolved=!0),scan_stmt(),skipRootVariableToBeSolved=!1,o++;2===o&&-1!==functionInvokationsScanningStack[functionInvokationsScanningStack.length-1].indexOf("roots")&&(symbolsRightOfAssignment=symbolsRightOfAssignment.filter(function(r){return!new RegExp("roots_"+(functionInvokationsScanningStack.length-1)+"_x").test(r)}))}for(scanningParameters.pop(),t=r=0,s=symbolsRightOfAssignment.length;0<=s?r<=s:r>=s;t=0<=s?++r:--r)null!=symbolsRightOfAssignment[t]&&("roots"===e&&(symbolsRightOfAssignment[t]=symbolsRightOfAssignment[t].replace(new RegExp("roots_"+(functionInvokationsScanningStack.length-1)+"_"),"")),"defint"===e&&(symbolsRightOfAssignment[t]=symbolsRightOfAssignment[t].replace(new RegExp("defint_"+(functionInvokationsScanningStack.length-1)+"_"),"")),"sum"===e&&(symbolsRightOfAssignment[t]=symbolsRightOfAssignment[t].replace(new RegExp("sum_"+(functionInvokationsScanningStack.length-1)+"_"),"")),"product"===e&&(symbolsRightOfAssignment[t]=symbolsRightOfAssignment[t].replace(new RegExp("product_"+(functionInvokationsScanningStack.length-1)+"_"),"")),"for"===e&&(symbolsRightOfAssignment[t]=symbolsRightOfAssignment[t].replace(new RegExp("for_"+(functionInvokationsScanningStack.length-1)+"_"),"")));if(")"!==token&&scan_error(") expected"),get_next_token(),list(o),"roots"!==e&&"defint"!==e&&"sum"!==e&&"product"!==e&&"for"!==e||functionInvokationsScanningStack.pop(),e===symbol(PATTERN).printname&&(patternHasBeenFound=!0),DEBUG)return console.log("-- scan_function_call_with_function_name end")},scan_function_call_without_function_name=function(){var r;if(DEBUG&&console.log("-- scan_function_call_without_function_name start"),push_symbol(EVAL),swap(),list(2),r=1,get_next_token(),scanningParameters.push(!0),")"!==token)for(scan_stmt(),r++;","===token;)get_next_token(),scan_stmt(),r++;if(scanningParameters.pop(),")"!==token&&scan_error(") expected"),get_next_token(),list(r),DEBUG)return console.log("-- scan_function_call_without_function_name end: "+stack[tos-1])},scan_subexpr=function(){return 0,"("!==token&&scan_error("( expected"),get_next_token(),scan_stmt(),")"!==token&&scan_error(") expected"),get_next_token()},scan_tensor=function(){var r;for(r=0,"["!==token&&scan_error("[ expected"),get_next_token(),scan_stmt(),r=1;","===token;)get_next_token(),scan_stmt(),r++;return build_tensor(r),"]"!==token&&scan_error("] expected"),get_next_token()},scan_error=function(r){for(errorMessage="";input_str!==scan_str&&("\n"!==scanned[input_str]&&"\r"!==scanned[input_str]||input_str+1!==scan_str);)errorMessage+=scanned[input_str++];for(errorMessage+=" ? ";scanned[input_str]&&"\n"!==scanned[input_str]&&"\r"!==scanned[input_str];)errorMessage+=scanned[input_str++];return errorMessage+="\n",stop(r)},build_tensor=function(r){var e,t,o;for(t=0,save(),(p2=alloc_tensor(r)).tensor.ndim=1,p2.tensor.dim[0]=r,t=e=0,o=r;0<=o?e<o:e>o;t=0<=o?++e:--e)p2.tensor.elem[t]=stack[tos-r+t];return check_tensor_dimensions(p2),moveTos(tos-r),push(p2),restore()},get_next_token=function(){for(newline_flag=0;get_token(),token===T_NEWLINE;)newline_flag=1;if(DEBUG)return console.log("get_next_token token: "+token)},get_token=function(){for(;isspace(scanned[scan_str]);){if("\n"===scanned[scan_str]||"\r"===scanned[scan_str])return token=T_NEWLINE,void scan_str++;scan_str++}if(token_str=scan_str,scan_str!==scanned.length){if(!isdigit(scanned[scan_str])&&"."!==scanned[scan_str]){if(isalpha(scanned[scan_str])){for(;isalnumorunderscore(scanned[scan_str]);)scan_str++;return token="("===scanned[scan_str]?T_FUNCTION:T_SYMBOL,void update_token_buf(token_str,scan_str)}if('"'===scanned[scan_str]){for(scan_str++;'"'!==scanned[scan_str];)scan_str===scanned.length-1&&(scan_str++,scan_error("runaway string"),scan_str--),scan_str++;return token=T_STRING,void update_token_buf(token_str+1,++scan_str-1)}if("#"===scanned[scan_str]||"-"===scanned[scan_str]&&"-"===scanned[scan_str+1]){for(;scanned[scan_str]&&"\n"!==scanned[scan_str]&&"\r"!==scanned[scan_str];)scan_str++;return scanned[scan_str]&&scan_str++,void(token=T_NEWLINE)}return":"===scanned[scan_str]&&"="===scanned[scan_str+1]?(scan_str+=2,void(token=T_QUOTASSIGN)):"="===scanned[scan_str]&&"="===scanned[scan_str+1]?(scan_str+=2,void(token=T_EQ)):"!"===scanned[scan_str]&&"="===scanned[scan_str+1]?(scan_str+=2,void(token=T_NEQ)):"<"===scanned[scan_str]&&"="===scanned[scan_str+1]?(scan_str+=2,void(token=T_LTEQ)):">"===scanned[scan_str]&&"="===scanned[scan_str+1]?(scan_str+=2,void(token=T_GTEQ)):token=scanned[scan_str++]}for(;isdigit(scanned[scan_str]);)scan_str++;if("."===scanned[scan_str]){for(scan_str++;isdigit(scanned[scan_str]);)scan_str++;if("e"===scanned[scan_str]&&("+"===scanned[scan_str+1]||"-"===scanned[scan_str+1]||isdigit(scanned[scan_str+1])))for(scan_str+=2;isdigit(scanned[scan_str]);)scan_str++;token=T_DOUBLE}else token=T_INTEGER;update_token_buf(token_str,scan_str)}else token=""},update_token_buf=function(r,e){return token_buf=scanned.substring(r,e)},$.scan=scan,Eval_sgn=function(){return push(cadr(p1)),Eval(),sgn()},sgn=function(){return save(),yysgn(),restore()},yysgn=function(){return p1=pop(),isdouble(p1)?p1.d>0?void push_integer(1):0===p1.d?void push_integer(1):void push_integer(-1):isrational(p1)?-1===MSIGN(mmul(p1.q.a,p1.q.b))?void push_integer(-1):MZERO(mmul(p1.q.a,p1.q.b))?void push_integer(0):void push_integer(1):iscomplexnumber(p1)?(push_integer(-1),push(p1),absval(),power(),push(p1),void multiply()):isnegativeterm(p1)?(push_symbol(SGN),push(p1),negate(),list(2),push_integer(-1),void multiply()):(push_symbol(SGN),push(p1),list(2))},Eval_shape=function(){return push(cadr(p1)),Eval(),shape()},shape=function(){var r,e,t,o,n,s,p,i;for(n=0,0,0,t=[],o=[],n=r=0,p=MAXDIM;0<=p?r<p:r>p;n=0<=p?++r:--r)t[n]=0,o[n]=0;if(save(),p1=pop(),!istensor(p1))return isZeroAtomOrTensor(p1)||stop("transpose: tensor expected, 1st arg is not a tensor"),push(zero),void restore();for(s=p1.tensor.ndim,(p2=alloc_tensor(s)).tensor.ndim=1,p2.tensor.dim[0]=s,n=e=0,i=s;0<=i?e<i:e>i;n=0<=i?++e:--e)push_integer(p1.tensor.dim[n]),p2.tensor.elem[n]=pop();return push(p2),restore()},Eval_simfac=function(){return push(cadr(p1)),Eval(),simfac()},simfac=function(){var r;if(r=0,save(),p1=pop(),car(p1)===symbol(ADD)){for(r=tos,p1=cdr(p1);p1!==symbol(NIL);)push(car(p1)),simfac_term(),p1=cdr(p1);add_all(tos-r)}else push(p1),simfac_term();return restore()},simfac_term=function(){var r;if(0,save(),p1=pop(),car(p1)!==symbol(MULTIPLY))return push(p1),void restore();for(r=tos,p1=cdr(p1);p1!==symbol(NIL);)push(car(p1)),p1=cdr(p1);for(;yysimfac(r);)1;return multiply_all_noexpand(tos-r),restore()},yysimfac=function(r){var e,t,o,n,s,p,i,a;for(o=0,n=0,o=e=s=r,p=tos;s<=p?e<p:e>p;o=s<=p?++e:--e)for(p1=stack[o],n=t=i=r,a=tos;i<=a?t<a:t>a;n=i<=a?++t:--t)if(o!==n){if(p2=stack[n],car(p1)===symbol(FACTORIAL)&&car(p2)===symbol(POWER)&&isminusone(caddr(p2))&&equal(cadr(p1),cadr(p2)))return push(cadr(p1)),push(one),subtract(),factorial(),stack[o]=pop(),stack[n]=one,1;if(car(p2)===symbol(POWER)&&isminusone(caddr(p2))&&caadr(p2)===symbol(FACTORIAL)&&equal(p1,cadadr(p2)))return push(p1),push_integer(-1),add(),factorial(),reciprocate(),stack[o]=pop(),stack[n]=one,1;if(car(p2)===symbol(FACTORIAL)&&(push(p1),push(cadr(p2)),subtract(),p3=pop(),isplusone(p3)))return push(p1),factorial(),stack[o]=pop(),stack[n]=one,1;if(car(p1)===symbol(POWER)&&isminusone(caddr(p1))&&car(p2)===symbol(POWER)&&isminusone(caddr(p2))&&caadr(p2)===symbol(FACTORIAL)&&(push(cadr(p1)),push(cadr(cadr(p2))),subtract(),p3=pop(),isplusone(p3)))return push(cadr(p1)),factorial(),reciprocate(),stack[o]=pop(),stack[n]=one,1;if(car(p1)===symbol(FACTORIAL)&&car(p2)===symbol(POWER)&&isminusone(caddr(p2))&&caadr(p2)===symbol(FACTORIAL)){if(push(cadr(p1)),push(cadr(cadr(p2))),subtract(),p3=pop(),isplusone(p3))return stack[o]=cadr(p1),stack[n]=one,1;if(isminusone(p3))return push(cadr(cadr(p2))),reciprocate(),stack[o]=pop(),stack[n]=one,1;if(equaln(p3,2))return stack[o]=cadr(p1),push(cadr(p1)),push_integer(-1),add(),stack[n]=pop(),1;if(equaln(p3,-2))return push(cadr(cadr(p2))),reciprocate(),stack[o]=pop(),push(cadr(cadr(p2))),push_integer(-1),add(),reciprocate(),stack[n]=pop(),1}}return 0},Eval_simplify=function(){return push(cadr(p1)),runUserDefinedSimplifications(),Eval(),simplify()},runUserDefinedSimplifications=function(){var r,e,t,o,n,s,p,i,a,l;if(0!==userSimplificationsInListForm.length&&!Find(cadr(p1),symbol(INTEGRAL))){for(a=expanding,expanding=!1,DEBUG&&console.log("runUserDefinedSimplifications passed: "+stack[tos-1].toString()),Eval(),DEBUG&&console.log("runUserDefinedSimplifications after eval no expanding: "+stack[tos-1].toString()),expanding=a,p1=stack[tos-1],DEBUG&&console.log("patterns to be checked: "),r=0,s=userSimplificationsInListForm.length;r<s;r++)n=userSimplificationsInListForm[r],DEBUG&&console.log("..."+n);for(t=!0,i=0;t&&i<MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES;)for(t=!1,i++,e=0,p=userSimplificationsInListForm.length;e<p;e++){for(n=userSimplificationsInListForm[e],l=!0,o=0;l&&o<MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE;)o++,DEBUG&&console.log("simplify - tos: "+tos+" checking pattern: "+n+" on: "+p1),push_symbol(NIL),(l=transform(n,!0))&&(t=!0),p1=stack[tos-1],DEBUG&&console.log("p1 at this stage of simplification: "+p1);o===MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE&&stop("maximum application of single transformation rule exceeded: "+n)}if(i===MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES&&stop("maximum application of all transformation rules exceeded "),DEBUG)return console.log("METAX = "+get_binding(symbol(METAX))),console.log("METAA = "+get_binding(symbol(METAA))),console.log("METAB = "+get_binding(symbol(METAB)))}},simplifyForCodeGeneration=function(){return save(),runUserDefinedSimplifications(),codeGen=!0,simplify_main(),codeGen=!1,restore()},simplify=function(){return save(),simplify_main(),restore()},simplify_main=function(){var args,fbody;if(p1=pop(),codeGen&&car(p1)===symbol(FUNCTION)&&(fbody=cadr(p1),push(fbody),eval(),simplify(),p3=pop(),args=caddr(p1),push_symbol(FUNCTION),push(p3),push(args),list(3),p1=pop()),!istensor(p1))return Find(p1,symbol(FACTORIAL))&&(push(p1),simfac(),p2=pop(),push(p1),rationalize(),simfac(),p3=pop(),p1=count(p2)<count(p3)?p2:p3),f10(),f1(),f2(),f3(),f4(),f5(),f9(),simplify_polarRect(),do_simplify_nested_radicals&&simplify_nested_radicals()?(DEBUG&&console.log("de-nesting successful into: "+p1.toString()),push(p1),void simplify()):(simplify_rectToClock(),push(p1));simplify_tensor()},simplify_tensor=function(){var r,e,t,o,n;for(t=0,(p2=alloc_tensor(p1.tensor.nelem)).tensor.ndim=p1.tensor.ndim,t=r=0,o=p1.tensor.ndim;0<=o?r<o:r>o;t=0<=o?++r:--r)p2.tensor.dim[t]=p1.tensor.dim[t];for(t=e=0,n=p1.tensor.nelem;0<=n?e<n:e>n;t=0<=n?++e:--e)push(p1.tensor.elem[t]),simplify(),p2.tensor.elem[t]=pop();return check_tensor_dimensions(p2),isZeroAtomOrTensor(p2)&&(p2=zero),push(p2)},f1=function(){if(car(p1)===symbol(ADD))return push(p1),rationalize(),p2=pop(),count(p2)<count(p1)?p1=p2:void 0},f2=function(){if(car(p1)===symbol(ADD))return push(p1),Condense(),p2=pop(),count(p2)<=count(p1)?p1=p2:void 0},f3=function(){if(push(p1),rationalize(),negate(),rationalize(),negate(),rationalize(),p2=pop(),count(p2)<count(p1))return p1=p2},f10=function(){var r,e,t,o;if(t=car(p1),cdr(p1),(t===symbol(MULTIPLY)||isinnerordot(p1))&&car(car(cdr(p1)))===symbol(TRANSPOSE)&&car(car(cdr(cdr(p1))))===symbol(TRANSPOSE)&&(DEBUG&&console.log("maybe collecting a transpose "+p1),r=cadr(car(cdr(p1))),e=cadr(car(cdr(cdr(p1)))),t===symbol(MULTIPLY)?(push(r),push(e),multiply()):isinnerordot(p1)&&(push(e),push(r),inner()),push_integer(1),push_integer(2),o=expanding,expanding=!1,transpose(),expanding=o,p2=pop(),count(p2)<count(p1)&&(p1=p2),DEBUG))return console.log("collecting a transpose "+p2)},f4=function(){if(!isZeroAtomOrTensor(p1))return push(p1),rationalize(),inverse(),rationalize(),inverse(),rationalize(),p2=pop(),count(p2)<count(p1)?p1=p2:void 0},simplify_trig=function(){return save(),p1=pop(),f5(),push(p1),restore()},f5=function(){if(0!==Find(p1,symbol(SIN))||0!==Find(p1,symbol(COS)))return trigmode=1,push(p2=p1),Eval(),p3=pop(),trigmode=2,push(p2),Eval(),p4=pop(),trigmode=0,(count(p4)<count(p3)||nterms(p4)<nterms(p3))&&(p3=p4),count(p3)<count(p1)||nterms(p3)<nterms(p1)?p1=p3:void 0},f9=function(){if(car(p1)===symbol(ADD)){for(push_integer(0),p2=cdr(p1);iscons(p2);)push(car(p2)),simplify(),add(),p2=cdr(p2);return p2=pop(),count(p2)<count(p1)?p1=p2:void 0}},simplify_rectToClock=function(){if(0!==Find(p1,symbol(SIN))||0!==Find(p1,symbol(COS)))return push(p1),Eval(),clockform(),p2=pop(),DEBUG&&console.log("before simplification clockform: "+p1+" after: "+p2),count(p2)<count(p1)?p1=p2:void 0},simplify_polarRect=function(){if(push(p1),polarRectAMinusOneBase(),Eval(),p2=pop(),count(p2)<count(p1))return p1=p2},polarRectAMinusOneBase=function(){var r;if(save(),p1=pop(),isimaginaryunit(p1))return push(p1),void restore();if(equal(car(p1),symbol(POWER))&&isminusone(cadr(p1)))push(one),negate(),push(caddr(p1)),polarRectAMinusOneBase(),power(),polar(),rect();else if(iscons(p1)){for(r=tos;iscons(p1);)push(car(p1)),polarRectAMinusOneBase(),p1=cdr(p1);list(tos-r)}else push(p1);restore()},nterms=function(r){return car(r)!==symbol(ADD)?1:length(r)-1},simplify_nested_radicals=function(){var r,e,t,o;return recursionLevelNestedRadicalsRemoval>0?(DEBUG&&console.log("denesting bailing out because of too much recursion"),!1):(push(p1),o=take_care_of_nested_radicals(),t=stack[tos-1],r=expanding,expanding=0,yycondense(),expanding=r,e=pop(),countOccurrencesOfSymbol(symbol(POWER),t)<countOccurrencesOfSymbol(symbol(POWER),e)?push(t):push(e),p1=pop(),o)},take_care_of_nested_radicals=function(){var r,e,t,o,n,s,p,i,a,l,u,c,d,_,m,f,h,g,b,E,v,y,A,T,O,S,M,I,R,N,x,L,k,D,P,U,B,w;if(recursionLevelNestedRadicalsRemoval>0)return DEBUG&&console.log("denesting bailing out because of too much recursion"),!1;if(save(),p1=pop(),equal(car(p1),symbol(POWER))){if(l=cadr(p1),f=caddr(p1),!isminusone(f)&&equal(car(l),symbol(ADD))&&isfraction(f)&&(equalq(f,1,3)||equalq(f,1,2))){for(h=cadr(l),push(h),take_care_of_nested_radicals(),pop(),U=caddr(l),push(U),take_care_of_nested_radicals(),pop(),I=0,_=l;cdr(_)!==symbol(NIL);)I++,_=cdr(_);if(I>2)return push(p1),restore(),!1;if(d=null,c=[],w=[],car(U)===symbol(MULTIPLY)){if(B=cdr(U),iscons(B))for(;iscons(B);)k=car(B),car(k)===symbol(POWER)?(E=cadr(k),v=caddr(k),equalq(v,1,2)&&(null==d?(d=v,c.push(E)):equal(v,d)&&c.push(E))):w.push(k),B=cdr(B)}else car(U)===symbol(POWER)&&(E=cadr(U),v=caddr(U),null==d&&equalq(v,1,2)&&(d=v,c.push(E)));if(0===c.length)return push(p1),restore(),!1;for(r=h,push_integer(1),n=0,y=c.length;n<y;n++)b=c[n],push(b),multiply();for(t=pop(),push_integer(1),s=0,A=w.length;s<A;s++)b=w[s],push(b),multiply();if(e=pop(),equalq(f,1,3)){if(push(r),negate(),push(t),multiply(),push(e),divide(),u=pop(),push(u),real(),yyfloat(),Math.abs(pop().d)>Math.pow(2,32))return push(p1),restore(),!1;if(push(u),push_integer(3),push(t),multiply(),u=pop(),push(u),real(),yyfloat(),Math.abs(pop().d)>Math.pow(2,32))return pop(),push(p1),restore(),!1;if(push(u),push(symbol(SECRETX)),multiply(),push_integer(-3),push(r),multiply(),push(e),divide(),u=pop(),push(u),real(),yyfloat(),Math.abs(pop().d)>Math.pow(2,32))return pop(),pop(),push(p1),restore(),!1;push(u),push(symbol(SECRETX)),push_integer(2),power(),multiply(),push_integer(1),push(symbol(SECRETX)),push_integer(3),power(),multiply(),add(),add(),add()}else if(equalq(f,1,2)){if(push(t),u=pop(),push(u),real(),yyfloat(),Math.abs(pop().d)>Math.pow(2,32))return push(p1),restore(),!1;if(push(u),push_integer(-2),push(r),multiply(),push(e),divide(),u=pop(),push(u),real(),yyfloat(),Math.abs(pop().d)>Math.pow(2,32))return pop(),push(p1),restore(),!1;push(u),push(symbol(SECRETX)),multiply(),push_integer(1),push(symbol(SECRETX)),push_integer(2),power(),multiply(),add(),add()}if(push(symbol(SECRETX)),recursionLevelNestedRadicalsRemoval++,roots(),recursionLevelNestedRadicalsRemoval--,equal(stack[tos-1],symbol(NIL)))return DEBUG&&console.log("roots bailed out because of too much recursion"),pop(),push(p1),restore(),!1;for(L=[],p=0,T=(P=stack[tos-1].tensor.elem).length;p<T;p++)m=P[p],Find(m,symbol(POWER))||L.push(m);if(pop(),0===L.length)return push(p1),restore(),!1;for(x=[],D=[],i=0,O=L.length;i<O;i++)b=L[i],push(b),real(),yyfloat(),x.push(b),D.push(pop().d);return o=x[D.indexOf(Math.max.apply(Math,D))],equalq(f,1,3)?(push(r),push(o),push_integer(3),power(),push_integer(3),push(t),multiply(),push(o),multiply(),add(),divide(),push_rational(1,3),power()):equalq(f,1,2)&&(push(r),push(o),push_integer(2),power(),push(t),add(),divide(),push_rational(1,2),power()),null==(M=pop())?(push(p1),restore(),!1):(push(M),push(o),multiply(),equalq(f,1,3)?(S=pop(),push(M),push(t),push_rational(1,2),power(),multiply(),push(S),add(),simplify()):equalq(f,1,2)&&(S=pop(),push(M),push(t),push_rational(1,2),power(),multiply(),push(S),add(),simplify(),R=pop(),push(R),real(),yyfloat(),N=pop(),isnegativenumber(N)?(push(M),negate(),M=pop(),push(S),negate(),S=pop(),push(M),push(t),push_rational(1,2),power(),multiply(),push(S),add(),simplify()):push(R)),p1=pop(),push(p1),restore(),!0)}return push(p1),restore(),!1}if(iscons(p1)){for(g=tos,a=!1;iscons(p1);)push(car(p1)),a=a||take_care_of_nested_radicals(),p1=cdr(p1);return list(tos-g),restore(),a}return push(p1),restore(),!1},Eval_sin=function(){return push(cadr(p1)),Eval(),sine()},sine=function(){return save(),p1=pop(),car(p1)===symbol(ADD)?sine_of_angle_sum():sine_of_angle(),restore()},sine_of_angle_sum=function(){for(p2=cdr(p1);iscons(p2);){if(p4=car(p2),isnpi(p4))return push(p1),push(p4),subtract(),p3=pop(),push(p3),sine(),push(p4),cosine(),multiply(),push(p3),cosine(),push(p4),sine(),multiply(),void add();p2=cdr(p2)}return sine_of_angle()},sine_of_angle=function(){var r,e;if(car(p1)!==symbol(ARCSIN)){if(isdouble(p1))return r=Math.sin(p1.d),Math.abs(r)<1e-10&&(r=0),void push_double(r);if(isnegative(p1))return push(p1),negate(),sine(),void negate();if(car(p1)===symbol(ARCTAN))return push(cadr(p1)),push_integer(1),push(cadr(p1)),push_integer(2),power(),add(),push_rational(-1,2),power(),void multiply();if(push(p1),push_integer(180),multiply(),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),divide(),(e=pop_integer())<0||isNaN(e))return push(symbol(SIN)),push(p1),void list(2);switch(e%360){case 0:case 180:return push_integer(0);case 30:case 150:return push_rational(1,2);case 210:case 330:return push_rational(-1,2);case 45:case 135:return push_rational(1,2),push_integer(2),push_rational(1,2),power(),multiply();case 225:case 315:return push_rational(-1,2),push_integer(2),push_rational(1,2),power(),multiply();case 60:case 120:return push_rational(1,2),push_integer(3),push_rational(1,2),power(),multiply();case 240:case 300:return push_rational(-1,2),push_integer(3),push_rational(1,2),power(),multiply();case 90:return push_integer(1);case 270:return push_integer(-1);default:return push(symbol(SIN)),push(p1),list(2)}}else push(cadr(p1))},Eval_sinh=function(){return push(cadr(p1)),Eval(),ysinh()},ysinh=function(){return save(),yysinh(),restore()},yysinh=function(){var r;if(r=0,p1=pop(),car(p1)!==symbol(ARCSINH)){if(isdouble(p1))return r=Math.sinh(p1.d),Math.abs(r)<1e-10&&(r=0),void push_double(r);if(!isZeroAtomOrTensor(p1))return push_symbol(SINH),push(p1),list(2);push(zero)}else push(cadr(p1))},subst=function(){var r,e,t,o,n;if(t=0,save(),p3=pop(),(p2=pop())!==symbol(NIL)&&p3!==symbol(NIL)){if(p1=pop(),istensor(p1)){for((p4=alloc_tensor(p1.tensor.nelem)).tensor.ndim=p1.tensor.ndim,t=r=0,o=p1.tensor.ndim;0<=o?r<o:r>o;t=0<=o?++r:--r)p4.tensor.dim[t]=p1.tensor.dim[t];for(t=e=0,n=p1.tensor.nelem;0<=n?e<n:e>n;t=0<=n?++e:--e)push(p1.tensor.elem[t]),push(p2),push(p3),subst(),p4.tensor.elem[t]=pop(),check_tensor_dimensions(p4);push(p4)}else equal(p1,p2)?push(p3):iscons(p1)?(push(car(p1)),push(p2),push(p3),subst(),push(cdr(p1)),push(p2),push(p3),subst(),cons()):push(p1);return restore()}restore()},Eval_sum=function(){var r,e,t,o,n,s,p,i;if(t=0,0,0,e=cadr(p1),o=caddr(p1),issymbol(o)||stop("sum: 2nd arg?"),push(cadddr(p1)),Eval(),n=pop_integer(),isNaN(n))push(p1);else{if(push(caddddr(p1)),Eval(),s=pop_integer(),!isNaN(s)){for(p4=get_binding(o),push_integer(0),t=r=p=n,i=s;p<=i?r<=i:r>=i;t=p<=i?++r:--r)push_integer(t),p5=pop(),set_binding(o,p5),push(e),Eval(),add();return set_binding(o,p4)}push(p1)}},Eval_tan=function(){return push(cadr(p1)),Eval(),tangent()},tangent=function(){return save(),yytangent(),restore()},yytangent=function(){var r,e;if(0,r=0,p1=pop(),car(p1)!==symbol(ARCTAN)){if(isdouble(p1))return r=Math.tan(p1.d),Math.abs(r)<1e-10&&(r=0),void push_double(r);if(isnegative(p1))return push(p1),negate(),tangent(),void negate();if(push(p1),push_integer(180),multiply(),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),divide(),(e=pop_integer())<0||isNaN(e))return push(symbol(TAN)),push(p1),void list(2);switch(e%360){case 0:case 180:return push_integer(0);case 30:case 210:return push_rational(1,3),push_integer(3),push_rational(1,2),power(),multiply();case 150:case 330:return push_rational(-1,3),push_integer(3),push_rational(1,2),power(),multiply();case 45:case 225:return push_integer(1);case 135:case 315:return push_integer(-1);case 60:case 240:return push_integer(3),push_rational(1,2),power();case 120:case 300:return push_integer(3),push_rational(1,2),power(),negate();default:return push(symbol(TAN)),push(p1),list(2)}}else push(cadr(p1))},Eval_tanh=function(){var r;if(r=0,push(cadr(p1)),Eval(),p1=pop(),car(p1)!==symbol(ARCTANH)){if(isdouble(p1))return r=Math.tanh(p1.d),Math.abs(r)<1e-10&&(r=0),void push_double(r);if(!isZeroAtomOrTensor(p1))return push_symbol(TANH),push(p1),list(2);push(zero)}else push(cadr(p1))},Eval_tensor=function(){var r,e,t,o,n,s,p,i,a;for(n=0,0,0,check_tensor_dimensions(p1),p=p1.tensor.nelem,s=p1.tensor.ndim,(p2=alloc_tensor(p)).tensor.ndim=s,n=e=0,i=s;0<=i?e<i:e>i;n=0<=i?++e:--e)p2.tensor.dim[n]=p1.tensor.dim[n];for(r=p1.tensor.elem,o=p2.tensor.elem,check_tensor_dimensions(p2),n=t=0,a=p;0<=a?t<a:t>a;n=0<=a?++t:--t)push(r[n]),Eval(),o[n]=pop();return check_tensor_dimensions(p1),check_tensor_dimensions(p2),push(p2),promote_tensor()},tensor_plus_tensor=function(){var r,e,t,o,n,s,p,i,a,l,u,c;if(p=0,0,0,save(),p2=pop(),(i=(p1=pop()).tensor.ndim)!==p2.tensor.ndim)return push(symbol(NIL)),void restore();for(p=e=0,l=i;0<=l?e<l:e>l;p=0<=l?++e:--e)if(p1.tensor.dim[p]!==p2.tensor.dim[p])return push(symbol(NIL)),void restore();for(a=p1.tensor.nelem,(p3=alloc_tensor(a)).tensor.ndim=i,p=t=0,u=i;0<=u?t<u:t>u;p=0<=u?++t:--t)p3.tensor.dim[p]=p1.tensor.dim[p];for(r=p1.tensor.elem,n=p2.tensor.elem,s=p3.tensor.elem,p=o=0,c=a;0<=c?o<c:o>c;p=0<=c?++o:--o)push(r[p]),push(n[p]),add(),s[p]=pop();return push(p3),restore()},tensor_times_scalar=function(){var r,e,t,o,n,s,p,i,a;for(n=0,0,0,save(),p2=pop(),s=(p1=pop()).tensor.ndim,p=p1.tensor.nelem,(p3=alloc_tensor(p)).tensor.ndim=s,n=e=0,i=s;0<=i?e<i:e>i;n=0<=i?++e:--e)p3.tensor.dim[n]=p1.tensor.dim[n];for(r=p1.tensor.elem,o=p3.tensor.elem,n=t=0,a=p;0<=a?t<a:t>a;n=0<=a?++t:--t)push(r[n]),push(p2),multiply(),o[n]=pop();return push(p3),restore()},scalar_times_tensor=function(){var r,e,t,o,n,s,p,i,a;for(n=0,0,0,save(),p2=pop(),p1=pop(),s=p2.tensor.ndim,p=p2.tensor.nelem,(p3=alloc_tensor(p)).tensor.ndim=s,n=e=0,i=s;0<=i?e<i:e>i;n=0<=i?++e:--e)p3.tensor.dim[n]=p2.tensor.dim[n];for(r=p2.tensor.elem,o=p3.tensor.elem,n=t=0,a=p;0<=a?t<a:t>a;n=0<=a?++t:--t)push(p1),push(r[n]),multiply(),o[n]=pop();return push(p3),restore()},check_tensor_dimensions=function(r){r.tensor.nelem!==r.tensor.elem.length&&console.log("something wrong in tensor dimensions")},is_square_matrix=function(r){return istensor(r)&&2===r.tensor.ndim&&r.tensor.dim[0]===r.tensor.dim[1]?1:0},d_tensor_tensor=function(){var r,e,t,o,n,s,p,i,a,l,u,c,d;if(p=0,i=0,0,0,a=p1.tensor.ndim,l=p1.tensor.nelem,a+1>=MAXDIM)return push_symbol(DERIVATIVE),push(p1),push(p2),void list(3);for((p3=alloc_tensor(l*p2.tensor.nelem)).tensor.ndim=a+1,p=e=0,u=a;0<=u?e<u:e>u;p=0<=u?++e:--e)p3.tensor.dim[p]=p1.tensor.dim[p];for(p3.tensor.dim[a]=p2.tensor.dim[0],r=p1.tensor.elem,n=p2.tensor.elem,s=p3.tensor.elem,p=t=0,c=l;0<=c?t<c:t>c;p=0<=c?++t:--t)for(i=o=0,d=p2.tensor.nelem;0<=d?o<d:o>d;i=0<=d?++o:--o)push(r[p]),push(n[i]),derivative(),s[p*p2.tensor.nelem+i]=pop();return push(p3)},d_scalar_tensor=function(){var r,e,t,o,n;for((p3=alloc_tensor(p2.tensor.nelem)).tensor.ndim=1,p3.tensor.dim[0]=p2.tensor.dim[0],r=p2.tensor.elem,t=p3.tensor.elem,o=e=0,n=p2.tensor.nelem;0<=n?e<n:e>n;o=0<=n?++e:--e)push(p1),push(r[o]),derivative(),t[o]=pop();return push(p3)},d_tensor_scalar=function(){var r,e,t,o,n,s,p;for(n=0,(p3=alloc_tensor(p1.tensor.nelem)).tensor.ndim=p1.tensor.ndim,n=e=0,s=p1.tensor.ndim;0<=s?e<s:e>s;n=0<=s?++e:--e)p3.tensor.dim[n]=p1.tensor.dim[n];for(r=p1.tensor.elem,o=p3.tensor.elem,n=t=0,p=p1.tensor.nelem;0<=p?t<p:t>p;n=0<=p?++t:--t)push(r[n]),push(p2),derivative(),o[n]=pop();return push(p3)},compare_tensors=function(r,e){var t,o,n,s,p;if(n=0,r.tensor.ndim<e.tensor.ndim)return-1;if(r.tensor.ndim>e.tensor.ndim)return 1;for(n=t=0,s=r.tensor.ndim;0<=s?t<s:t>s;n=0<=s?++t:--t){if(r.tensor.dim[n]<e.tensor.dim[n])return-1;if(r.tensor.dim[n]>e.tensor.dim[n])return 1}for(n=o=0,p=r.tensor.nelem;0<=p?o<p:o>p;n=0<=p?++o:--o)if(!equal(r.tensor.elem[n],e.tensor.elem[n]))return lessp(r.tensor.elem[n],e.tensor.elem[n])?-1:1;return 0},power_tensor=function(){var r,e,t,o,n,s,p,i;if(t=0,0,n=0,o=p1.tensor.ndim-1,p1.tensor.dim[0]!==p1.tensor.dim[o])return push_symbol(POWER),push(p1),push(p2),void list(3);if(push(p2),n=pop_integer(),isNaN(n))return push_symbol(POWER),push(p1),push(p2),void list(3);if(0===n){for(2!==p1.tensor.ndim&&stop("power(tensor,0) with tensor rank not equal to 2"),n=p1.tensor.dim[0],(p1=alloc_tensor(n*n)).tensor.ndim=2,p1.tensor.dim[0]=n,p1.tensor.dim[1]=n,t=r=0,s=n;0<=s?r<s:r>s;t=0<=s?++r:--r)p1.tensor.elem[n*t+t]=one;return check_tensor_dimensions(p1),void push(p1)}for(n<0&&(n=-n,push(p1),inv(),p1=pop()),push(p1),i=[],t=e=1,p=n;(1<=p?e<p:e>p)&&(push(p1),inner(),!isZeroAtomOrTensor(stack[tos-1]));t=1<=p?++e:--e)i.push(void 0);return i},copy_tensor=function(){var r,e,t,o,n;for(t=0,save(),p1=pop(),(p2=alloc_tensor(p1.tensor.nelem)).tensor.ndim=p1.tensor.ndim,t=r=0,o=p1.tensor.ndim;0<=o?r<o:r>o;t=0<=o?++r:--r)p2.tensor.dim[t]=p1.tensor.dim[t];for(t=e=0,n=p1.tensor.nelem;0<=n?e<n:e>n;t=0<=n?++e:--e)p2.tensor.elem[t]=p1.tensor.elem[t];return check_tensor_dimensions(p1),check_tensor_dimensions(p2),push(p2),restore()},promote_tensor=function(){var r,e,t,o,n,s,p,i,a,l,u,c,d,_,m;if(s=0,p=0,i=0,0,0,save(),p1=pop(),!istensor(p1))return push(p1),void restore();for(p2=p1.tensor.elem[0],s=r=1,u=p1.tensor.nelem;1<=u?r<u:r>u;s=1<=u?++r:--r)compatible(p2,p1.tensor.elem[s])||stop("Cannot promote tensor due to inconsistent tensor components.");if(!istensor(p2))return push(p1),void restore();for((a=p1.tensor.ndim+p2.tensor.ndim)>MAXDIM&&stop("tensor rank > "+MAXDIM),l=p1.tensor.nelem*p2.tensor.nelem,(p3=alloc_tensor(l)).tensor.ndim=a,s=e=0,c=p1.tensor.ndim;0<=c?e<c:e>c;s=0<=c?++e:--e)p3.tensor.dim[s]=p1.tensor.dim[s];for(p=t=0,d=p2.tensor.ndim;0<=d?t<d:t>d;p=0<=d?++t:--t)p3.tensor.dim[s+p]=p2.tensor.dim[p];for(i=0,s=o=0,_=p1.tensor.nelem;0<=_?o<_:o>_;s=0<=_?++o:--o)for(p=n=0,m=(p2=p1.tensor.elem[s]).tensor.nelem;0<=m?n<m:n>m;p=0<=m?++n:--n)p3.tensor.elem[i++]=p2.tensor.elem[p];return check_tensor_dimensions(p2),check_tensor_dimensions(p3),push(p3),restore()},compatible=function(r,e){var t,o,n;if(!istensor(r)&&!istensor(e))return 1;if(!istensor(r)||!istensor(e))return 0;if(r.tensor.ndim!==e.tensor.ndim)return 0;for(o=t=0,n=r.tensor.ndim;0<=n?t<n:t>n;o=0<=n?++t:--t)if(r.tensor.dim[o]!==e.tensor.dim[o])return 0;return 1},Eval_test=function(){var r,e;for(e=p1,p1=cdr(p1);iscons(p1);){if(cdr(p1)===symbol(NIL))return push(car(p1)),void Eval();if(null==(r=isZeroLikeOrNonZeroLikeOrUndetermined(car(p1))))return void push(e);if(r)return push(cadr(p1)),void Eval();p1=cddr(p1)}return push_integer(0)},Eval_testeq=function(){var r,e,t;if(e=p1,push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),subtract(),t=pop(),r=isZeroLikeOrNonZeroLikeOrUndetermined(t))push_integer(0);else if(null==r||r)if(push(cadr(p1)),Eval(),simplify(),push(caddr(p1)),Eval(),simplify(),subtract(),t=pop(),r=isZeroLikeOrNonZeroLikeOrUndetermined(t))push_integer(0);else{if(null==r||r)return push(e);push_integer(1)}else push_integer(1)},Eval_testge=function(){var r,e;if(e=p1,null!=(r=cmp_args()))return push_integer(r>=0?1:0);push(e)},Eval_testgt=function(){var r,e;if(e=p1,null!=(r=cmp_args()))return push_integer(r>0?1:0);push(e)},Eval_testle=function(){var r,e;if(e=p1,null!=(r=cmp_args()))return push_integer(r<=0?1:0);push(e)},Eval_testlt=function(){var r,e;if(e=p1,null!=(r=cmp_args()))return push_integer(r<0?1:0);push(e)},Eval_not=function(){var r,e;return e=p1,null==(r=isZeroLikeOrNonZeroLikeOrUndetermined(cadr(p1)))?push(e):push_integer(r?0:1)},Eval_and=function(){var r,e,t,o;for(r=cdr(o=p1),t=!1;iscons(r);)if(null==(e=isZeroLikeOrNonZeroLikeOrUndetermined(car(r))))t=!0,r=cdr(r);else if(e)r=cdr(r);else if(!e)return void push_integer(0);return t?push(o):push_integer(1)},Eval_or=function(){var r,e,t,o;for(e=cdr(o=p1),t=!1;iscons(e);)if(null==(r=isZeroLikeOrNonZeroLikeOrUndetermined(car(e))))t=!0,e=cdr(e);else{if(r)return void push_integer(1);r||(e=cdr(e))}return t?push(o):push_integer(0)},cmp_args=function(){var r;if(r=0,push(cadr(p1)),Eval(),simplify(),push(caddr(p1)),Eval(),simplify(),subtract(),(p1=pop()).k!==NUM&&p1.k!==DOUBLE&&(push(p1),yyfloat(),Eval(),p1=pop()),isZeroAtomOrTensor(p1))return 0;switch(p1.k){case NUM:r=-1===MSIGN(p1.q.a)?-1:1;break;case DOUBLE:r=p1.d<0?-1:1;break;default:r=null}return r},transform=function(r,e){var t,o,n,s,p,i,a,l,u,c,d,_,m,f,h,g,b;if(0,save(),p1=null,p4=pop(),p3=pop(),DEBUG&&console.log("         !!!!!!!!!   transform on: "+p3),saveMetaBindings(),set_binding(symbol(METAX),p4),h=tos,push_integer(1),push(p3),push(p4),polyform(),push(p4),s=tos-2,decomp(e),u=tos-s,DEBUG)for(console.log("\t"+u+" decomposed elements ====== "),i=t=0,c=u;0<=c?t<c:t>c;i=0<=c?++t:--t)console.log("\tdecomposition element "+i+": "+stack[tos-1-i]);if(g=!1,e){if(!isNumericAtom(p3))if(f=r,DEBUG&&console.log("applying transform: "+f),DEBUG&&console.log("scanning table entry "+f),push(f),push(symbol(SYMBOL_A_UNDERSCORE)),push(symbol(METAA)),subst(),push(symbol(SYMBOL_B_UNDERSCORE)),push(symbol(METAB)),subst(),push(symbol(SYMBOL_X_UNDERSCORE)),push(symbol(METAX)),subst(),p1=pop(),p5=car(p1),DEBUG&&console.log("template expression: "+p5),p6=cadr(p1),p7=cddr(p1),f_equals_a(h,e))g=!0;else{for(DEBUG&&console.log("p3 at this point: "+p3),b=[],DEBUG&&console.log("car(p3): "+car(p3)),iscons(d=p3)&&(b.push(car(p3)),d=cdr(p3));iscons(d);)_=car(d),d=cdr(d),DEBUG&&console.log("tos before recursive transform: "+tos),push(_),push_symbol(NIL),DEBUG&&console.log("testing: "+_),DEBUG&&console.log("about to try to simplify other term: "+_),m=transform(r,e),g=g||m,b.push(pop()),DEBUG&&console.log("tried to simplify other term: "+_+" ...successful?: "+m+" ...transformed: "+b[b.length-1]);if(0!==b.length){for(o=0,a=b.length;o<a;o++)i=b[o],push(i);list(b.length),p6=pop()}}}else for(n=0,l=r.length;n<l;n++)if(p=r[n],DEBUG&&(console.log("scanning table entry "+p),(p+"").indexOf("f(sqrt(a+b*x),2/3*1/b*sqrt((a+b*x)^3))")),p&&(scan_meta(p),p1=pop(),p5=cadr(p1),p6=caddr(p1),p7=cdddr(p1),f_equals_a(h,e))){g=!0;break}return moveTos(h),g?(push(p6),Eval(),p1=pop(),g=!0):p1=e?p3:symbol(NIL),restoreMetaBindings(),push(p1),restore(),g},saveMetaBindings=function(){return push(get_binding(symbol(METAA))),push(get_binding(symbol(METAB))),push(get_binding(symbol(METAX)))},restoreMetaBindings=function(){return set_binding(symbol(METAX),pop()),set_binding(symbol(METAB),pop()),set_binding(symbol(METAA),pop())},f_equals_a=function(r,e){var t,o,n,s,p,i,a,l,u;for(n=0,s=0,n=t=i=r,a=tos;i<=a?t<a:t>a;n=i<=a?++t:--t)for(set_binding(symbol(METAA),stack[n]),DEBUG&&console.log("  binding METAA to "+get_binding(symbol(METAA))),s=o=l=r,u=tos;l<=u?o<u:o>u;s=l<=u?++o:--o){for(set_binding(symbol(METAB),stack[s]),DEBUG&&console.log("  binding METAB to "+get_binding(symbol(METAB))),p1=p7;iscons(p1)&&(push(car(p1)),Eval(),p2=pop(),!isZeroAtomOrTensor(p2));)p1=cdr(p1);if(!iscons(p1)&&(push(p3),DEBUG&&console.log("about to evaluate template expression: "+p5+" binding METAA to "+get_binding(symbol(METAA))+" and binding METAB to "+get_binding(symbol(METAB))+" and binding METAX to "+get_binding(symbol(METAX))),push(p5),e&&(p=expanding,expanding=!1),Eval(),e&&(expanding=p),DEBUG&&console.log("  comparing "+stack[tos-1]+" to: "+stack[tos-2]),subtract(),p1=pop(),isZeroAtomOrTensor(p1)))return DEBUG&&(console.log("binding METAA to "+get_binding(symbol(METAA))),console.log("binding METAB to "+get_binding(symbol(METAB))),console.log("binding METAX to "+get_binding(symbol(METAX))),console.log("comparing "+p3+" to: "+p5)),1}return 0},Eval_user_function=function(){var r,e;if(DEBUG&&console.log("Eval_user_function evaluating: "+car(p1)),car(p1)!==symbol(SYMBOL_D)||get_binding(symbol(SYMBOL_D))!==symbol(SYMBOL_D)){if(push(car(p1)),Eval(),r=pop(),isNumericAtom(r)?stop("expected function invocation, found multiplication instead. Use '*' symbol explicitly for multiplication."):istensor(r)?stop("expected function invocation, found tensor product instead. Use 'dot/inner' explicitly."):isstr(r)&&stop("expected function, found string instead."),p3=car(cdr(r)),p4=car(cdr(cdr(r))),p5=cdr(p1),car(r)===symbol(FUNCTION)&&r!==car(p1)){for(p1=p4,p2=p5,e=tos;iscons(p1)&&iscons(p2);)push(car(p1)),push(car(p2)),p1=cdr(p1),p2=cdr(p2);return list(tos-e),p6=pop(),push(p3),iscons(p6)&&(push(p6),rewrite_args()),Eval()}for(e=tos,push(r),p1=p5;iscons(p1);)push(car(p1)),Eval(),p1=cdr(p1);list(tos-e)}else Eval_derivative()},rewrite_args=function(){var r,e;if(e=0,save(),p2=pop(),p1=pop(),istensor(p1))return e=rewrite_args_tensor(),restore(),e;if(iscons(p1)){for(r=tos,car(p1)===car(p2)?(push_symbol(EVAL),push(car(cdr(p2))),list(2)):push(car(p1)),p1=cdr(p1);iscons(p1);)push(car(p1)),push(p2),e+=rewrite_args(),p1=cdr(p1);return list(tos-r),restore(),e}if(!issymbol(p1))return push(p1),restore(),0;for(p3=p2;iscons(p3);){if(p1===car(p3))return push(cadr(p3)),restore(),1;p3=cddr(p3)}return p3=get_binding(p1),push(p3),p1!==p3&&(push(p2),0===(e=rewrite_args())&&(pop(),push(p1))),restore(),e},rewrite_args_tensor=function(){var r,e,t,o;for(t=0,e=0,push(p1),copy_tensor(),e=r=0,o=(p1=pop()).tensor.nelem;0<=o?r<o:r>o;e=0<=o?++r:--r)push(p1.tensor.elem[e]),push(p2),t+=rewrite_args(),p1.tensor.elem[e]=pop();return check_tensor_dimensions(p1),push(p1),t},Eval_zero=function(){var r,e,t,o,n,s,p,i;for(t=0,o=[],n=0,s=0,t=r=0,p=MAXDIM;0<=p?r<p:r>p;t=0<=p?++r:--r)o[t]=0;for(n=1,s=0,p2=cdr(p1);iscons(p2);){if(push(car(p2)),Eval(),(t=pop_integer())<1||isNaN(t))return void push(zero);n*=t,o[s++]=t,p2=cdr(p2)}if(0!==s){for((p1=alloc_tensor(n)).tensor.ndim=s,t=e=0,i=s;0<=i?e<i:e>i;t=0<=i?++e:--e)p1.tensor.dim[t]=o[t];return push(p1)}push(zero)},allocatedId=0,alloc_tensor=function(r){var e,t,o,n;for(t=0,(o=new U).k=TENSOR,o.tensor=new tensor,o.tensor.nelem=r,t=e=0,n=r;0<=n?e<n:e>n;t=0<=n?++e:--e)o.tensor.elem[t]=zero;return o.tensor.allocatedId=allocatedId,allocatedId++,check_tensor_dimensions(o),o},Find=function(r,e){var t,o,n;if(o=0,equal(r,e))return 1;if(istensor(r)){for(o=t=0,n=r.tensor.nelem;0<=n?t<n:t>n;o=0<=n?++t:--t)if(Find(r.tensor.elem[o],e))return 1;return 0}for(;iscons(r);){if(Find(car(r),e))return 1;r=cdr(r)}return 0},findPossibleClockForm=function(r){var e,t,o;if(t=0,isimaginaryunit(r))return 0;if(car(r)===symbol(POWER)&&!isinteger(caddr(p1))&&Find(cadr(r),imaginaryunit))return 1;if(car(r)===symbol(POWER)&&equaln(cadr(r),-1)&&!isinteger(caddr(p1)))return 1;if(istensor(r)){for(t=e=0,o=r.tensor.nelem;0<=o?e<o:e>o;t=0<=o?++e:--e)if(findPossibleClockForm(r.tensor.elem[t]))return 1;return 0}for(;iscons(r);){if(findPossibleClockForm(car(r)))return 1;r=cdr(r)}return 0},findPossibleExponentialForm=function(r){var e,t,o;if(t=0,car(r)===symbol(POWER)&&cadr(r)===symbol(E))return Find(caddr(r),imaginaryunit);if(istensor(r)){for(t=e=0,o=r.tensor.nelem;0<=o?e<o:e>o;t=0<=o?++e:--e)if(findPossibleExponentialForm(r.tensor.elem[t]))return 1;return 0}for(;iscons(r);){if(findPossibleExponentialForm(car(r)))return 1;r=cdr(r)}return 0},$.Find=Find,init=function(){var r,e,t;if(e=0,flag=0,reset_after_error(),chainOfUserSymbolsNotFunctionsBeingEvaluated=[],!flag){for(flag=1,e=r=0,t=NSYM;0<=t?r<t:r>t;e=0<=t?++r:--r)symtab[e]=new U,symtab[e].k=SYM,binding[e]=symtab[e],isSymbolReclaimable[e]=!1;return defn()}},defn_str=['version="'+version+'"',"e=exp(1)","i=sqrt(-1)","autoexpand=1","assumeRealVariables=1","trange=[-pi,pi]","xrange=[-10,10]","yrange=[-10,10]","last=0","trace=0","printLeaveEAlone=1","printLeaveXAlone=0","cross(u,v)=[u[2]*v[3]-u[3]*v[2],u[3]*v[1]-u[1]*v[3],u[1]*v[2]-u[2]*v[1]]","curl(v)=[d(v[3],y)-d(v[2],z),d(v[1],z)-d(v[3],x),d(v[2],x)-d(v[1],y)]","div(v)=d(v[1],x)+d(v[2],y)+d(v[3],z)","ln(x)=log(x)"],defn=function(){var r,e,t,o,n;for(p0=symbol(NIL),p1=symbol(NIL),p2=symbol(NIL),p3=symbol(NIL),p4=symbol(NIL),p5=symbol(NIL),p6=symbol(NIL),p7=symbol(NIL),p8=symbol(NIL),p9=symbol(NIL),std_symbol("abs",ABS),std_symbol("add",ADD),std_symbol("adj",ADJ),std_symbol("and",AND),std_symbol("approxratio",APPROXRATIO),std_symbol("acos",ARCCOS),std_symbol("acosh",ARCCOSH),std_symbol("asin",ARCSIN),std_symbol("asinh",ARCSINH),std_symbol("atan",ARCTAN),std_symbol("atanh",ARCTANH),std_symbol("arg",ARG),std_symbol("atomize",ATOMIZE),std_symbol("besselj",BESSELJ),std_symbol("bessely",BESSELY),std_symbol("binding",BINDING),std_symbol("binomial",BINOMIAL),std_symbol("ceiling",CEILING),std_symbol("check",CHECK),std_symbol("choose",CHOOSE),std_symbol("circexp",CIRCEXP),std_symbol("clear",CLEAR),std_symbol("clearall",CLEARALL),std_symbol("clearpatterns",CLEARPATTERNS),std_symbol("clock",CLOCK),std_symbol("coeff",COEFF),std_symbol("cofactor",COFACTOR),std_symbol("condense",CONDENSE),std_symbol("conj",CONJ),std_symbol("contract",CONTRACT),std_symbol("cos",COS),std_symbol("cosh",COSH),std_symbol("decomp",DECOMP),std_symbol("defint",DEFINT),std_symbol("deg",DEGREE),std_symbol("denominator",DENOMINATOR),std_symbol("det",DET),std_symbol("derivative",DERIVATIVE),std_symbol("dim",DIM),std_symbol("dirac",DIRAC),std_symbol("divisors",DIVISORS),std_symbol("do",DO),std_symbol("dot",DOT),std_symbol("draw",DRAW),std_symbol("dsolve",DSOLVE),std_symbol("erf",ERF),std_symbol("erfc",ERFC),std_symbol("eigen",EIGEN),std_symbol("eigenval",EIGENVAL),std_symbol("eigenvec",EIGENVEC),std_symbol("eval",EVAL),std_symbol("exp",EXP),std_symbol("expand",EXPAND),std_symbol("expcos",EXPCOS),std_symbol("expsin",EXPSIN),std_symbol("factor",FACTOR),std_symbol("factorial",FACTORIAL),std_symbol("factorpoly",FACTORPOLY),std_symbol("filter",FILTER),std_symbol("float",FLOATF),std_symbol("floor",FLOOR),std_symbol("for",FOR),std_symbol("function",FUNCTION),std_symbol("Gamma",GAMMA),std_symbol("gcd",GCD),std_symbol("hermite",HERMITE),std_symbol("hilbert",HILBERT),std_symbol("imag",IMAG),std_symbol("component",INDEX),std_symbol("inner",INNER),std_symbol("integral",INTEGRAL),std_symbol("inv",INV),std_symbol("invg",INVG),std_symbol("isinteger",ISINTEGER),std_symbol("isprime",ISPRIME),std_symbol("laguerre",LAGUERRE),std_symbol("lcm",LCM),std_symbol("leading",LEADING),std_symbol("legendre",LEGENDRE),std_symbol("log",LOG),std_symbol("lookup",LOOKUP),std_symbol("mod",MOD),std_symbol("multiply",MULTIPLY),std_symbol("not",NOT),std_symbol("nroots",NROOTS),std_symbol("number",NUMBER),std_symbol("numerator",NUMERATOR),std_symbol("operator",OPERATOR),std_symbol("or",OR),std_symbol("outer",OUTER),std_symbol("pattern",PATTERN),std_symbol("patternsinfo",PATTERNSINFO),std_symbol("polar",POLAR),std_symbol("power",POWER),std_symbol("prime",PRIME),std_symbol("print",PRINT),std_symbol("print2dascii",PRINT2DASCII),std_symbol("printcomputer",PRINTFULL),std_symbol("printlatex",PRINTLATEX),std_symbol("printlist",PRINTLIST),std_symbol("printhuman",PRINTPLAIN),std_symbol("printLeaveEAlone",PRINT_LEAVE_E_ALONE),std_symbol("printLeaveXAlone",PRINT_LEAVE_X_ALONE),std_symbol("product",PRODUCT),std_symbol("quote",QUOTE),std_symbol("quotient",QUOTIENT),std_symbol("rank",RANK),std_symbol("rationalize",RATIONALIZE),std_symbol("real",REAL),std_symbol("rect",YYRECT),std_symbol("roots",ROOTS),std_symbol("round",ROUND),std_symbol("equals",SETQ),std_symbol("sgn",SGN),std_symbol("silentpattern",SILENTPATTERN),std_symbol("simplify",SIMPLIFY),std_symbol("sin",SIN),std_symbol("sinh",SINH),std_symbol("shape",SHAPE),std_symbol("sqrt",SQRT),std_symbol("stop",STOP),std_symbol("subst",SUBST),std_symbol("sum",SUM),std_symbol("symbolsinfo",SYMBOLSINFO),std_symbol("tan",TAN),std_symbol("tanh",TANH),std_symbol("taylor",TAYLOR),std_symbol("test",TEST),std_symbol("testeq",TESTEQ),std_symbol("testge",TESTGE),std_symbol("testgt",TESTGT),std_symbol("testle",TESTLE),std_symbol("testlt",TESTLT),std_symbol("transpose",TRANSPOSE),std_symbol("unit",UNIT),std_symbol("zero",ZERO),std_symbol("nil",NIL),std_symbol("autoexpand",AUTOEXPAND),std_symbol("bake",BAKE),std_symbol("assumeRealVariables",ASSUME_REAL_VARIABLES),std_symbol("last",LAST),std_symbol("lastprint",LAST_PRINT),std_symbol("last2dasciiprint",LAST_2DASCII_PRINT),std_symbol("lastfullprint",LAST_FULL_PRINT),std_symbol("lastlatexprint",LAST_LATEX_PRINT),std_symbol("lastlistprint",LAST_LIST_PRINT),std_symbol("lastplainprint",LAST_PLAIN_PRINT),std_symbol("trace",TRACE),std_symbol("~",YYE),std_symbol("$DRAWX",DRAWX),std_symbol("$METAA",METAA),std_symbol("$METAB",METAB),std_symbol("$METAX",METAX),std_symbol("$SECRETX",SECRETX),std_symbol("version",VERSION),std_symbol("pi",PI),std_symbol("a",SYMBOL_A),std_symbol("b",SYMBOL_B),std_symbol("c",SYMBOL_C),std_symbol("d",SYMBOL_D),std_symbol("i",SYMBOL_I),std_symbol("j",SYMBOL_J),std_symbol("n",SYMBOL_N),std_symbol("r",SYMBOL_R),std_symbol("s",SYMBOL_S),std_symbol("t",SYMBOL_T),std_symbol("x",SYMBOL_X),std_symbol("y",SYMBOL_Y),std_symbol("z",SYMBOL_Z),std_symbol("I",SYMBOL_IDENTITY_MATRIX),std_symbol("a_",SYMBOL_A_UNDERSCORE),std_symbol("b_",SYMBOL_B_UNDERSCORE),std_symbol("x_",SYMBOL_X_UNDERSCORE),std_symbol("$C1",C1),std_symbol("$C2",C2),std_symbol("$C3",C3),std_symbol("$C4",C4),std_symbol("$C5",C5),std_symbol("$C6",C6),defineSomeHandyConstants(),o=codeGen,codeGen=!1,t=r=0,n=defn_str.length;0<=n?r<n:r>n;t=0<=n?++r:--r)e=defn_str[t],scan(e),DEBUG&&(console.log("... evaling "+e),console.log("top of stack:"),console.log(print_list(stack[tos-1]))),Eval(),pop();return codeGen=o},defineSomeHandyConstants=function(){return push_integer(0),zero=pop(),push_integer(1),one=pop(),push_double(1),one_as_double=pop(),push_symbol(POWER),DEBUG&&console.log(print_list(stack[tos-1])),push_integer(-1),DEBUG&&console.log(print_list(stack[tos-1])),push_rational(1,2),DEBUG&&console.log(print_list(stack[tos-1])),list(3),DEBUG&&console.log(print_list(stack[tos-1])),imaginaryunit=pop()},mcmp=function(r,e){return r.compare(e)},mcmpint=function(r,e){var t;return t=bigInt(e),mcmp(r,t)},strcmp=function(r,e){return r===e?0:r>e?1:-1},doubleToReasonableString=function(r){var e;return codeGen?r+"":(-1===(e=""+parseFloat(r.toFixed(6))).indexOf(".")&&(e+=".0"),e)},clear_term=function(){},isspace=function(r){return null!=r&&(" "===r||"\t"===r||"\n"===r||"\v"===r||"\f"===r||"\r"===r)},isdigit=function(r){return null!=r&&/^\d+$/.test(r)},isalpha=function(r){return null!=r&&-1===r.search(/[^A-Za-z]/)},isalphaOrUnderscore=function(r){return null!=r&&-1===r.search(/[^A-Za-z_]/)},isunderscore=function(r){return null!=r&&-1===r.search(/_/)},isalnumorunderscore=function(r){return null!=r&&(isalphaOrUnderscore(r)||isdigit(r))},count=function(r){var e;if(iscons(r))for(e=0;iscons(r);)e+=count(car(r))+1,r=cdr(r);else e=1;return e},countOccurrencesOfSymbol=function(r,e){var t;if(t=0,iscons(e))for(;iscons(e);)t+=countOccurrencesOfSymbol(r,car(e)),e=cdr(e);else equal(r,e)&&(t=1);return t},countsize=function(r){var e,t,o,n;if(o=0,istensor(r))for(t=e=0,n=r.tensor.nelem;0<=n?e<n:e>n;t=0<=n?++e:--e)o+=r.tensor.elem[t];else if(iscons(r))for(;iscons(r);)o+=count(car(r))+1,r=cdr(r);else o=1;return o},stop=function(r){var e;throw errorMessage+="Stop: ",e=errorMessage+=r,errorMessage="",moveTos(0),new Error(e)},findDependenciesInScript=function(r,e){var t,o,n,s,p,i,a,l,u,c,d,_,m,f,h,g,b,E,v,y,A,T,O,S,M,I,R,N,x,L,k,D,P,U,B,w,C,G,q,F,Y,X,W,z,$,V,Z;for(DEBUG&&console.log("stringToBeParsed: "+r),W=(new Date).getTime(),!0,codeGen=!0,symbolsDependencies={},symbolsHavingReassignments=[],symbolsInExpressionsWithoutAssignments=[],patternHasBeenFound=!1,y=0,"","",L=0,m={affectsVariables:[],affectedBy:[]},Y=r;;){try{errorMessage="",check_stack(),DEBUG&&console.log("findDependenciesInScript: scanning"),L=scan(r.substring(y)),DEBUG&&console.log("scanned"),pop(),check_stack()}catch(r){h=r,PRINTOUTRESULT&&console.log(h),errorMessage=h+"",reset_after_error();break}if(0===L)break;y+=L}X="",DEBUG&&console.log("all local dependencies ----------------"),X+="All local dependencies: ";for(A in symbolsDependencies){for(V=symbolsDependencies[A],DEBUG&&console.log("variable "+A+" depends on: "),m.affectsVariables.push(A),X+=" variable "+A+" depends on: ",t=0,T=V.length;t<T;t++)E=V[t],DEBUG&&console.log("\t\t"+E),"'"!==E[0]&&m.affectedBy.push(E),X+=E+", ";X+="; "}for(X+=". ",DEBUG&&console.log("Symbols with reassignments ----------------"),X+="Symbols with reassignments: ",o=0,O=symbolsHavingReassignments.length;o<O;o++)A=symbolsHavingReassignments[o],-1===m.affectedBy.indexOf(A)&&(m.affectedBy.push(A),X+=A+", ");for(X+=". ",DEBUG&&console.log("Symbols in expressions without assignments ----------------"),X+="Symbols in expressions without assignments: ",n=0,S=symbolsInExpressionsWithoutAssignments.length;n<S;n++)A=symbolsInExpressionsWithoutAssignments[n],-1===m.affectedBy.indexOf(A)&&(m.affectedBy.push(A),X+=A+", ");if(X+=". ",m.affectedBy.push("PATTERN_DEPENDENCY"),patternHasBeenFound&&(m.affectsVariables.push("PATTERN_DEPENDENCY"),X+=" - PATTERN_DEPENDENCY inserted - "),DEBUG&&console.log("All dependencies recursively ----------------"),X+="All dependencies recursively: ",F=["",""],b="",B="",""===errorMessage&&!e){try{"","",F=run(r,!0),"",""}catch(r){h=r,PRINTOUTRESULT&&console.log(h),errorMessage=h+"",init()}if(""===errorMessage)for(A in symbolsDependencies){for(codeGen=!0,DEBUG&&console.log("\tvariable "+A+" is: "+get_binding(usr_symbol(A)).toString()),codeGen=!1,DEBUG&&console.log("\tvariable "+A+" depends on: "),X+=" variable "+A+" depends on: ",recursiveDependencies(A,w=[],[],Z=[],[],d=[]),s=0,M=Z.length;s<M;s++)E=Z[s],DEBUG&&console.log("\t\t--\x3e cycle through "+E);for(p=0,I=w.length;p<I;p++)E=w[p],DEBUG&&console.log("\t\t"+E),X+=E+", ";for(X+="; ",i=0,R=d.length;i<R;i++)X+=" "+(E=d[i])+", ";for(DEBUG&&console.log("\tcode generation:"+A+" is: "+get_binding(usr_symbol(A)).toString()),push(get_binding(usr_symbol(A))),G=[],q=[],a=0,N=w.length;a<N;a++)"'"===(f=w[a])[0]&&(_=f.substring(1),P=usr_symbol(_),k=usr_symbol("AVOID_BINDING_TO_EXTERNAL_SCOPE_VALUE"+_),G.push(P),q.push(k),push(P),push(k),subst(),DEBUG&&console.log("after substitution: "+stack[tos-1]));try{simplifyForCodeGeneration()}catch(r){h=r,PRINTOUTRESULT&&console.log(h),errorMessage=h+"",init()}for(v=l=0,C=G.length;0<=C?l<C:l>C;v=0<=C?++l:--l)push(q[v]),push(G[v]),subst();if(clearRenamedVariablesToAvoidBindingToExternalScope(),""===errorMessage){if(z=pop(),collectUserSymbols(z,$=[]),"","",codeGen=!0,g=z.toString(),codeGen=!1,D=printMode,printMode=PRINTMODE_LATEX,c=z.toString(),printMode=D,-1!==Z.indexOf(A))b+="// "+A+" is part of a cyclic dependency, no code generated.",B+="#"+A+" is part of a cyclic dependency, no code generated.";else if(0!==($=($=$.filter(function(r){return-1===predefinedSymbolsInGlobalScope_doNotTrackInDependencies.indexOf(r+"")})).filter(function(r){return-1!==w.indexOf(r+"")||-1!==w.indexOf("'"+r)})).length){for(U="(",u=0,x=$.length;u<x;u++)(E=$[u]).printname!==A&&(U+=E.printname+", ");U=U.replace(/, $/gm,""),b+=A+" = function "+(U+=")")+" { return ( "+g+" ); }",B+=A+U+" = "+c}else b+=A+" = "+g+";",B+=A+" = "+c;b+="\n",B+="\n",DEBUG&&console.log("\t\t"+b)}}}return b=b.replace(/\n$/gm,""),B=B.replace(/\n$/gm,""),symbolsDependencies={},symbolsHavingReassignments=[],patternHasBeenFound=!1,symbolsInExpressionsWithoutAssignments=[],DEBUG&&console.log("testable string: "+X),TIMING_DEBUGS&&console.log("findDependenciesInScript time for: "+Y+" : "+((new Date).getTime()-W)+"ms"),[X,F[0],b,B,F[1],errorMessage,m]},recursiveDependencies=function(r,e,t,o,n,s){var p,i,a,l,u,c,d,_;if(t.push(r),null!=symbolsDependencies[n[n.length-1]]&&-1!==symbolsDependencies[n[n.length-1]].indexOf("'"+r))return DEBUG&&console.log("can't keep following the chain of "+r+" because it's actually a variable bound to a parameter"),-1===e.indexOf("'"+r)&&-1===e.indexOf(r)&&e.push(r),e;if(n.push(r),null==symbolsDependencies[r])return-1===e.indexOf(r)&&e.push(r),e;for(p=0,c=(_=symbolsDependencies[r]).length;p<c;p++)if(l=_[p],-1!==n.indexOf(l)){for(DEBUG&&console.log("\tfound cycle:"),a="",i=0,d=n.length;i<d;i++)u=n[i],-1===o.indexOf(u)&&o.push(u),DEBUG&&console.log(u+" --\x3e "),a+=u+" --\x3e ";DEBUG&&console.log(" ... then "+l+" again"),a+=" ... then "+l+" again",s.push(a),-1===o.indexOf(l)&&o.push(l)}else recursiveDependencies(l,e,t,o,n,s),n.pop();return e},inited=!1,latexErrorSign="\\rlap{\\large\\color{red}\\bigtriangleup}{\\ \\ \\tiny\\color{red}!}",turnErrorMessageToLatex=function(r){return r="$$\\text{"+(r=(r=(r=(r=(r=(r=(r=r.replace(/\n/g,"")).replace(/_/g,"} \\_ \\text{")).replace(new RegExp(String.fromCharCode(transpose_unicode),"g"),"}{}^{T}\\text{")).replace(new RegExp(String.fromCharCode(dotprod_unicode),"g"),"}\\cdot \\text{")).replace("Stop:","}  \\quad \\text{Stop:")).replace("->","}  \\rightarrow \\text{")).replace("?","}\\enspace "+latexErrorSign+" \\enspace  \\text{")).replace(/\n/g,"")+"}$$"},normaliseDots=function(r){return r=(r=(r=(r=(r=r.replace(new RegExp(String.fromCharCode(8901),"g"),String.fromCharCode(dotprod_unicode))).replace(new RegExp(String.fromCharCode(8226),"g"),String.fromCharCode(dotprod_unicode))).replace(new RegExp(String.fromCharCode(12539),"g"),String.fromCharCode(dotprod_unicode))).replace(new RegExp(String.fromCharCode(55296),"g"),String.fromCharCode(dotprod_unicode))).replace(new RegExp(String.fromCharCode(65381),"g"),String.fromCharCode(dotprod_unicode))},TIMING_DEBUGS=!1,run=function(r,e){var t,o,n,s,p,i,a,l,u,c,d;if(null==e&&(e=!1),c=(new Date).getTime(),"selftest"!==(r=normaliseDots(r))){for(inited||(inited=!0,init()),0,a=0,i=0,o="",t="";;){try{errorMessage="",check_stack(),a=scan(r.substring(i)),p1=pop(),check_stack()}catch(r){p=r,PRINTOUTRESULT&&console.log(p),o+=p.message,e&&(u=turnErrorMessageToLatex(p.message),t+=u),reset_after_error();break}if(0===a)break;i+=a,push(p1),!1;try{stringsEmittedByUserPrintouts="",top_level_eval(),p2=pop(),check_stack(),isstr(p2)&&(DEBUG&&console.log(p2.str),DEBUG&&console.log("\n")),p2===symbol(NIL)?(s=stringsEmittedByUserPrintouts,e&&(n="$$"+stringsEmittedByUserPrintouts+"$$")):(s=print_expr(p2),s+="\n",e&&(n="$$"+collectLatexStringFromReturnValue(p2)+"$$",DEBUG&&console.log("collectedLatexResult: "+n))),o+=s,e&&(t+=n),PRINTOUTRESULT&&(DEBUG&&console.log("printline"),DEBUG&&console.log(s)),PRINTOUTRESULT&&(DEBUG&&console.log("display:"),print2dascii(p2)),e&&(t+="\n")}catch(r){!0,s=(p=r).message,e&&(n=turnErrorMessageToLatex(p.message)),PRINTOUTRESULT&&console.log(s),o+=s,""!==s&&(o+="\n"),e&&(t+=n,t+="\n"),init()}}return"\n"===o[o.length-1]&&(o=o.substring(0,o.length-1)),e&&"\n"===t[t.length-1]&&(t=t.substring(0,t.length-1)),e?(DEBUG&&console.log("allReturnedLatexStrings: "+t),l=[o,t]):l=o,TIMING_DEBUGS&&(d="run time on: "+r+" : "+((new Date).getTime()-c)+"ms",console.log(d)),o="",t="",l}selftest()},check_stack=function(){if(0!==tos&&stop("stack error"),frame!==TOS&&stop("frame error"),0!==chainOfUserSymbolsNotFunctionsBeingEvaluated.length&&stop("symbols evaluation still ongoing?"),0!==evaluatingAsFloats&&stop("numeric evaluation still ongoing?"),0!==evaluatingPolar)return stop("evaluation of polar still ongoing?")},top_level_eval=function(){var r,e,t;if(DEBUG&&console.log("#### top level eval"),trigmode=0,t=symbol(AUTOEXPAND),expanding=isZeroAtomOrTensor(get_binding(t))?0:1,e=top(),Eval(),(r=top())!==symbol(NIL))if(set_binding(symbol(LAST),r),isZeroAtomOrTensor(get_binding(symbol(BAKE)))||(bake(),r=top()),e!==symbol(SYMBOL_I)&&e!==symbol(SYMBOL_J)||!isimaginaryunit(r)){if(isimaginaryunit(get_binding(symbol(SYMBOL_J))))return push(imaginaryunit),push_symbol(SYMBOL_J),subst();if(isimaginaryunit(get_binding(symbol(SYMBOL_I))))return push(imaginaryunit),push_symbol(SYMBOL_I),subst()}else;},check_esc_flag=function(){if(esc_flag)return stop("esc key")},clearAlgebraEnvironment=function(){return do_clearall()},computeDependenciesFromAlgebra=function(r){var e,t,o;if(DEBUG&&console.log("computeDependenciesFromAlgebra!!!"),r,!0,called_from_Algebra_block=!0,r=normaliseDots(r),DEBUG){for(console.log("computeDependenciesFromAlgebra: patterns in the list --------------- "),e=0,o=userSimplificationsInListForm.length;e<o;e++)t=userSimplificationsInListForm[e],console.log(car(t)+","+cdr(t)+")");console.log("...end of list --------------- ")}return called_from_Algebra_block=!1,findDependenciesInScript(r,!0)[6]},computeResultsAndJavaScriptFromAlgebra=function(r){var e,t,o,n,s,p,i,a,l,u,c;if(r,!0,called_from_Algebra_block=!0,c=(new Date).getTime(),TIMING_DEBUGS&&console.log(" --------- computeResultsAndJavaScriptFromAlgebra input: "+r+" at: "+new Date),u=r=normaliseDots(r),DEBUG){for(console.log("computeResultsAndJavaScriptFromAlgebra: patterns in the list --------------- "),e=0,p=userSimplificationsInListForm.length;e<p;e++)n=userSimplificationsInListForm[e],console.log(car(n)+","+cdr(n)+")");console.log("...end of list --------------- ")}return(a=findDependenciesInScript(r))[0],l=a[1],t=a[2],i=a[3],s=a[4],errorMessage=a[5],o=a[6],called_from_Algebra_block=!1,""===i&&""===errorMessage||(l+="\n"+i,""!==errorMessage&&(l+="\n"+errorMessage),l=l.replace(/\n/g,"\n\n"),s+="\n$$"+i+"$$",""!==errorMessage&&(s+=turnErrorMessageToLatex(errorMessage)),s=s.replace(/\n/g,"\n\n")),s=(s=s.replace(/\n*/,"")).replace(/\$\$\$\$\n*/g,""),t=(t=t.replace(/Math\./g,"")).replace(/\n/g,"\n\n"),TIMING_DEBUGS&&console.log("computeResultsAndJavaScriptFromAlgebra time (total time from notebook and back) for: "+u+" : "+((new Date).getTime()-c)+"ms"),{code:t,result:s,latexResult:s,dependencyInfo:o}},(void 0!==exports&&null!==exports?exports:this).run=run,(void 0!==exports&&null!==exports?exports:this).findDependenciesInScript=findDependenciesInScript,(void 0!==exports&&null!==exports?exports:this).computeDependenciesFromAlgebra=computeDependenciesFromAlgebra,(void 0!==exports&&null!==exports?exports:this).computeResultsAndJavaScriptFromAlgebra=computeResultsAndJavaScriptFromAlgebra,(void 0!==exports&&null!==exports?exports:this).clearAlgebraEnvironment=clearAlgebraEnvironment,tos=0,nil_symbols=0,push=function(r){return r.isZero,r===symbol(NIL)&&(nil_symbols++,DEBUG&&console.log("pushing symbol(NIL) #"+nil_symbols)),tos>=frame&&stop("stack overflow"),stack[tos++]=r},moveTos=function(r){if(tos<=r)tos=r;else for(;tos>r;)stack[tos]=null,tos--},top=function(){return stack[tos-1]},pop=function(){var r;return 0===tos&&stop("stack underflow"),stack[tos-1],r=stack[--tos],stack[tos]=null,r},push_frame=function(r){var e,t,o,n;for(t=0,(frame-=r)<tos&&stop("frame overflow, circular reference?"),n=[],t=e=0,o=r;0<=o?e<o:e>o;t=0<=o?++e:--e)n.push(stack[frame+t]=symbol(NIL));return n},pop_frame=function(r){if((frame+=r)>TOS)return stop("frame underflow")},save=function(){return(frame-=10)<tos&&stop("frame overflow, circular reference?"),stack[frame+0]=p0,stack[frame+1]=p1,stack[frame+2]=p2,stack[frame+3]=p3,stack[frame+4]=p4,stack[frame+5]=p5,stack[frame+6]=p6,stack[frame+7]=p7,stack[frame+8]=p8,stack[frame+9]=p9},restore=function(){return frame>TOS-10&&stop("frame underflow"),p0=stack[frame+0],p1=stack[frame+1],p2=stack[frame+2],p3=stack[frame+3],p4=stack[frame+4],p5=stack[frame+5],p6=stack[frame+6],p7=stack[frame+7],p8=stack[frame+8],p9=stack[frame+9],frame+=10},swap=function(){var r,e;return r=pop(),e=pop(),push(r),push(e)},dupl=function(){var r;return r=pop(),push(r),push(r)},$.dupl=dupl,$.swap=swap,$.restore=restore,$.save=save,$.push=push,$.pop=pop,Eval_symbolsinfo=function(){var r;return""!==(r=symbolsinfo())?new_string(r):push_symbol(NIL)},symbolsinfo=function(){var r,e,t,o,n,s,p;for(s="",t=r=o=NIL+1,n=symtab.length;o<=n?r<n:r>n;t=o<=n?++r:--r)if(""!==symtab[t].printname)p=symtab[t]+"",e=(binding[t]+"").substring(0,4),s+="symbol: "+p+" size: "+countsize(binding[t])+" value: "+e+"...\n";else if(!1===isSymbolReclaimable[t])break;return s},std_symbol=function(r,e,t){var o;return(o=symtab[e]).printname=r,o.latexPrint=null!=t?t:r},usr_symbol=function(r){var e,t,o;for(t=0,t=e=0,o=NSYM;0<=o?e<o:e>o;t=0<=o?++e:--e){if(r===symtab[t].printname)return symtab[t];if(""===symtab[t].printname)break}return t===NSYM&&stop("symbol table overflow"),symtab[t]=new U,symtab[t].k=SYM,symtab[t].printname=r,binding[t]=symtab[t],isSymbolReclaimable[t]=!1,symtab[t]},get_printname=function(r){return r.k!==SYM&&stop("symbol error"),r.printname},set_binding=function(r,e){var t;return r.k!==SYM&&stop("symbol error"),t=symtab.indexOf(r),-1!==symtab.indexOf(r,t+1)&&console.log("ops, more than one element!"),DEBUG&&console.log("lookup >> set_binding lookup "+t),isSymbolReclaimable[t]=!1,binding[t]=e},get_binding=function(r){var e;return r.k!==SYM&&stop("symbol error"),e=symtab.indexOf(r),-1!==symtab.indexOf(r,e+1)&&console.log("ops, more than one element!"),DEBUG&&console.log("lookup >> get_binding lookup "+e),binding[e]},is_usr_symbol=function(r){var e;return r.k===SYM&&((e=symnum(r))>PI&&e!==SYMBOL_I&&e!==SYMBOL_IDENTITY_MATRIX)},lookupsTotal=0,symnum=function(r){var e;return lookupsTotal++,r.k!==SYM&&stop("symbol error"),e=symtab.indexOf(r),-1!==symtab.indexOf(r,e+1)&&console.log("ops, more than one element!"),DEBUG&&console.log("lookup >> symnum lookup "+e+" lookup # "+lookupsTotal),e},push_symbol=function(r){return push(symtab[r])},clear_symbols=function(){var r,e,t,o,n;for(n=[],e=r=t=NIL+1,o=NSYM;t<=o?r<o:r>o;e=t<=o?++r:--r)if(""!==symtab[e].printname)symtab[e]=new U,symtab[e].k=SYM,binding[e]=symtab[e],n.push(isSymbolReclaimable[e]=!1);else if(!1===isSymbolReclaimable[e])break;return n},collectUserSymbols=function(r,e){var t,o,n;if(null==e&&(e=[]),is_usr_symbol(r)&&-1===e.indexOf(r))e.push(r);else if(istensor(r))for(o=t=0,n=r.tensor.nelem;0<=n?t<n:t>n;o=0<=n?++t:--t)collectUserSymbols(r.tensor.elem[o],e);else for(;iscons(r);)collectUserSymbols(car(r),e),r=cdr(r)},$.get_binding=get_binding,$.set_binding=set_binding,$.usr_symbol=usr_symbol,$.symbolsinfo=symbolsinfo,$.collectUserSymbols=collectUserSymbols,inited||(inited=!0,init()),$.init=init,parse_internal=function(r){return"string"==typeof r?scan(r):"number"==typeof r?r%1==0?push_integer(r):push_double(r):r instanceof U?push(r):(console.warn("unknown argument type",r),push(symbol(NIL)))},parse=function(r){var e,t;try{parse_internal(r),e=pop(),check_stack()}catch(r){throw t=r,reset_after_error(),t}return e},exec=function(){var r,e,t,o,n,s,p,i;for(p=arguments[0],t=2<=arguments.length?slice.call(arguments,1):[],n=get_binding(usr_symbol(p)),check_stack(),push(n),r=0,s=t.length;r<s;r++)e=t[r],parse_internal(e);list(1+t.length),p1=pop(),push(p1);try{top_level_eval(),i=pop(),check_stack()}catch(r){throw o=r,reset_after_error(),o}return i},$.exec=exec,$.parse=parse,function(){var r,e,t,o,n;for(n=[],r=0,o=(e=["abs","add","adj","and","approxratio","acos","acosh","asin","asinh","atan","atanh","arg","atomize","besselj","bessely","binding","binomial","ceiling","check","choose","circexp","clear","clearall","clearpatterns","clock","coeff","cofactor","condense","conj","contract","cos","cosh","decomp","defint","deg","denominator","det","derivative","dim","dirac","divisors","do","dot","draw","dsolve","eigen","eigenval","eigenvec","erf","erfc","eval","exp","expand","expcos","expsin","factor","factorial","factorpoly","filter","float","floor","for","Gamma","gcd","hermite","hilbert","imag","component","inner","integral","inv","invg","isinteger","isprime","laguerre","lcm","leading","legendre","log","mod","multiply","not","nroots","number","numerator","operator","or","outer","pattern","patternsinfo","polar","power","prime","print","print2dascii","printcomputer","printlatex","printlist","printhuman","product","quote","quotient","rank","rationalize","real","rect","roots","round","equals","shape","sgn","silentpattern","simplify","sin","sinh","sqrt","stop","subst","sum","symbolsinfo","tan","tanh","taylor","test","testeq","testge","testgt","testle","testlt","transpose","unit","zero"]).length;r<o;r++)t=e[r],n.push($[t]=exec.bind(this,t))}(),freeze=function(){var r,e,t,o,n;for(t=[],e=[],[],"",o=r=0,n=symtab.length;0<=n?r<n:r>n;o=0<=n?++r:--r)!1===isSymbolReclaimable[o]&&(t.push(symtab[o]),e.push(binding[o]));return[t,e,userSimplificationsInListForm.slice(0),zero,one,imaginaryunit,getStateHash()]},unfreeze=function(r){var e,t,o,n,s,p;for(n=r[0],t=r[1],o=r[2],zero=r[3],one=r[4],imaginaryunit=r[5],s=e=0,p=n.length;0<=p?e<p:e>p;s=0<=p?++e:--e)symtab[s]=n[s],binding[s]=t[s];return userSimplificationsInListForm=o.slice(0)},compareState=function(r){return getStateHash()===r},getStateHash=function(){var r,e,t,o,n,s,p;for(t="",o=r=s=NIL+1,p=symtab.length;s<=p?r<p:r>p;o=s<=p?++r:--r)if(""!==symtab[o].printname)t+=" //"+print_list(symtab[o])+" : "+print_list(binding[o]);else if(!1===isSymbolReclaimable[o])break;for(e=0,n=userSimplificationsInListForm.length;e<n;e++)t+=" pattern: "+(o=userSimplificationsInListForm[e]);return DEBUG&&console.log("frozenHash: "+t),t}}).call(this)},{"big-integer":2}],2:[function(r,e,t){var o=function(r){"use strict";var e=1e7,t=7,n=9007199254740992,s=c(n),p=Math.log(n);function i(r,e){return void 0===r?i[0]:void 0!==e?10==+e?V(r):F(r,e):V(r)}function a(r,e){this.value=r,this.sign=e,this.isSmall=!1}function l(r){this.value=r,this.sign=r<0,this.isSmall=!0}function u(r){return-n<r&&r<n}function c(r){return r<1e7?[r]:r<1e14?[r%1e7,Math.floor(r/1e7)]:[r%1e7,Math.floor(r/1e7)%1e7,Math.floor(r/1e14)]}function d(r){_(r);var t=r.length;if(t<4&&R(r,s)<0)switch(t){case 0:return 0;case 1:return r[0];case 2:return r[0]+r[1]*e;default:return r[0]+(r[1]+r[2]*e)*e}return r}function _(r){for(var e=r.length;0===r[--e];);r.length=e+1}function m(r){for(var e=new Array(r),t=-1;++t<r;)e[t]=0;return e}function f(r){return r>0?Math.floor(r):Math.ceil(r)}function h(r,t){var o,n,s=r.length,p=t.length,i=new Array(s),a=0,l=e;for(n=0;n<p;n++)a=(o=r[n]+t[n]+a)>=l?1:0,i[n]=o-a*l;for(;n<s;)a=(o=r[n]+a)===l?1:0,i[n++]=o-a*l;return a>0&&i.push(a),i}function g(r,e){return r.length>=e.length?h(r,e):h(e,r)}function b(r,t){var o,n,s=r.length,p=new Array(s),i=e;for(n=0;n<s;n++)o=r[n]-i+t,t=Math.floor(o/i),p[n]=o-t*i,t+=1;for(;t>0;)p[n++]=t%i,t=Math.floor(t/i);return p}function E(r,t){var o,n,s=r.length,p=t.length,i=new Array(s),a=0,l=e;for(o=0;o<p;o++)(n=r[o]-a-t[o])<0?(n+=l,a=1):a=0,i[o]=n;for(o=p;o<s;o++){if(!((n=r[o]-a)<0)){i[o++]=n;break}n+=l,i[o]=n}for(;o<s;o++)i[o]=r[o];return _(i),i}function v(r,t,o){var n,s,p=r.length,i=new Array(p),u=-t,c=e;for(n=0;n<p;n++)s=r[n]+u,u=Math.floor(s/c),s%=c,i[n]=s<0?s+c:s;return"number"==typeof(i=d(i))?(o&&(i=-i),new l(i)):new a(i,o)}function y(r,t){var o,n,s,p,i=r.length,a=t.length,l=m(i+a),u=e;for(s=0;s<i;++s){p=r[s];for(var c=0;c<a;++c)o=p*t[c]+l[s+c],n=Math.floor(o/u),l[s+c]=o-n*u,l[s+c+1]+=n}return _(l),l}function A(r,t){var o,n,s=r.length,p=new Array(s),i=e,a=0;for(n=0;n<s;n++)o=r[n]*t+a,a=Math.floor(o/i),p[n]=o-a*i;for(;a>0;)p[n++]=a%i,a=Math.floor(a/i);return p}function T(r,e){for(var t=[];e-- >0;)t.push(0);return t.concat(r)}function O(r,t,o){return new a(r<e?A(t,r):y(t,c(r)),o)}function S(r){var t,o,n,s,p=r.length,i=m(p+p),a=e;for(n=0;n<p;n++){o=0-(s=r[n])*s;for(var l=n;l<p;l++)t=s*r[l]*2+i[n+l]+o,o=Math.floor(t/a),i[n+l]=t-o*a;i[n+p]=o}return _(i),i}function M(r,t){var o,n,s,p,i=r.length,a=m(i),l=e;for(s=0,o=i-1;o>=0;--o)s=(p=s*l+r[o])-(n=f(p/t))*t,a[o]=0|n;return[a,0|s]}function I(r,t){var o,n,s=V(t),p=r.value,u=s.value;if(0===u)throw new Error("Cannot divide by zero");if(r.isSmall)return s.isSmall?[new l(f(p/u)),new l(p%u)]:[i[0],r];if(s.isSmall){if(1===u)return[r,i[0]];if(-1==u)return[r.negate(),i[0]];var h=Math.abs(u);if(h<e){n=d((o=M(p,h))[0]);var g=o[1];return r.sign&&(g=-g),"number"==typeof n?(r.sign!==s.sign&&(n=-n),[new l(n),new l(g)]):[new a(n,r.sign!==s.sign),new l(g)]}u=c(h)}var b=R(p,u);if(-1===b)return[i[0],r];if(0===b)return[i[r.sign===s.sign?1:-1],i[0]];n=(o=p.length+u.length<=200?function(r,t){var o,n,s,p,i,a,l,u=r.length,c=t.length,_=e,f=m(t.length),h=t[c-1],g=Math.ceil(_/(2*h)),b=A(r,g),E=A(t,g);for(b.length<=u&&b.push(0),E.push(0),h=E[c-1],n=u-c;n>=0;n--){for(o=_-1,b[n+c]!==h&&(o=Math.floor((b[n+c]*_+b[n+c-1])/h)),s=0,p=0,a=E.length,i=0;i<a;i++)s+=o*E[i],l=Math.floor(s/_),p+=b[n+i]-(s-l*_),s=l,p<0?(b[n+i]=p+_,p=-1):(b[n+i]=p,p=0);for(;0!==p;){for(o-=1,s=0,i=0;i<a;i++)(s+=b[n+i]-_+E[i])<0?(b[n+i]=s+_,s=0):(b[n+i]=s,s=1);p+=s}f[n]=o}return b=M(b,g)[0],[d(f),d(b)]}(p,u):function(r,t){for(var o,n,s,p,i,a=r.length,l=t.length,u=[],c=[],m=e;a;)if(c.unshift(r[--a]),_(c),R(c,t)<0)u.push(0);else{s=c[(n=c.length)-1]*m+c[n-2],p=t[l-1]*m+t[l-2],n>l&&(s=(s+1)*m),o=Math.ceil(s/p);do{if(R(i=A(t,o),c)<=0)break;o--}while(o);u.push(o),c=E(c,i)}return u.reverse(),[d(u),d(c)]}(p,u))[0];var v=r.sign!==s.sign,y=o[1],T=r.sign;return"number"==typeof n?(v&&(n=-n),n=new l(n)):n=new a(n,v),"number"==typeof y?(T&&(y=-y),y=new l(y)):y=new a(y,T),[n,y]}function R(r,e){if(r.length!==e.length)return r.length>e.length?1:-1;for(var t=r.length-1;t>=0;t--)if(r[t]!==e[t])return r[t]>e[t]?1:-1;return 0}function N(r){var e=r.abs();return!e.isUnit()&&(!!(e.equals(2)||e.equals(3)||e.equals(5))||!(e.isEven()||e.isDivisibleBy(3)||e.isDivisibleBy(5))&&(!!e.lesser(25)||void 0))}a.prototype=Object.create(i.prototype),l.prototype=Object.create(i.prototype),a.prototype.add=function(r){var e=V(r);if(this.sign!==e.sign)return this.subtract(e.negate());var t=this.value,o=e.value;return e.isSmall?new a(b(t,Math.abs(o)),this.sign):new a(g(t,o),this.sign)},a.prototype.plus=a.prototype.add,l.prototype.add=function(r){var e=V(r),t=this.value;if(t<0!==e.sign)return this.subtract(e.negate());var o=e.value;if(e.isSmall){if(u(t+o))return new l(t+o);o=c(Math.abs(o))}return new a(b(o,Math.abs(t)),t<0)},l.prototype.plus=l.prototype.add,a.prototype.subtract=function(r){var e=V(r);if(this.sign!==e.sign)return this.add(e.negate());var t,o,n,s,p=this.value,i=e.value;return e.isSmall?v(p,Math.abs(i),this.sign):(t=p,o=i,n=this.sign,R(t,o)>=0?s=E(t,o):(s=E(o,t),n=!n),"number"==typeof(s=d(s))?(n&&(s=-s),new l(s)):new a(s,n))},a.prototype.minus=a.prototype.subtract,l.prototype.subtract=function(r){var e=V(r),t=this.value;if(t<0!==e.sign)return this.add(e.negate());var o=e.value;return e.isSmall?new l(t-o):v(o,Math.abs(t),t>=0)},l.prototype.minus=l.prototype.subtract,a.prototype.negate=function(){return new a(this.value,!this.sign)},l.prototype.negate=function(){var r=this.sign,e=new l(-this.value);return e.sign=!r,e},a.prototype.abs=function(){return new a(this.value,!1)},l.prototype.abs=function(){return new l(Math.abs(this.value))},a.prototype.multiply=function(r){var t,o,n,s=V(r),p=this.value,l=s.value,u=this.sign!==s.sign;if(s.isSmall){if(0===l)return i[0];if(1===l)return this;if(-1===l)return this.negate();if((t=Math.abs(l))<e)return new a(A(p,t),u);l=c(t)}return o=p.length,n=l.length,new a(-.012*o-.012*n+15e-6*o*n>0?function r(e,t){var o=Math.max(e.length,t.length);if(o<=30)return y(e,t);o=Math.ceil(o/2);var n=e.slice(o),s=e.slice(0,o),p=t.slice(o),i=t.slice(0,o),a=r(s,i),l=r(n,p),u=g(g(a,T(E(E(r(g(s,n),g(i,p)),a),l),o)),T(l,2*o));return _(u),u}(p,l):y(p,l),u)},a.prototype.times=a.prototype.multiply,l.prototype._multiplyBySmall=function(r){return u(r.value*this.value)?new l(r.value*this.value):O(Math.abs(r.value),c(Math.abs(this.value)),this.sign!==r.sign)},a.prototype._multiplyBySmall=function(r){return 0===r.value?i[0]:1===r.value?this:-1===r.value?this.negate():O(Math.abs(r.value),this.value,this.sign!==r.sign)},l.prototype.multiply=function(r){return V(r)._multiplyBySmall(this)},l.prototype.times=l.prototype.multiply,a.prototype.square=function(){return new a(S(this.value),!1)},l.prototype.square=function(){var r=this.value*this.value;return u(r)?new l(r):new a(S(c(Math.abs(this.value))),!1)},a.prototype.divmod=function(r){var e=I(this,r);return{quotient:e[0],remainder:e[1]}},l.prototype.divmod=a.prototype.divmod,a.prototype.divide=function(r){return I(this,r)[0]},l.prototype.over=l.prototype.divide=a.prototype.over=a.prototype.divide,a.prototype.mod=function(r){return I(this,r)[1]},l.prototype.remainder=l.prototype.mod=a.prototype.remainder=a.prototype.mod,a.prototype.pow=function(r){var e,t,o,n=V(r),s=this.value,p=n.value;if(0===p)return i[1];if(0===s)return i[0];if(1===s)return i[1];if(-1===s)return n.isEven()?i[1]:i[-1];if(n.sign)return i[0];if(!n.isSmall)throw new Error("The exponent "+n.toString()+" is too large.");if(this.isSmall&&u(e=Math.pow(s,p)))return new l(f(e));for(t=this,o=i[1];!0&p&&(o=o.times(t),--p),0!==p;)p/=2,t=t.square();return o},l.prototype.pow=a.prototype.pow,a.prototype.modPow=function(r,e){if(r=V(r),(e=V(e)).isZero())throw new Error("Cannot take modPow with modulus 0");for(var t=i[1],o=this.mod(e);r.isPositive();){if(o.isZero())return i[0];r.isOdd()&&(t=t.multiply(o).mod(e)),r=r.divide(2),o=o.square().mod(e)}return t},l.prototype.modPow=a.prototype.modPow,a.prototype.compareAbs=function(r){var e=V(r),t=this.value,o=e.value;return e.isSmall?1:R(t,o)},l.prototype.compareAbs=function(r){var e=V(r),t=Math.abs(this.value),o=e.value;return e.isSmall?t===(o=Math.abs(o))?0:t>o?1:-1:-1},a.prototype.compare=function(r){if(r===1/0)return-1;if(r===-1/0)return 1;var e=V(r),t=this.value,o=e.value;return this.sign!==e.sign?e.sign?1:-1:e.isSmall?this.sign?-1:1:R(t,o)*(this.sign?-1:1)},a.prototype.compareTo=a.prototype.compare,l.prototype.compare=function(r){if(r===1/0)return-1;if(r===-1/0)return 1;var e=V(r),t=this.value,o=e.value;return e.isSmall?t==o?0:t>o?1:-1:t<0!==e.sign?t<0?-1:1:t<0?1:-1},l.prototype.compareTo=l.prototype.compare,a.prototype.equals=function(r){return 0===this.compare(r)},l.prototype.eq=l.prototype.equals=a.prototype.eq=a.prototype.equals,a.prototype.notEquals=function(r){return 0!==this.compare(r)},l.prototype.neq=l.prototype.notEquals=a.prototype.neq=a.prototype.notEquals,a.prototype.greater=function(r){return this.compare(r)>0},l.prototype.gt=l.prototype.greater=a.prototype.gt=a.prototype.greater,a.prototype.lesser=function(r){return this.compare(r)<0},l.prototype.lt=l.prototype.lesser=a.prototype.lt=a.prototype.lesser,a.prototype.greaterOrEquals=function(r){return this.compare(r)>=0},l.prototype.geq=l.prototype.greaterOrEquals=a.prototype.geq=a.prototype.greaterOrEquals,a.prototype.lesserOrEquals=function(r){return this.compare(r)<=0},l.prototype.leq=l.prototype.lesserOrEquals=a.prototype.leq=a.prototype.lesserOrEquals,a.prototype.isEven=function(){return 0==(1&this.value[0])},l.prototype.isEven=function(){return 0==(1&this.value)},a.prototype.isOdd=function(){return 1==(1&this.value[0])},l.prototype.isOdd=function(){return 1==(1&this.value)},a.prototype.isPositive=function(){return!this.sign},l.prototype.isPositive=function(){return this.value>0},a.prototype.isNegative=function(){return this.sign},l.prototype.isNegative=function(){return this.value<0},a.prototype.isUnit=function(){return!1},l.prototype.isUnit=function(){return 1===Math.abs(this.value)},a.prototype.isZero=function(){return!1},l.prototype.isZero=function(){return 0===this.value},a.prototype.isDivisibleBy=function(r){var e=V(r),t=e.value;return 0!==t&&(1===t||(2===t?this.isEven():this.mod(e).equals(i[0])))},l.prototype.isDivisibleBy=a.prototype.isDivisibleBy,a.prototype.isPrime=function(){var e=N(this);if(e!==r)return e;for(var t,n,s,p,a=this.abs(),l=a.prev(),u=[2,3,5,7,11,13,17,19],c=l;c.isEven();)c=c.divide(2);for(s=0;s<u.length;s++)if(!(p=o(u[s]).modPow(c,a)).equals(i[1])&&!p.equals(l)){for(n=!0,t=c;n&&t.lesser(l);t=t.multiply(2))(p=p.square().mod(a)).equals(l)&&(n=!1);if(n)return!1}return!0},l.prototype.isPrime=a.prototype.isPrime,a.prototype.isProbablePrime=function(e){var t=N(this);if(t!==r)return t;for(var n=this.abs(),s=e===r?5:e,p=0;p<s;p++){if(!o.randBetween(2,n.minus(2)).modPow(n.prev(),n).isUnit())return!1}return!0},l.prototype.isProbablePrime=a.prototype.isProbablePrime,a.prototype.modInv=function(r){for(var e,t,n,s=o.zero,p=o.one,i=V(r),a=this.abs();!a.equals(o.zero);)e=i.divide(a),t=s,n=i,s=p,i=a,p=t.subtract(e.multiply(p)),a=n.subtract(e.multiply(a));if(!i.equals(1))throw new Error(this.toString()+" and "+r.toString()+" are not co-prime");return-1===s.compare(0)&&(s=s.add(r)),this.isNegative()?s.negate():s},l.prototype.modInv=a.prototype.modInv,a.prototype.next=function(){var r=this.value;return this.sign?v(r,1,this.sign):new a(b(r,1),this.sign)},l.prototype.next=function(){var r=this.value;return r+1<n?new l(r+1):new a(s,!1)},a.prototype.prev=function(){var r=this.value;return this.sign?new a(b(r,1),!0):v(r,1,this.sign)},l.prototype.prev=function(){var r=this.value;return r-1>-n?new l(r-1):new a(s,!0)};for(var x=[1];2*x[x.length-1]<=e;)x.push(2*x[x.length-1]);var L=x.length,k=x[L-1];function D(r){return("number"==typeof r||"string"==typeof r)&&+Math.abs(r)<=e||r instanceof a&&r.value.length<=1}function P(r,e,t){e=V(e);for(var n=r.isNegative(),s=e.isNegative(),p=n?r.not():r,i=s?e.not():e,a=0,l=0,u=null,c=null,d=[];!p.isZero()||!i.isZero();)a=(u=I(p,k))[1].toJSNumber(),n&&(a=k-1-a),l=(c=I(i,k))[1].toJSNumber(),s&&(l=k-1-l),p=u[0],i=c[0],d.push(t(a,l));for(var _=0!==t(n?1:0,s?1:0)?o(-1):o(0),m=d.length-1;m>=0;m-=1)_=_.multiply(k).add(o(d[m]));return _}a.prototype.shiftLeft=function(r){if(!D(r))throw new Error(String(r)+" is too large for shifting.");if((r=+r)<0)return this.shiftRight(-r);var e=this;if(e.isZero())return e;for(;r>=L;)e=e.multiply(k),r-=L-1;return e.multiply(x[r])},l.prototype.shiftLeft=a.prototype.shiftLeft,a.prototype.shiftRight=function(r){var e;if(!D(r))throw new Error(String(r)+" is too large for shifting.");if((r=+r)<0)return this.shiftLeft(-r);for(var t=this;r>=L;){if(t.isZero()||t.isNegative()&&t.isUnit())return t;t=(e=I(t,k))[1].isNegative()?e[0].prev():e[0],r-=L-1}return(e=I(t,x[r]))[1].isNegative()?e[0].prev():e[0]},l.prototype.shiftRight=a.prototype.shiftRight,a.prototype.not=function(){return this.negate().prev()},l.prototype.not=a.prototype.not,a.prototype.and=function(r){return P(this,r,function(r,e){return r&e})},l.prototype.and=a.prototype.and,a.prototype.or=function(r){return P(this,r,function(r,e){return r|e})},l.prototype.or=a.prototype.or,a.prototype.xor=function(r){return P(this,r,function(r,e){return r^e})},l.prototype.xor=a.prototype.xor;var U=1<<30,B=(e&-e)*(e&-e)|U;function w(r){var t=r.value,o="number"==typeof t?t|U:t[0]+t[1]*e|B;return o&-o}function C(r,e){return r=V(r),e=V(e),r.greater(e)?r:e}function G(r,e){return r=V(r),e=V(e),r.lesser(e)?r:e}function q(r,e){if(r=V(r).abs(),e=V(e).abs(),r.equals(e))return r;if(r.isZero())return e;if(e.isZero())return r;for(var t,o,n=i[1];r.isEven()&&e.isEven();)t=Math.min(w(r),w(e)),r=r.divide(t),e=e.divide(t),n=n.multiply(t);for(;r.isEven();)r=r.divide(w(r));do{for(;e.isEven();)e=e.divide(w(e));r.greater(e)&&(o=e,e=r,r=o),e=e.subtract(r)}while(!e.isZero());return n.isUnit()?r:r.multiply(n)}a.prototype.bitLength=function(){var r=this;return r.compareTo(o(0))<0&&(r=r.negate().subtract(o(1))),0===r.compareTo(o(0))?o(0):o(function r(e,t){if(t.compareTo(e)<=0){var n=r(e,t.square(t)),s=n.p,p=n.e,i=s.multiply(t);return i.compareTo(e)<=0?{p:i,e:2*p+1}:{p:s,e:2*p}}return{p:o(1),e:0}}(r,o(2)).e).add(o(1))},l.prototype.bitLength=a.prototype.bitLength;var F=function(r,e){for(var t=r.length,o=Math.abs(e),n=0;n<t;n++){if("-"!==(u=r[n].toLowerCase())&&/[a-z0-9]/.test(u)){if(/[0-9]/.test(u)&&+u>=o){if("1"===u&&1===o)continue;throw new Error(u+" is not a valid digit in base "+e+".")}if(u.charCodeAt(0)-87>=o)throw new Error(u+" is not a valid digit in base "+e+".")}}if(2<=e&&e<=36&&t<=p/Math.log(e)){var s=parseInt(r,e);if(isNaN(s))throw new Error(u+" is not a valid digit in base "+e+".");return new l(parseInt(r,e))}e=V(e);var i=[],a="-"===r[0];for(n=a?1:0;n<r.length;n++){var u,c=(u=r[n].toLowerCase()).charCodeAt(0);if(48<=c&&c<=57)i.push(V(u));else if(97<=c&&c<=122)i.push(V(u.charCodeAt(0)-87));else{if("<"!==u)throw new Error(u+" is not a valid character");var d=n;do{n++}while(">"!==r[n]);i.push(V(r.slice(d+1,n)))}}return Y(i,e,a)};function Y(r,e,t){var o,n=i[0],s=i[1];for(o=r.length-1;o>=0;o--)n=n.add(r[o].times(s)),s=s.times(e);return t?n.negate():n}function X(r){return r<=35?"0123456789abcdefghijklmnopqrstuvwxyz".charAt(r):"<"+r+">"}function W(r,e){if((e=o(e)).isZero()){if(r.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(e.equals(-1)){if(r.isZero())return{value:[0],isNegative:!1};if(r.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-r)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var t=Array.apply(null,Array(+r-1)).map(Array.prototype.valueOf,[0,1]);return t.unshift([1]),{value:[].concat.apply([],t),isNegative:!1}}var n=!1;if(r.isNegative()&&e.isPositive()&&(n=!0,r=r.abs()),e.equals(1))return r.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+r)).map(Number.prototype.valueOf,1),isNegative:n};for(var s,p=[],i=r;i.isNegative()||i.compareAbs(e)>=0;){i=(s=i.divmod(e)).quotient;var a=s.remainder;a.isNegative()&&(a=e.minus(a).abs(),i=i.next()),p.push(a.toJSNumber())}return p.push(i.toJSNumber()),{value:p.reverse(),isNegative:n}}function z(r,e){var t=W(r,e);return(t.isNegative?"-":"")+t.value.map(X).join("")}function $(r){if(u(+r)){var e=+r;if(e===f(e))return new l(e);throw new Error("Invalid integer: "+r)}var o="-"===r[0];o&&(r=r.slice(1));var n=r.split(/e/i);if(n.length>2)throw new Error("Invalid integer: "+n.join("e"));if(2===n.length){var s=n[1];if("+"===s[0]&&(s=s.slice(1)),(s=+s)!==f(s)||!u(s))throw new Error("Invalid integer: "+s+" is not a valid exponent.");var p=n[0],i=p.indexOf(".");if(i>=0&&(s-=p.length-i-1,p=p.slice(0,i)+p.slice(i+1)),s<0)throw new Error("Cannot include negative exponent part for integers");r=p+=new Array(s+1).join("0")}if(!/^([0-9][0-9]*)$/.test(r))throw new Error("Invalid integer: "+r);for(var c=[],d=r.length,m=t,h=d-m;d>0;)c.push(+r.slice(h,d)),(h-=m)<0&&(h=0),d-=m;return _(c),new a(c,o)}function V(r){return"number"==typeof r?function(r){if(u(r)){if(r!==f(r))throw new Error(r+" is not an integer.");return new l(r)}return $(r.toString())}(r):"string"==typeof r?$(r):r}a.prototype.toArray=function(r){return W(this,r)},l.prototype.toArray=function(r){return W(this,r)},a.prototype.toString=function(e){if(e===r&&(e=10),10!==e)return z(this,e);for(var t,o=this.value,n=o.length,s=String(o[--n]);--n>=0;)t=String(o[n]),s+="0000000".slice(t.length)+t;return(this.sign?"-":"")+s},l.prototype.toString=function(e){return e===r&&(e=10),10!=e?z(this,e):String(this.value)},a.prototype.toJSON=l.prototype.toJSON=function(){return this.toString()},a.prototype.valueOf=function(){return parseInt(this.toString(),10)},a.prototype.toJSNumber=a.prototype.valueOf,l.prototype.valueOf=function(){return this.value},l.prototype.toJSNumber=l.prototype.valueOf;for(var Z=0;Z<1e3;Z++)i[Z]=new l(Z),Z>0&&(i[-Z]=new l(-Z));return i.one=i[1],i.zero=i[0],i.minusOne=i[-1],i.max=C,i.min=G,i.gcd=q,i.lcm=function(r,e){return r=V(r).abs(),e=V(e).abs(),r.divide(q(r,e)).multiply(e)},i.isInstance=function(r){return r instanceof a||r instanceof l},i.randBetween=function(r,t){var o=G(r=V(r),t=V(t)),n=C(r,t).subtract(o).add(1);if(n.isSmall)return o.add(Math.floor(Math.random()*n));for(var s=[],p=!0,i=n.value.length-1;i>=0;i--){var u=p?n.value[i]:e,c=f(Math.random()*u);s.unshift(c),c<u&&(p=!1)}return s=d(s),o.add("number"==typeof s?new l(s):new a(s,!1))},i.fromArray=function(r,e,t){return Y(r.map(V),V(e||10),t)},i}();void 0!==e&&e.hasOwnProperty("exports")&&(e.exports=o),"function"==typeof define&&define.amd&&define("big-integer",[],function(){return o})},{}],3:[function(r,e,t){window.Algebrite=r("../dist/algebrite")},{"../dist/algebrite":1}]},{},[3]);