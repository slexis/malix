if((typeof module)!=='undefined'&&typeof nerdamer==='undefined'){nerdamer=require('./nerdamer.core.js');require('./Algebra.js')}(function(){"use strict";var core=nerdamer.getCore(),_=core.PARSER,Frac=core.Frac,isSymbol=core.Utils.isSymbol,FN=core.groups.FN,Symbol=core.Symbol,text=core.Utils.text,inBrackets=core.Utils.inBrackets,isInt=core.Utils.isInt,format=core.Utils.format,even=core.Utils.even,N=core.groups.N,S=core.groups.S,FN=core.groups.FN,PL=core.groups.PL,CP=core.groups.CP,CB=core.groups.CB,EX=core.groups.EX,P=core.groups.P,LN='ln',EXP='exp',ABS='abs',CHOOSE='combination',SQRT='sqrt',SIN='sin',COS='cos',TAN='tan',SEC='sec',CSC='csc',COT='cot',ASIN='asin',ACOS='acos',ATAN='atan',ASEC='asec',ACSC='acsc',ACOT='acot',SINH='sinh',COSH='cosh',TANH='tanh';function NoIntegralFound(msg){this.message=msg||""}NoIntegralFound.prototype=new Error();Symbol.prototype.hasIntegral=function(){return this.containsFunction('integrate')};Symbol.prototype.fnTransform=function(){var retval,a=this.args[0];if(this.isLinear()){switch(this.fname){case SINH:retval=_.parse(format('(e^({0})-e^(-({0})))/2',a));break;case COSH:retval=_.parse(format('(e^({0})+e^(-({0})))/2',a));break;case TANH:retval=_.parse(format('(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))',a));break;case TAN:retval=_.parse(format('sin({0})/cos({0})',a));break;case CSC:retval=_.parse(format('1/sin({0})',a));break;case SEC:retval=_.parse(format('1/cos({0})',a));break;default:retval=this}}else if(this.power.equals(2)){switch(this.fname){case SIN:retval=_.parse(format('1/2-cos(2*({0}))/2',a));break;case COS:retval=_.parse(format('1/2+cos(2*({0}))/2',a));break;case TAN:retval=_.parse(format('sin({0})^2/cos({0})^2',a));break;case COSH:retval=_.parse(format('1/2+cosh(2*({0}))/2',a));break;case SINH:retval=_.parse(format('-1/2+cosh(2*({0}))/2',a));break;case TANH:retval=_.parse(format('(1+cosh(2*({0})))/(-1+cosh(2*({0})))',a));break;case SEC:retval=_.parse(format('(1-cos(2*({0})))/(1+cos(2*({0})))+1',a));break;default:retval=this}}else if(this.fname===SEC){retval=_.parse(format('1/cos({0})^({1})',this.args[0],this.power))}else if(this.fname===CSC){retval=_.parse(format('1/sin({0})^({1})',this.args[0],this.power))}else if(this.fname===TAN){if(this.power.lessThan(0)){retval=_.parse(format('cos({0})^(-({1}))/sin({0})^({1})',this.args[0],this.power.negate()))}else{retval=_.parse(format('sin({0})^({1})/cos({0})^({1})',this.args[0],this.power))}}else if(this.fname===SIN&&this.power.lessThan(0)){retval=_.parse(format('csc({0})^(-({1}))',this.args[0],this.power.negate()))}else if(this.fname===COS&&this.power.lessThan(0)){retval=_.parse(format('sec({0})^(-({1}))',this.args[0],this.power.negate()))}else if(this.fname===SIN&&this.power.equals(3)){retval=_.parse(format('(3*sin({0})-sin(3*({0})))/4',this.args[0]))}else if(this.fname===COS&&this.power.equals(3)){retval=_.parse(format('(cos(3*({0}))+3*cos({0}))/4',this.args[0]))}else retval=this;return retval};core.Expression.prototype.hasIntegral=function(){return this.symbol.hasIntegral()};core.Utils.in_inverse_trig=function(x){var inv_trig_fns=[ASIN,ACOS,ATAN,ACSC,ASEC,ACOT];return inv_trig_fns.indexOf(x)!==-1};core.Utils.in_trig=function(x){var trig_fns=[COS,SIN,TAN,SEC,CSC,COT];return trig_fns.indexOf(x)!==-1};core.Utils.in_htrig=function(x){var trig_fns=['sinh','cosh','tanh'];return trig_fns.indexOf(x)!==-1};var all_functions=core.Utils.all_functions=function(arr){for(var i=0,l=arr.length;i<l;i++)
if(arr[i].group!==FN)return!1;return!0},cosAsinBtransform=core.Utils.cosAsinBtranform=function(symbol1,symbol2){var a,b;a=symbol1.args[0];b=symbol2.args[0];return _.parse(format('(sin(({0})+({1}))-sin(({0})-({1})))/2',a,b))},cosAsinAtransform=core.Utils.cosAsinAtranform=function(symbol1,symbol2){var a;a=symbol1.args[0];return _.parse(format('(sin(2*({0})))/2',a))},sinAsinBtransform=core.Utils.cosAsinBtranform=function(symbol1,symbol2){var a,b;a=symbol1.args[0];b=symbol2.args[0];return _.parse(format('(cos(({0})+({1}))-cos(({0})-({1})))/2',a,b))},trigTransform=core.Utils.trigTransform=function(arr){var map={},symbol,t,retval=new Symbol(1);for(var i=0,l=arr.length;i<l;i++){symbol=arr[i];if(symbol.group===FN){var fname=symbol.fname;if(fname===COS&&map[SIN]){if(map[SIN].args[0].toString()!==symbol.args[0].toString()){t=cosAsinBtransform(symbol,map[SIN]);delete map[SIN]}else{t=cosAsinAtransform(symbol,map[SIN]);delete map[SIN]}retval=_.multiply(retval,t)}else if(fname===SIN&&map[COS]){if(map[COS].args[0].toString()!==symbol.args[0].toString()){t=cosAsinBtransform(symbol,map[COS]);delete map[COS]}else{t=cosAsinAtransform(symbol,map[COS]);delete map[COS]}retval=_.multiply(retval,t)}else if(fname===SIN&&map[SIN]){if(map[SIN].args[0].toString()!==symbol.args[0].toString()){t=sinAsinBtransform(symbol,map[SIN]);delete map[SIN]}else{t=_.multiply(symbol,map[SIN]);delete map[SIN]}retval=t}else map[fname]=symbol}else retval=_.multiply(retval,symbol)}for(var x in map)retval=_.multiply(retval,map[x]);return retval};core.Settings.integration_depth=10;var __=core.Calculus={version:'1.4.4',sum:function(fn,index,start,end){if(!(index.group===core.groups.S))throw new Error('Index must be symbol. '+text(index)+' provided');index=index.value;var retval;if(core.Utils.isNumericSymbol(start)&&core.Utils.isNumericSymbol(end)){start=start.multiplier;end=end.multiplier;var f=fn.text(),subs={'~':!0},retval=new core.Symbol(0);for(var i=start;i<=end;i++){subs[index]=new Symbol(i);var ans=_.parse(f,subs);retval=_.add(retval,ans)}return retval}else{retval=_.symfunction('sum',arguments)}return retval},product:function(fn,index,start,end){if(!(index.group===core.groups.S))throw new Error('Index must be symbol. '+text(index)+' provided');index=index.value;var retval;if(core.Utils.isNumericSymbol(start)&&core.Utils.isNumericSymbol(end)){start=start.multiplier;end=end.multiplier;var f=fn.text(),subs={},retval=new core.Symbol(1);for(var i=start;i<=end;i++){subs[index]=new Symbol(i);retval=_.multiply(retval,_.parse(f,subs))}}else{retval=_.symfunction('product',arguments)}return retval},diff:function(symbol,wrt,nth){if(core.Utils.isVector(symbol)){var vector=new core.Vector([]);symbol.each(function(x){vector.elements.push(__.diff(x,wrt))});return vector}var d=isSymbol(wrt)?wrt.text():wrt;nth=isSymbol(nth)?nth.multiplier:nth||1;if(d===undefined)d=core.Utils.variables(symbol)[0];if(symbol.group===FN&&symbol.fname===SQRT){var s=symbol.args[0],sp=symbol.power.clone();if(s.group!==N||s.group!==P){s.power=isSymbol(s.power)?_.multiply(s.power,_.multiply(new Symbol(1/2)),sp):s.power.multiply(new Frac(0.5)).multiply(sp);s.multiplier=s.multiplier.multiply(symbol.multiplier)}symbol=s}if(symbol.group===FN&&!isSymbol(symbol.power)){var a=derive(symbol);var b=__.diff(symbol.args[0].clone(),d);symbol=_.multiply(a,b)}else{symbol=derive(symbol)}if(nth>1){nth--;symbol=__.diff(symbol,wrt,nth)}return symbol;function polydiff(symbol){if(symbol.value===d||symbol.contains(d,!0)){symbol.multiplier=symbol.multiplier.multiply(symbol.power);symbol.power=symbol.power.subtract(new Frac(1));if(symbol.power.equals(0)){symbol=Symbol(symbol.multiplier)}}return symbol};function derive(symbol){var g=symbol.group,a,b,cp;if(g===N||g===S&&symbol.value!==d||g===P){symbol=Symbol(0)}else if(g===S){symbol=polydiff(symbol)}else if(g===CB){var m=symbol.multiplier.clone();symbol.toUnitMultiplier();var retval=_.multiply(product_rule(symbol),polydiff(symbol));retval.multiplier=retval.multiplier.multiply(m);return retval}else if(g===FN&&symbol.power.equals(1)){switch(symbol.fname){case LN:cp=symbol.clone();symbol=symbol.args[0].clone();symbol.power=symbol.power.negate();symbol.multiplier=cp.multiplier.divide(symbol.multiplier);break;case COS:symbol.fname=SIN;symbol.multiplier.negate();break;case SIN:symbol.fname=COS;break;case TAN:symbol.fname=SEC;symbol.power=new Frac(2);break;case SEC:symbol=qdiff(symbol,TAN);break;case CSC:symbol=qdiff(symbol,'-cot');break;case COT:symbol.fname=CSC;symbol.multiplier.negate();symbol.power=new Frac(2);break;case ASIN:symbol=_.parse('(sqrt(1-('+text(symbol.args[0])+')^2))^(-1)');break;case ACOS:symbol=_.parse('-(sqrt(1-('+text(symbol.args[0])+')^2))^(-1)');break;case ATAN:symbol=_.parse('(1+('+text(symbol.args[0])+')^2)^(-1)');break;case 'acot':symbol=_.parse('-1/(('+symbol.args[0]+')^2+1)');break;case ABS:m=symbol.multiplier.clone();symbol.toUnitMultiplier();b=symbol.args[0].clone();b.toUnitMultiplier();symbol=_.parse(inBrackets(text(symbol.args[0]))+'/abs'+inBrackets(text(b)));symbol.multiplier=m;break;case 'parens':symbol=Symbol(1);break;case 'cosh':symbol.fname='sinh';break;case 'sinh':symbol.fname='cosh';break;case 'tanh':symbol.fname='sech';symbol.power=new Frac(2);break;case 'sech':symbol=qdiff(symbol,'-tanh');break;case 'csch':var arg=String(symbol.args[0]);return _.parse('-coth('+arg+')*csch('+arg+')');break;case 'asinh':symbol=_.parse('(sqrt(1+('+text(symbol.args[0])+')^2))^(-1)');break;case 'acosh':symbol=_.parse('(sqrt(-1+('+text(symbol.args[0])+')^2))^(-1)');break;case 'atanh':symbol=_.parse('(1-('+text(symbol.args[0])+')^2)^(-1)');break;case 'asech':var arg=String(symbol.args[0]);symbol=_.parse('-1/(sqrt(1/('+arg+')^2-1)*('+arg+')^2)');break;case 'acoth':symbol=_.parse('-1/(('+symbol.args[0]+')^2-1)');break;case 'acsch':var arg=String(symbol.args[0]);symbol=_.parse('-1/(sqrt(1/('+arg+')^2+1)*('+arg+')^2)');break;case 'Si':var arg=symbol.args[0];symbol=_.parse('sin('+arg+')/('+arg+')');break;case 'Shi':var arg=symbol.args[0];symbol=_.parse('sinh('+arg+')/('+arg+')');break;case 'Ci':var arg=symbol.args[0];symbol=_.parse('cos('+arg+')/('+arg+')');break;case 'Chi':var arg=symbol.args[0];symbol=_.parse('cosh('+arg+')/('+arg+')');break;case 'Ei':var arg=symbol.args[0];symbol=_.parse('e^('+arg+')/('+arg+')');break;case 'erf':symbol=_.parse('(2*e^(-('+symbol.args[0]+')^2))/sqrt(pi)');break;case 'atan2':var x_=String(symbol.args[0]),y_=String(symbol.args[1]);symbol=_.parse('('+y_+')/(('+y_+')^2+('+x_+')^2)');break;case 'sign':symbol=new Symbol(0);break;case 'log10':symbol=_.parse('1/(('+symbol.args[0]+')*log(10))');break;default:symbol=_.symfunction('diff',[symbol,wrt])}}else if(g===EX||g===FN&&isSymbol(symbol.power)){var value;if(g===EX){value=symbol.value}else if(g===FN&&symbol.contains(d)){value=symbol.fname+inBrackets(text(symbol.args[0]))}else{value=symbol.value+inBrackets(text(symbol.args[0]))}a=_.multiply(_.parse(LN+inBrackets(value)),symbol.power.clone());b=__.diff(_.multiply(_.parse(LN+inBrackets(value)),symbol.power.clone()),d);symbol=_.multiply(symbol,b)}else if(g===FN&&!symbol.power.equals(1)){b=symbol.clone();b.toLinear();b.toUnitMultiplier();symbol=_.multiply(polydiff(symbol.clone(),d),derive(b))}else if(g===CP||g===PL){var result=new Symbol(0);for(var x in symbol.symbols){result=_.add(result,__.diff(symbol.symbols[x].clone(),d))}symbol=_.multiply(polydiff(symbol.clone()),result)}symbol.updateHash();return symbol};function qdiff(symbol,val,altVal){return _.multiply(symbol,_.parse(val+inBrackets(altVal||text(symbol.args[0]))))};function product_rule(symbol){var symbols=symbol.collectSymbols(),result=new Symbol(0),l=symbols.length;for(var i=0;i<l;i++){var df=__.diff(symbols[i].clone(),d);for(var j=0;j<l;j++){if(i!==j){df=_.multiply(df,symbols[j].clone())}}result=_.add(result,df)}return result}},integration:{u_substitution:function(symbols,dx){function try_combo(a,b,f){var q=f?f(a,b):_.divide(a.clone(),__.diff(b,dx));if(!q.contains(dx,!0))return q;return null}
function do_fn_sub(fname,arg){var subbed=__.integrate(_.symfunction(fname,[new Symbol(u)]),u,0);subbed=subbed.sub(new Symbol(u),arg);subbed.updateHash();return subbed}var a=symbols[0].clone(),b=symbols[1].clone(),g1=a.group,g2=b.group,u='__u__',Q;if(g1===FN&&g2!==FN){var arg=a.args[0];Q=try_combo(b,arg.clone());if(Q)return _.multiply(Q,do_fn_sub(a.fname,arg));Q=try_combo(b,a);if(Q){return __.integration.poly_integrate(a)}}else if(g2===FN&&g1!==FN){var arg=b.args[0];Q=try_combo(a,arg.clone());if(Q)return _.multiply(Q,do_fn_sub(b.fname,arg))}else if(g1===FN&&g1===FN){Q=try_combo(a.clone(),b.clone());if(Q)return _.multiply(__.integration.poly_integrate(b),Q);Q=try_combo(b.clone(),a.clone());if(Q)return _.multiply(__.integration.poly_integrate(b),Q)}else if(g1===EX&&g2!==EX){var p=a.power;Q=try_combo(b,p.clone());if(!Q){var dc=__.integration.decompose_arg(p.clone(),dx);var xp=__.diff(dc[2].clone(),dx);var dc2=__.integration.decompose_arg(xp.clone(),dx);if(_.multiply(dc[1],dc2[1]).power.equals(b.power)){var m=_.divide(dc[0].clone(),dc2[0].clone());var new_val=_.multiply(m.clone(),_.pow(new Symbol(a.value),_.multiply(dc[0],new Symbol(u))));new_val=_.multiply(new_val,new Symbol(u));return __.integration.by_parts(new_val,u,0,{}).sub(u,dc[1].clone())}}var integrated=__.integrate(a.sub(p.clone(),new Symbol(u)),u,0),retval=_.multiply(integrated.sub(new Symbol(u),p),Q);return retval}else if(g2===EX&&g1!==EX){var p=b.power;Q=try_combo(a,p.clone());var integrated=__.integrate(b.sub(p,new Symbol(u)),u,0);return _.multiply(integrated.sub(new Symbol(u),p),Q)}else if(a.isComposite()||b.isComposite()){var f=function(a,b){var A=core.Algebra.Factor.factor(a),B=core.Algebra.Factor.factor(__.diff(b,dx));var q=_.divide(A,B);return q};var f1=a.isComposite()?a.clone().toLinear():a.clone(),f2=b.isComposite()?b.clone().toLinear():b.clone();Q=try_combo(f1.clone(),f2.clone(),f);if(Q)return _.multiply(__.integration.poly_integrate(b),Q);Q=try_combo(f2.clone(),f1.clone(),f);if(Q)return _.multiply(__.integration.poly_integrate(a),Q)}},poly_integrate:function(x){var p=x.power.toString(),m=x.multiplier.toDecimal(),s=x.toUnitMultiplier().toLinear();if(Number(p)===-1){return _.multiply(new Symbol(m),_.symfunction(LN,[s]))}return _.parse(format('({0})*({1})^(({2})+1)/(({2})+1)',m,s,p))},stop:function(msg){msg=msg||'Stopping!';throw new NoIntegralFound(msg)},partial_fraction:function(input,dx,depth,opt){if(!isSymbol(dx))dx=_.parse(dx);var result,partial_fractions;result=new Symbol(0);partial_fractions=core.Algebra.PartFrac.partfrac(input,dx);if(partial_fractions.group===CB&&partial_fractions.isLinear()){partial_fractions.each(function(x){result=_.add(result,__.integrate(x,dx,depth,opt))})}else result=_.add(result,__.integrate(partial_fractions,dx,depth,opt));return result},get_udv:function(symbol){var parts=[[],[],[],[],[]];var setSymbol=function(x){var g=x.group;if(g===FN){var fname=x.fname;if(core.Utils.in_trig(fname)||core.Utils.in_htrig(fname))parts[3].push(x);else if(core.Utils.in_inverse_trig(fname))parts[1].push(x);else if(fname===LN)parts[0].push(x);else{__.integration.stop()}}else if(g===S||x.isComposite()&&x.isLinear()||g===CB&&x.isLinear()){parts[2].push(x)}else if(g===EX||x.isComposite()&&!x.isLinear())parts[4].push(x);else __.integration.stop()};if(symbol.group===CB)symbol.each(function(x){setSymbol(Symbol.unwrapSQRT(x,!0))});else setSymbol(symbol);var u,dv=new Symbol(1);for(var i=0;i<5;i++){var part=parts[i],t,l=part.length;if(l>0){if(l>1){t=new Symbol(1);for(var j=0;j<l;j++)t=_.multiply(t,part[j].clone());}else t=part[0].clone();if(!u){u=t;u.multiplier=u.multiplier.multiply(symbol.multiplier)}else dv=_.multiply(dv,t)}}return[u,dv]},trig_sub:function(symbol,dx,depth,opt,parts,symbols){parts=parts||__.integration.decompose_arg(symbol.clone().toLinear(),dx);var b=parts[3],ax=parts[2],a=parts[0],x=parts[1];if(x.power.equals(2)&&a.greaterThan(0)){var t=core.Utils.getU(symbol),u=_.parse(TAN+inBrackets(t)),du=_.parse(SEC+inBrackets(t)+'^2'),f=_.multiply(symbol.sub(x,u),du);var integral=__.integrate(f,t,depth,opt).sub(u,x);core.Utils.clearU(u);return integral}},by_parts:function(symbol,dx,depth,o){o.previous=o.previous||[];var udv,u,dv,du,v,vdu,uv,retval,integral_vdu,m,c,vdu_s;udv=__.integration.get_udv(symbol);u=udv[0];dv=udv[1];du=Symbol.unwrapSQRT(_.expand(__.diff(u.clone(),dx)),!0);c=du.clone().stripVar(dx);du=_.divide(du,c.clone());v=__.integrate(dv.clone(),dx,depth||0);vdu=_.multiply(v.clone(),du);vdu_s=vdu.toString();if(o.previous.indexOf(vdu_s)!==-1&&(core.Utils.in_trig(u.fname))&&dv.isE()){o.is_cyclic=!0;return new Symbol(1)}else o.previous.push(vdu_s);uv=_.multiply(u,v);m=vdu.multiplier.clone();vdu.toUnitMultiplier();integral_vdu=_.multiply(__.integrate(vdu.clone(),dx,depth,o),c);integral_vdu.multiplier=integral_vdu.multiplier.multiply(m);retval=_.subtract(uv,integral_vdu);if(o.is_cyclic){o.previous.pop();if(o.previous.length===0){retval=_.expand(retval);var rem=new Symbol(0);retval.each(function(x){if(!x.contains(dx))rem=_.add(rem,x.clone())});retval=_.divide(_.subtract(retval,rem.clone()),_.subtract(new Symbol(1),rem))}}return retval},decompose_arg:core.Utils.decompose_fn},integrate:function(original_symbol,dt,depth,opt){if(!dt){var vars=core.Utils.variables(original_symbol);if(vars.length===1)dt=vars[0];dt=dt||'x'}if(core.Utils.isVector(original_symbol)){var vector=new core.Vector([]);original_symbol.each(function(x){vector.elements.push(__.integrate(x,dt))});return vector}if(!isNaN(dt))_.error('variable expected but received '+dt);if(original_symbol.isConstant(!0))return _.multiply(original_symbol.clone(),_.parse(dt));opt=opt||{};return core.Utils.block('PARSE2NUMBER',function(){depth=depth||0;var dx=isSymbol(dt)?dt.toString():dt,symbol=Symbol.unwrapSQRT(original_symbol.clone(),!0),g=symbol.group,retval;try{if(++depth>core.Settings.integration_depth)__.integration.stop('Maximum depth reached. Exiting!');if(!symbol.contains(dx,!0)){retval=_.multiply(symbol.clone(),_.parse(dx))}else if(g===S){retval=__.integration.poly_integrate(symbol,dx,depth)}else if(g===EX){if(symbol.contains(dx)&&symbol.previousGroup!==FN){if(symbol.power.contains(dx))__.integration.stop();else{var t=__.diff(symbol.clone().toLinear(),dx);if(t.contains(dx))__.integration.stop();retval=__.integration.poly_integrate(symbol,dx,depth)}}else{var a=__.diff(symbol.power.clone(),dx);if(a.contains(dx)){var aa=a.stripVar(dx),x=_.divide(a.clone(),aa.clone());if(x.group===S&&x.isLinear()){aa.multiplier=aa.multiplier.divide(new Frac(2));return _.parse(format('({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))',aa,dx,symbol.multiplier))}else __.integration.stop()}if(symbol.isE()){retval=symbol}else{var d=_.symfunction(LN,[_.parse(symbol.value)]);retval=_.divide(symbol,d)}retval=_.divide(retval,a)}}else if(symbol.isComposite()&&symbol.isLinear()){retval=new Symbol(0);symbol.each(function(x){retval=_.add(retval,__.integrate(x,dx,depth))})}else if(g===CP){if(symbol.power.greaterThan(1))symbol=_.expand(symbol);if(symbol.power.equals(1)){retval=new Symbol(0);symbol.each(function(x){retval=_.add(retval,__.integrate(x,dx,depth))},!0)}else{var p=Number(symbol.power),m=symbol.multiplier.clone();symbol.toUnitMultiplier();var fn=symbol.clone().toLinear(),decomp=__.integration.decompose_arg(fn,dx),b=decomp[3],ax=decomp[2],a=decomp[0],x=decomp[1];if(p===-1&&x.group!==PL){if(x.group===S&&x.power.equals(2)){var unwrapAbs=function(s){var result=new Symbol(1);s.each(function(x){result=_.multiply(result,x.fname==='abs'?x.args[0]:x)});return result};var A=a.clone(),B=b.clone();A=_.pow(A,new Symbol(1/2));B=_.pow(B,new Symbol(1/2));var d=_.multiply(unwrapAbs(B),unwrapAbs(A)),f=_.symfunction(ATAN,[_.divide(_.multiply(a,x.toLinear()),d.clone())]);retval=_.divide(f,d)}else if(x.group===S&&x.isLinear()){retval=_.divide(__.integration.poly_integrate(symbol),a)}else{if(x.power.equals(4)){var A,B,C,D,E,F,f1,f2,f3,f4,L1,L2;var br=inBrackets;A=_.parse(SQRT+br(a)+'*'+dx+'^2');B=_.parse(SQRT+br(2)+'*'+br(a)+'^'+br('1/4')+'*'+br(b)+'^'+br('1/4')+'*'+dx);C=_.parse(SQRT+br(b));f1=_.add(_.add(A.clone(),B.clone()),C.clone());f2=_.add(_.subtract(A,B),C);D=_.parse(SQRT+br(2)+'*'+br(b)+'^'+br('3/4'));E=_.parse(SQRT+br(b)+'*'+br(b)+'^'+br('1/4')+'*'+dx);F=_.parse(2+'*'+br(b)+'*'+SQRT+br(2)+'*'+br(b)+'^'+br('1/4'));L1=_.divide(_.subtract(D.clone(),E.clone()),_.multiply(F.clone(),f2));L2=_.divide(_.add(D,E),_.multiply(F,f1.clone()));retval=_.add(__.integrate(L1,dx,depth,opt),__.integrate(L2,dx,depth,opt))}else retval=__.integration.partial_fraction(symbol,dx,depth)}}else if(p===-1/2){if(x.group===S&&x.power.equals(2)){if(ax.multiplier.lessThan(0)&&!b.multiplier.lessThan(0)){a.negate();if(b.isConstant()&&a.isConstant()){var d=_.symfunction(SQRT,[a.clone()]),d2=_.symfunction(SQRT,[_.multiply(a.clone(),b)]);retval=_.divide(_.symfunction(ASIN,[_.divide(ax.toLinear(),d2)]),d)}else{var sqrt_a=_.symfunction(SQRT,[a]),sqrt_ax=_.multiply(sqrt_a.clone(),x.clone().toLinear());retval=_.divide(_.symfunction(ATAN,[_.divide(sqrt_ax,_.symfunction(SQRT,[fn.clone()]))]),sqrt_a)}}else{__.integration.stop()}}else{__.integration.stop()}}else{if(x.isLinear()&&x.group!==PL)retval=_.divide(__.integration.poly_integrate(symbol),a);else if(x.power.equals(2)&&a.greaterThan(0)){var sqa,sqb,aob,bsqi,n,integral,u,v,uv;sqa=_.parse(SQRT+inBrackets(a));sqb=_.parse(SQRT+inBrackets(b));aob=_.multiply(sqa.clone(),sqb.clone()).invert();bsqi=_.pow(b,new Symbol(symbol.power));uv=core.Utils.getU(symbol);u=_.multiply(aob,x.clone().toLinear());v=_.parse(ATAN+inBrackets(u));var n=(Math.abs(symbol.power)-1)*2;var integral=__.integrate(_.parse(COS+inBrackets(uv)+'^'+n));core.Utils.clearU(uv);return _.multiply(integral.sub(uv,v),bsqi)}else{if(symbol.group!==CB&&!symbol.power.lessThan(0)){retval=__.integration.by_parts(symbol,dx,depth,opt)}else{var f=symbol.clone().toLinear();var factored=core.Algebra.Factor.factor(f);var was_factored=factored.toString()!==f.toString();if(core.Algebra.degree(f,_.parse(dx)).equals(2)&&!was_factored){try{var f1,fx,u,sq;sq=core.Algebra.sqComplete(f,dx);u=core.Utils.getU(f);f1=sq.f.sub(sq.a,u);fx=_.pow(f1,_.parse(symbol.power));retval=__.integrate(fx,u).sub(u,sq.a)}catch(e){__.integration.stop()}}else retval=__.integration.partial_fraction(symbol,dx,depth,opt)}}}retval.multiplier=retval.multiplier.multiply(m)}}else if(g===FN){var arg=symbol.args[0],m=symbol.multiplier.clone();symbol.toUnitMultiplier();var decomp=__.integration.decompose_arg(arg,dx);var a=decomp[0],x=decomp[1],fname=symbol.fname;if(fname===LN||(fname===ASIN||fname===ACOS||fname===ATAN&&x.isLinear())){var p=symbol.power.toString();if(isInt(p))depth=depth-p;retval=__.integration.by_parts(symbol,dx,depth,opt)}else if(fname===TAN&&symbol.power.lessThan(0)){var sym=symbol.clone();sym.power.negate();sym.fname=COT;return __.integrate(sym,dx,depth)}else{if(!a.contains(dx,!0)&&symbol.isLinear()){if(fname===ABS){var x=_.divide(arg.clone(),a.clone());if(x.group===S&&!x.power.lessThan(0)){if(core.Utils.even(x.power)){retval=__.integrate(arg,dx,depth)}else{var integrated=__.integrate(x,dx,depth);integrated.power=integrated.power.subtract(new Frac(1));retval=_.multiply(_.multiply(_.symfunction(ABS,[x.toLinear()]),integrated),a)}}else __.integration.stop()}else{var ag=symbol.args[0].group,decomposed=__.integration.decompose_arg(arg,dx);if(!(ag===CP||ag===S||ag===CB)||!decomposed[1].power.equals(1)||arg.hasFunc())__.integration.stop();switch(fname){case COS:retval=_.symfunction(SIN,[arg]);break;case SIN:retval=_.symfunction(COS,[arg]);retval.negate();break;case TAN:retval=_.parse(format('log(sec({0}))',arg));break;case SEC:retval=_.parse(format('log(tan({0})+sec({0}))',arg));break;case CSC:retval=_.parse(format('-log(csc({0})+cot({0}))',arg));break;case COT:retval=_.parse(format('log(sin({0}))',arg));break;case SINH:retval=_.symfunction(COSH,[arg]);break;case COSH:retval=_.symfunction(SINH,[arg]);break;case TANH:retval=_.parse(format('log(cosh({0}))',arg));break;case EXP:retval=__.integrate(_.parse(format('e^({0})',arg)),dx,depth);break;case 'erf':var arg=symbol.args[0].clone(),dc=__.integration.decompose_arg(arg,dx),x_=dc[1],a_=dc[0];retval=_.parse(format('e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))',a_,x_,arg));break;case 'sign':retval=_.multiply(symbol.clone(),arg.clone());break;default:__.integration.stop()}retval=_.divide(retval,a)}}else if(x.isLinear()){if(fname===COS||fname===SIN){var p=Number(symbol.power);if(p<0){symbol.fname=fname===SIN?CSC:SEC;symbol.invert().updateHash();retval=__.integrate(symbol,dx,depth)}else{var arg=symbol.args[0],rd=symbol.clone(),rd2=symbol.clone(),q=new Symbol((p-1)/p),na=_.multiply(a.clone(),new Symbol(p)).invert();rd.power=rd.power.subtract(new Frac(1));rd2.power=rd2.power.subtract(new Frac(2));var t=_.symfunction(fname===COS?SIN:COS,[arg.clone()]);if(fname===SIN)t.negate();retval=_.add(_.multiply(_.multiply(na,rd),t),_.multiply(q,__.integrate(_.parse(rd2),dx,depth)))}}else if(fname===TAN||fname===COT){if(symbol.args[0].isLinear(dx)){var n=symbol.power.subtract(new Frac(1)).toString(),r=symbol.clone().toUnitMultiplier(),w=_.parse(format((fname===COT?'-':'')+'1/({2}*{0})*{3}({1})^({0})',n,arg,a,fname));r.power=r.power.subtract(new Frac(2));if(r.power.equals(0))r=_.parse(r);retval=_.subtract(w,__.integrate(r,dx,depth))}}else if(fname===SEC||fname===CSC){var n1=symbol.power.subtract(new Frac(1)).toString(),n2=symbol.power.subtract(new Frac(2)).toString(),f2=fname===SEC?TAN:COT,r=symbol.clone().toUnitMultiplier(),parse_str=format((fname===CSC?'-':'')+'1/({0}*{1})*{4}({3})^({2})*{5}({3})',a,n1,n2,arg,fname,f2),w=_.parse(parse_str);r.power=r.power.subtract(new Frac(2));if(r.power.equals(0))r=_.parse(r);retval=_.add(w,_.multiply(new Symbol(n2/n1),__.integrate(r,dx,depth)))}else if((fname===COSH||fname===SINH)&&symbol.power.equals(2)){retval=__.integrate(symbol.fnTransform(),dx,depth)}else __.integration.stop()}else __.integration.stop();retval.multiplier=retval.multiplier.multiply(m)}}else if(g===PL){retval=__.integration.partial_fraction(symbol,dx,depth)}else if(g===CB){var coeff=symbol.stripVar(dx);var cfsymbol=_.divide(symbol.clone(),coeff.clone());if(cfsymbol.group!==CB){if(cfsymbol.equals(1)){return __.integrate(_.expand(symbol),dx,depth)}retval=__.integrate(cfsymbol,dx,depth)}else{var symbols=cfsymbol.collectSymbols().sort(function(a,b){if(a.group===b.group){if(Number(a.power)===Number(b.power))
if(a<b)return 1;else return-1;return b.power-a.power}return b.group-a.group}).map(function(x){var unwrapped=Symbol.unwrapSQRT(x,!0);if(unwrapped.fname===EXP){return _.parse(format('({1})*e^({0})',unwrapped.args[0],unwrapped.multiplier))}return unwrapped});var l=symbols.length;if(l===2){try{retval=__.integration.u_substitution(symbols,dx)}catch(e){}if(!retval){var g1=symbols[0].group,g2=symbols[1].group,sym1=symbols[0],sym2=symbols[1],fn1=sym1.fname,fn2=sym2.fname;symbol=_.multiply(sym1.clone(),sym2.clone());if(g1===FN&&g2===FN){if(fn1===LN||fn2===LN){retval=__.integration.by_parts(symbol.clone(),dx,depth,opt)}else{symbols.sort(function(a,b){return b.fname>a.fname});var arg1=sym1.args[0];if(!arg1.isLinear()||!(arg1.group===CP||arg1.group===CB||arg1.group===S))__.integration.stop();var decomp=__.integration.decompose_arg(arg1,dx);x=decomp[1],a=decomp[0];if(!x.isLinear())__.integration.stop();var arg2=sym2.args[0];if(arg1.equals(arg2)){if(fn1===SIN&&fn2===COS||fn1===COS&&fn2===SIN){if(sym1.power.lessThan(0))__.integration.stop();if(fn1===SIN&&sym1.power.add(sym2.power).equals(0)){sym1.fname=TAN;sym1.updateHash();retval=__.integrate(sym1,dx,depth)}else{if(even(sym1.power)&&fn2===COS&&sym2.power.lessThan(0)){var n=Number(sym1.power)/2,new_sym=_.parse(format('(1-cos({0})^2)^({1})',sym1.args[0],n));retval=__.integrate(_.expand(_.multiply(new_sym,sym2.clone())),dx,depth,opt)}else if(even(sym1.power)&&fn2===SIN&&sym2.power.lessThan(0)){var n=Number(sym1.power)/2,new_sym=_.parse(format('(1-sin({0})^2)^({1})',sym1.args[0],n));retval=__.integrate(_.expand(_.multiply(new_sym,sym2.clone())),dx,depth,opt)}else{var p1_even=core.Utils.even(sym1.power),p2_even=core.Utils.even(sym2.power);retval=new Symbol(0);if(!p1_even||!p2_even){var u,r,trans;if(!p1_even){u=sym2;r=sym1}else{u=sym1;r=sym2}var sign=u.fname===COS?-1:1,n=r.power,k=(n-1)/2,trans=_.parse('(1-'+u.fname+core.Utils.inBrackets(arg1)+'^2)^'+k),sym=_.expand(_.multiply(new Symbol(sign),_.multiply(u.clone(),trans)));sym.each(function(x){retval=_.add(retval,__.integration.poly_integrate(x.clone()))})}else{var double_angle=function(symbol){var p=symbol.power,k=p/2,e;if(symbol.fname===COS)e='((1/2)+(cos(2*('+symbol.args[0]+'))/2))^'+k;else e='((1/2)-(cos(2*('+symbol.args[0]+'))/2))^'+k;return _.parse(e)};var a=double_angle(sym1),b=double_angle(sym2),t=_.multiply(a,b);var sym=_.expand(t);sym.each(function(x){retval=_.add(retval,__.integrate(x,dx,depth))});return _.multiply(retval,coeff)}}}}else if(fn1===SEC&&fn2===TAN&&x.isLinear()&&sym2.isLinear()){retval=_.parse(format('sec({0})^({1})/({1})',sym1.args[0],sym1.power))}else if(fn1===TAN&&fn2===SEC&&x.isLinear()){if(sym1.isLinear()&&sym2.isLinear()){retval=_.divide(_.symfunction(SEC,[arg1.clone()]),a)}else if(even(sym1.power)){var p=Number(sym1.power)/2;var t=_.parse(format('(sec({0})^2-1)^({1})',sym1.args[0],p));retval=__.integrate(_.expand(_.multiply(t,sym2)),dx,depth)}else __.integration.stop()}else if(fn1===SEC&&fn2===COS){sym1.fname=COS;sym1.invert().updateHash();retval=__.integrate(_.multiply(sym1,sym2),dx,depth)}else if(fn1===SIN&&fn2===CSC){sym2.fname=SIN;sym2.invert().updateHash();retval=__.integrate(_.multiply(sym1,sym2),dx,depth)}else if(fn1===TAN&&(fn2===COS||fn2===SIN)&&sym2.power.lessThan(0)){var t=_.multiply(sym1.fnTransform(),sym2);retval=__.integrate(_.expand(t),dx,depth)}else{var t=_.multiply(sym1.fnTransform(),sym2.fnTransform());retval=__.integrate(_.expand(t),dx,depth)}}else if((fn1===SIN||fn1===COS)&&(fn2===SIN||fn2===COS)){var transformed=trigTransform(symbols);retval=__.integrate(_.expand(transformed),dx,depth)}else{__.integration.stop()}}}else if(g1===FN&&g2===S){var sym1_is_linear=sym1.isLinear();if(sym1.fname===COS&&sym1_is_linear&&sym2.power.equals(-1))retval=_.symfunction('Ci',[sym1.args[0]]);else if(sym1.fname===COS&&sym2.power.equals(-1)){retval=__.integrate(_.multiply(sym1.fnTransform(),sym2.clone()),dx,depth)}else if(sym1.fname===COSH&&sym1_is_linear&&sym2.power.equals(-1))retval=_.symfunction('Chi',[sym1.args[0]]);else if(sym1.fname===COSH&&sym2.power.equals(-1)){retval=__.integrate(_.multiply(sym1.fnTransform(),sym2.clone()),dx,depth)}else if(sym1.fname===SIN&&sym1_is_linear&&sym2.power.equals(-1))retval=_.symfunction('Si',[sym1.args[0]]);else if(sym1.fname===SIN&&sym2.power.equals(-1)){retval=__.integrate(_.multiply(sym1.fnTransform(),sym2.clone()),dx,depth)}else if(sym1.fname===SINH&&sym1_is_linear&&sym2.power.equals(-1))retval=_.symfunction('Shi',[sym1.args[0]]);else if(sym1.fname===SINH&&sym2.power.equals(-1)){retval=__.integrate(_.multiply(sym1.fnTransform(),sym2.clone()),dx,depth)}else if(sym1.fname===LN&&sym2.power.equals(-1)){retval=__.integration.poly_integrate(sym1,dx,depth)}else if(sym1.fname==='erf'){if(sym2.power.equals(1)){var dc=__.integration.decompose_arg(sym1.args[0],dx),a_=dc[0],x_=dc[1],arg=sym1.args[0].toString();retval=_.parse(format('(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)',a_,x_,arg))}}else{retval=__.integration.by_parts(symbol,dx,depth,opt)}}else if(g1===EX&&g2===S){var x=fn1===LN?__.integration.decompose_arg(sym1.args[0],dx)[1]:null;if(sym1.isE()&&(sym1.power.group===S||sym1.power.group===CB)&&sym2.power.equals(-1)){retval=_.symfunction('Ei',[sym1.power.clone()])}else if(fn1===LN&&x.value===sym2.value){retval=__.integration.poly_integrate(sym1,dx,depth)}else retval=__.integration.by_parts(symbol,dx,depth,opt)}else if(g1===PL&&g2===S){if(sym2.value===sym1.value&&sym1.power.equals(-1)){var pd=Math.min.apply(null,core.Utils.keys(sym1.symbols));var pc=Math.min(pd,sym2.power);var factor=sym2.clone();factor.power=new Frac(pc);sym2=_.divide(sym2,factor.clone());var t=new Symbol(0);sym1.each(function(x){t=_.add(t,_.divide(x.clone(),factor.clone()))});t.multiplier=sym1.multiplier;symbol=_.divide(sym2,t)}retval=__.integration.partial_fraction(symbol,dx,depth)}else if(g1===CP&&g2===S){var f=sym1.clone().toLinear(),f_is_linear=core.Algebra.degree(f,_.parse(dx)).equals(1);if(sym1.power.equals(-1/2)){var decomp=__.integration.decompose_arg(sym1.clone().toLinear(),dx);var a=decomp[0].negate(),x=decomp[1],b=decomp[3],p=Number(sym2.power);if(isInt(p)&&core.Utils.even(p)&&x.power.equals(2)){var c=_.divide(_.multiply(_.pow(b.clone(),new Symbol(2)),_.symfunction(SQRT,[_.divide(b.clone(),a.clone())])),_.pow(a.clone(),new Symbol(2)));c=_.multiply(c,_.symfunction(SQRT,[b]).invert());var dummy=_.parse('sin(u)');dummy.power=dummy.power.multiply(sym2.power);var integral=__.integrate(dummy,'u',depth);var bksub=_.parse(ASIN+'('+SQRT+'('+a+'/'+b+')*'+dx+')');retval=_.multiply(c,integral.sub(new Symbol('u'),bksub))}}else if(sym1.power.equals(-1)&&sym2.isLinear()&&f_is_linear){retval=__.integration.partial_fraction(symbol,dx,depth)}else if(!sym1.power.lessThan(0)&&isInt(sym1.power)){var expanded=_.expand(sym1);retval=new Symbol(0);expanded.each(function(x){if(x.group===PL){x.each(function(y){retval=_.add(retval,__.integrate(_.multiply(sym2.clone(),y),dx,depth))})}else retval=_.add(retval,__.integrate(_.multiply(sym2.clone(),x),dx,depth))})}else if(sym1.power.lessThan(-2)){retval=__.integration.by_parts(symbol,dx,depth,opt)}else if(sym1.power.lessThan(0)&&sym2.power.greaterThan(1)){var decomp=__.integration.decompose_arg(sym1.clone().toLinear(),dx),a=decomp[0].negate(),x=decomp[1],b=decomp[3],fn=sym1.clone().toLinear();if(x.group!==PL&&x.isLinear()){var p=Number(sym2.power),du='_u_',u=new Symbol(du),U=_.expand(_.divide(_.pow(_.subtract(u.clone(),b.clone()),new Symbol(p)),u.clone())),scope={};scope[du]=fn;var U2=_.parse(U,scope);retval=__.integrate(U2,dx,0)}else if(sym2.power.greaterThan(x.power)||sym2.power.equals(x.power)){var factors=new core.Algebra.Classes.Factors();sym1=core.Algebra.Factor.coeffFactor(sym1.invert(),factors);retval=new Symbol(0);core.Algebra.divide(sym2,sym1).each(function(t){retval=_.add(retval,__.integrate(t,dx,depth))});factors.each(function(factor){retval=_.divide(retval,factor)});retval=_.expand(retval)}else retval=__.integration.partial_fraction(symbol,dx,depth)}else{if(sym1.power.den.equals(2)){var dc=__.integration.decompose_arg(sym1.clone().toLinear(),dx),a=dc[3],x=dc[1],b=dc[0],bx=dc[2];if(x.power.equals(2)&&b.lessThan(0)){if(!a.equals(1)){coeff=_.multiply(coeff,_.pow(a,new Symbol(2)))}var u=dx;var c=_.divide(_.pow(b.clone().negate(),new Symbol(1/2)),_.pow(a,new Symbol(1/2))),du=_.symfunction(COS,[new Symbol(u)]),cosn=_.pow(_.symfunction(COS,[new Symbol(u)]),new Symbol(sym1.power.num)),X=_.pow(_.symfunction(SIN,[new Symbol(u)]),new Symbol(sym2.power)),val=_.multiply(_.multiply(cosn,du),X),integral=__.integrate(val,u,depth);retval=integral.sub(u,_.symfunction(ASIN,[_.multiply(new Symbol(dx),c)]))}}else if(f_is_linear)retval=__.integration.partial_fraction(symbol,dx,depth)}}else if(sym1.isComposite()&&sym2.isComposite()){retval=new Symbol(0);if(sym1.power.greaterThan(0)&&sym2.power.greaterThan(0)){var sym=_.expand(symbol);sym.each(function(x){retval=_.add(retval,__.integrate(x,dx,depth))},!0)}else{var p1=Number(sym1.power),p2=Number(sym2.power);if(p1<0&&p2>0){var t=sym1;sym1=sym2;sym2=t}sym1.each(function(x){retval=_.add(retval,__.integrate(_.multiply(x,sym2.clone()),dx,depth))})}}else if(g1===CP&&symbols[0].power.greaterThan(0)){sym1=_.expand(sym1);retval=new Symbol(0);sym1.each(function(x){retval=_.add(retval,__.integrate(_.multiply(x,sym2.clone()),dx,depth))},!0)}else if(g1===FN&&g2===EX&&core.Utils.in_htrig(sym1.fname)){sym1=sym1.fnTransform();retval=__.integrate(_.expand(_.multiply(sym1,sym2)),dx,depth)}else if(g1===FN&&g2===CP||g2===FN&&g1===CP){if(g2===FN&&g1===CP){var t=sym1;sym1=sym2;sym2=t}var du,sym2_clone,p,q,sa,sb;du=Symbol.unwrapSQRT(__.diff(sym1.clone(),dx),!0);sym2_clone=Symbol.unwrapSQRT(sym2,!0);if(du.power.equals(sym2_clone.power)){p=new Symbol(sym2.power);sa=du.clone().toLinear();sb=sym2.clone().toLinear();q=core.Algebra.divide(sa.toLinear(),sb);if(q.isConstant()){var nq=_.pow(q,p.negate());retval=_.multiply(nq,__.integration.poly_integrate(sym1.clone()))}}else{retval=__.integration.by_parts(symbol,dx,depth,opt)}}else{retval=__.integration.by_parts(symbol,dx,depth,opt)}}}else if(l===3&&(symbols[2].group===S&&symbols[2].power.lessThan(2)||symbols[0].group===CP)){var first=symbols[0];if(first.group===CP){if(first.power.greaterThan(1))first=_.expand(first);var r=_.multiply(symbols[1],symbols[2]);retval=new Symbol(0);first.each(function(x){var t=_.multiply(x,r.clone());var intg=__.integrate(t,dx,depth);retval=_.add(retval,intg)},!0)}else{retval=__.integration.by_parts(symbol,dx,depth,opt)}}else if(all_functions(symbols)){var t=new Symbol(1);for(var i=0,l=symbols.length;i<l;i++){t=_.multiply(t,symbols[i].fnTransform())}t=_.expand(t);retval=__.integrate(t,dx,depth)}else{var transformed=trigTransform(symbols);retval=__.integrate(_.expand(transformed),dx,depth)}}retval=_.multiply(retval,coeff)}if(retval)return retval}catch(error){if(!(error instanceof NoIntegralFound||error instanceof core.exceptions.DivisionByZero))throw error}return _.symfunction('integrate',[original_symbol,dt])},!1)},defint:function(symbol,from,to,dx){var vars=core.Utils.variables(symbol),integral=__.integrate(symbol,dx),retval;if(vars.length===1)dx=vars[0];if(!integral.hasIntegral()){var upper={},lower={},a,b;upper[dx]=to;lower[dx]=from;a=_.parse(integral,upper);b=_.parse(integral,lower);retval=_.subtract(a,b)}else if(vars.length===1&&from.isConstant()&&to.isConstant()){var f=core.Utils.build(symbol);retval=new Symbol(core.Math2.num_integrate(f,Number(from),Number(to)))}else retval=_.symfunction('defint',[symbol,from,to,dx]);return retval},limit:function(symbol,x,c){var evaluate=function(symbol){try{return _.parse(symbol.sub(x,c))}catch(e){if(e instanceof core.exceptions.UndefinedError)return undefined;throw new Error('Stopping!')}};try{var a,b,num,den,retval,safety,f,g;num=symbol.getNum();den=symbol.getDenom();a=evaluate(num);b=evaluate(den);safety=10;f=num;g=den;var iter=0;while(typeof a==='undefined'&&typeof b==='undefined'||a.equals(0)&&b.equals(0)||a.isInfinty&&b.isInfinity){if(iter>safety){var subs={};subs[x]=c;try{return core.Utils.block('PARSE2NUMBER',function(){return _.parse(symbol,subs)},!0)}catch(e){throw core.exceptions.MaximumIterationsReached()}}f=__.diff(f,x);g=__.diff(g,x);a=evaluate(f.clone());b=evaluate(g.clone());iter++}if(a.isConstant(!0)||b.isConstant(!0)){if(b.equals(0))retval=Symbol.infinity();else retval=_.divide(a,b)}else if(a.isInfinity)retval=a;else if(b.isInfinity)retval=b;return retval}catch(e){return _.symfunction('limit',arguments)}}};nerdamer.register([{name:'diff',visible:!0,numargs:[1,3],build:function(){return __.diff}},{name:'sum',visible:!0,numargs:4,build:function(){return __.sum}},{name:'product',visible:!0,numargs:4,build:function(){return __.product}},{name:'integrate',visible:!0,numargs:[1,2],build:function(){return __.integrate}},{name:'defint',visible:!0,numargs:[3,4],build:function(){return __.defint}},{name:'limit',visible:!0,numargs:3,build:function(){return __.limit}}]);nerdamer.api()})()